{"version":3,"sources":["assets/cover.jpg","actions/songActions.js","actions/types.js","components/Playlists.js","actions/playlistsActions.js","components/IconButton.js","components/PlaybackButtons.js","components/Cover.js","components/SongProgress.js","components/Slider.js","actions/index.js","components/Volume.js","components/Header.js","components/containers/ContainerOuter.js","components/containers/ContainerInner.js","components/LoginButton.js","components/SettingsSwitches.js","scripts/createDynamicTheme.js","components/Layout.js","components/App.js","reducers/uiReducer.js","reducers/userReducer.js","reducers/playlistsReducer.js","reducers/songsReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","playSong","song","type","getSongIndex","songIndex","getSongFeatures","songId","accessToken","dispatch","request","Request","concat","headers","Headers","Authorization","fetch","then","res","statusText","window","location","href","json","features","catch","err","Playlists","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedIndexPL","playlists","playlistIndex","selectedIndexSong","prevProps","userId","token","fetchPlaylists","setState","_this2","map","playlist","index","react_default","a","createElement","ListItem_default","variant","button","selected","key","id","onClick","FetchSongs","ListItemText_default","primary","name","Fragment","ms","minutes","Math","floor","seconds","toFixed","playlistId","songs","fetchPlaylistSongs","getPlaylistIndex","playAudio","track","_this3","classes","className","content","Table_default","table","TableHead_default","TableRow_default","TableCell_default","tableC","align","TableBody_default","row","tableRow","hover","SelectSongToPlay","component","scope","artists","msToMinutesAndSeconds","duration_ms","Typography_default","playTitle","noWrap","tracklistTotal","length","root","Drawer_default","drawer","paper","drawerPaper","anchor","List_default","renderList","renderTrackList","React","Component","mapDispatchToProps","items","fetchPlaylistSongsSuccess","connect","userReducer","user","tokenReducer","playlistsReducer","songsReducer","selectedSongId","withStyles","theme","display","maxHeight","width","flexShrink","position","background","overflow","scrollbarWidth","&::-webkit-scrollbar","height","flexGrow","padding","spacing","unit","maxWidth","borderBottomColor","palette","divider","marginLeft","marginTop","&:hover","cursor","selectedSongText","color","iconHover","main","light","Icon_default","style","fontSize","iconSize","iconName","PlaybackButtons","handleClickNext","_this$props","songList","handleClickPrevious","_this$props2","handleClickPlayPause","_this$props3","songPlaying","songPaused","resumeAudio","pauseAudio","playPauseIcon","Grid_default","container","direction","item","index_es","disableRipple","buttonSO","components_IconButton","songDetails","backgroundColor","image","img","margin","boxShadow","xs","alt","src","albumcover","SongProgress","secondFormatter","number","roundedSeconds","ceil","Slider_default","min","max","step","slider","trackThickness","thumb","thumbIcon","activated","jumped","focused","value","songsInfo","timeElapsed","elapsedTimeMargin","totalTimeMargin","verticalAlign","float","opacity","&$activated","&$jumped","SliderComp","handleChange","event","updateVolume","volume","onChange","onDragEnd","jumpAtTime","soundReducer","&:hover $thumbIcon","Volume","ico","components_Slider","volIcon","marginRight","outer","bcolor","children","inner","transform","fab","text","paddingBottom","Fab_default","spotifyauthurl","SettingsPanel","handleChangeSettings","defineProperty","target","checked","toggleHiddenPlaylist","toggleDynamicColor","toggleDarkMode","hiddenPlaylist","switchState","uiHiddenPlaylist","dynamicColor","uiDynamicColor","darkMode","uiDarkMode","Paper_default","FormControl_default","fieldSet","FormGroup_default","FormControlLabel_default","control","Switch_default","label","uiSwitches","top","right","left","wholeSet","colors","red","shadeText","deepOrange","orange","amber","yellow","lime","lightGreen","green","teal","cyan","lightBlue","blue","indigo","deepPurple","energyToColor","energy","round","valenceToShade","valence","colorShade","colorIndex","isTextDark","hexToRGBA","hex","alpha","hexs","replace","parseInt","substring","themeDark","createMuiTheme","secondary","typography","useNextVariants","themeLight","Layout","open","dynamicCover","defaultCover","dynamicBGColor","dynamicDarkText","stopSong","audio","pause","updateSongTime","clearInterval","routine","resumeSong","play","calculateTime","pauseSong","preview_url","undefined","Audio","handleClickSettings","handleClickAway","songFeatures","album","images","url","setInterval","ended","currentTime","_this$state","document","body","backgroundImage","styles","containers_ContainerOuter","containers_ContainerInner","justify","alignItems","gridContainer","wrap","iconPlaceholder","zeroMinWidth","components_Header","auth","ClickAwayListener_default","onClickAway","IconButton_default","iconSelection","SettingsSwitches","topRow","components_Cover","components_Playlists","components_LoginButton","components_PlaybackButtons","components_SongProgress","sm","components_Volume","time","ContainerOuter","ContainerInner","App","e","hashParams","r","q","hash","exec","decodeURIComponent","access_token","setToken","fetchUser","CssBaseline_default","components_Layout","defaultState","uiReducer","arguments","objectSpread","action","fetchUserError","fetchPlaylistsPending","fetchPlaylistError","fetchSongsPending","viewType","fetchArtistSongsError","fetchArtistSongsPending","getSongFeaturesError","getSongFeaturesPending","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.15d0d6cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.1602b481.jpg\";","import {\r\n  PLAY_SONG,\r\n  STOP_SONG,\r\n  PAUSE_SONG,\r\n  RESUME_SONG,\r\n  UPDATE_SONG_TIME,\r\n  GET_SONG_FEATURES_ERROR,\r\n  GET_SONG_FEATURES_PENDING,\r\n  GET_SONG_FEATURES_SUCCESS,\r\n  GET_SONG_INDEX\r\n} from \"./types\";\r\n\r\nexport const playSong = song => {\r\n  return {\r\n    type: PLAY_SONG,\r\n    song\r\n  };\r\n};\r\n\r\nexport const stopSong = () => {\r\n  return {\r\n    type: STOP_SONG\r\n  };\r\n};\r\n\r\nexport const pauseSong = () => {\r\n  return {\r\n    type: PAUSE_SONG\r\n  };\r\n};\r\n\r\nexport const resumeSong = () => {\r\n  return {\r\n    type: RESUME_SONG\r\n  };\r\n};\r\n\r\nexport const updateSongTime = time => {\r\n  return {\r\n    type: UPDATE_SONG_TIME,\r\n    time\r\n  };\r\n};\r\nexport const getSongIndex = songIndex => {\r\n  return {\r\n    type: GET_SONG_INDEX,\r\n    songIndex\r\n  };\r\n};\r\n\r\nexport const getSongFeaturesError = () => {\r\n  return {\r\n    type: GET_SONG_FEATURES_ERROR\r\n  };\r\n};\r\n\r\nexport const getSongFeaturesPending = () => {\r\n  return {\r\n    type: GET_SONG_FEATURES_PENDING\r\n  };\r\n};\r\n\r\nexport const getSongFeaturesSuccess = features => {\r\n  return {\r\n    type: GET_SONG_FEATURES_SUCCESS,\r\n    features\r\n  };\r\n};\r\n\r\nexport const getSongFeatures = (songId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(\r\n      `https://api.spotify.com/v1/audio-features/${songId}`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: \"Bearer \" + accessToken\r\n        })\r\n      }\r\n    );\r\n    dispatch(getSongFeaturesPending());\r\n    fetch(request)\r\n      .then(res => {\r\n        if (res.statusText === \"Unauthorized\") {\r\n          window.location.href = \"./\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(getSongFeaturesSuccess(res));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getSongFeaturesError(err));\r\n      });\r\n  };\r\n};\r\n","export const FETCH_PLAYLISTS = \"FETCH_PLAYLISTS\";\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_HIDE_PLAYLIST = \"TOGGLE_HIDE_PLAYLIST\";\r\nexport const TOGGLE_DYNAMIC_COLOR = \"TOGGLE_DYNAMIC_COLOR\";\r\nexport const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\";\r\nexport const FETCH_PLAYLISTS_SUCCESS = \"FETCH_PLAYLISTS_SUCCESS\";\r\nexport const FETCH_PLAYLISTS_ERROR = \"FETCH_PLAYLISTS_ERROR\";\r\nexport const FETCH_PLAYLISTS_PENDING = \"FETCH_PLAYLISTS_PENDING\";\r\nexport const FETCH_PLAYLIST_SONGS_PENDING = \"FETCH_PLAYLIST_SONGS_PENDING\";\r\nexport const FETCH_PLAYLIST_SONGS_SUCCESS = \"FETCH_PLAYLIST_SONGS_SUCCESS\";\r\nexport const FETCH_PLAYLIST_SONGS_ERROR = \"FETCH_PLAYLIST_SONGS_ERROR\";\r\nexport const PLAY_SONG = \"PLAY_SONG\";\r\nexport const STOP_SONG = \"STOP_SONG\";\r\nexport const PAUSE_SONG = \"PAUSE_SONG\";\r\nexport const RESUME_SONG = \"RESUME_SONG\";\r\nexport const GET_PLAYLIST_INDEX = \"GET_PLAYLIST_INDEX\";\r\nexport const UPDATE_SONG_TIME = \"UPDATE_SONG_TIME\";\r\nexport const GET_SONG_FEATURES_SUCCESS = \"GET_SONG_FEATURES_SUCCESS\";\r\nexport const GET_SONG_FEATURES_ERROR = \"GET_SONG_FEATURES_ERROR\";\r\nexport const GET_SONG_FEATURES_PENDING = \"GET_SONG_FEATURES_PENDING\";\r\nexport const GET_SONG_INDEX = \"GET_SONG_INDEX\";\r\nexport const UPDATE_VOLUME = \"UPDATE_VOLUME\";\r\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\r\nexport const FETCH_USER_ERROR = \"FETCH_USER_ERROR\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchPlaylists,\r\n  fetchPlaylistSongs,\r\n  getPlaylistIndex\r\n} from \"../actions/playlistsActions\";\r\nimport {\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex\r\n} from \"../actions/songActions\";\r\n\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    maxHeight: \"640px\" //height of spotify album cover\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    position: \"relative\",\r\n    background: \"transparent\",\r\n    overflow: \"auto\",\r\n    scrollbarWidth: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0\",\r\n      height: \"0\"\r\n    }\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 0,\r\n    overflow: \"auto\",\r\n    scrollbarWidth: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0\",\r\n      height: \"0\"\r\n    }\r\n  },\r\n  table: {\r\n    maxWidth: 500\r\n  },\r\n  tableC: {\r\n    borderBottomColor: theme.palette.divider\r\n  },\r\n  playTitle: {\r\n    position: \"absolute\",\r\n    marginLeft: \"15px\",\r\n    marginTop: \"-25px\"\r\n  },\r\n  tracklistTotal: {\r\n    position: \"absolute\",\r\n    marginLeft: \"265px\",\r\n    marginTop: \"640px\"\r\n  },\r\n  tableRow: {\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  },\r\n  selectedSongText: {\r\n    color: \"#1DB954\"\r\n  }\r\n});\r\n\r\nclass Playlists extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedIndexPL: this.props.playlists.playlistIndex,\r\n      selectedIndexSong: this.props.songIndex\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps) {\r\n      if (this.props.userId !== prevProps.userId) {\r\n        if (this.props.userId !== \"\" && this.props.token !== \"\") {\r\n          this.props.fetchPlaylists(this.props.userId, this.props.token);\r\n        }\r\n      }\r\n    }\r\n    if (this.props.songIndex !== prevProps.songIndex) {\r\n      this.setState({ selectedIndexSong: this.props.songIndex });\r\n    }\r\n  }\r\n\r\n  renderList() {\r\n    if (this.props.playlists.playlists) {\r\n      return this.props.playlists.playlists.map((playlist, index) => {\r\n        return (\r\n          <ListItem\r\n            variant=\"body2\"\r\n            button\r\n            selected={this.state.selectedIndexPL === index}\r\n            key={playlist.id}\r\n            onClick={() =>\r\n              this.FetchSongs(\r\n                this.props.userId,\r\n                playlist.id,\r\n                this.props.token,\r\n                index\r\n              )\r\n            }\r\n          >\r\n            <ListItemText primary={playlist.name} />\r\n          </ListItem>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <ListItem variant=\"body2\" key=\"generic\">\r\n            <ListItemText primary=\"Loading Playlists...\" />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  msToMinutesAndSeconds(ms) {\r\n    const minutes = Math.floor(ms / 60000);\r\n    const seconds = ((ms % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  }\r\n\r\n  FetchSongs(userId, playlistId, token, index) {\r\n    //We avoid fetching the same playlist\r\n    if (this.props.songs.playlistId !== playlistId) {\r\n      this.props.fetchPlaylistSongs(userId, playlistId, token);\r\n      this.props.getPlaylistIndex(index);\r\n      this.props.getSongIndex(null);\r\n      //\r\n      this.setState({ selectedIndexPL: index });\r\n      this.setState({ selectedIndexSong: null });\r\n    }\r\n  }\r\n\r\n  SelectSongToPlay(song, index) {\r\n    this.props.playAudio(song);\r\n    //this.props.playSong(song.track);\r\n    this.props.getSongFeatures(song.track.id, this.props.token);\r\n    this.props.getSongIndex(index);\r\n    this.setState({ selectedIndexSong: index });\r\n  }\r\n\r\n  renderTrackList() {\r\n    const { classes } = this.props;\r\n    if (this.props.songs.songs) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className={classes.content}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow key=\"headertable\">\r\n                  <TableCell className={classes.tableC}>TITLE</TableCell>\r\n                  <TableCell className={classes.tableC} align=\"left\">\r\n                    ARTIST\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableC} align=\"left\">\r\n                    DURATION\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.props.songs.songs.map((row, index) => (\r\n                  <TableRow\r\n                    selected={\r\n                      this.state.selectedIndexSong === index ? true : false\r\n                    }\r\n                    className={classes.tableRow}\r\n                    hover={true}\r\n                    key={index + \"\" + row.track.id}\r\n                    onClick={() => this.SelectSongToPlay(row, index)}\r\n                  >\r\n                    <TableCell\r\n                      className={classes.tableC}\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                    >\r\n                      {row.track.name}\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableC} align=\"left\">\r\n                      {row.track.artists[0].name}\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableC} align=\"left\">\r\n                      {this.msToMinutesAndSeconds(row.track.duration_ms)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Typography className={classes.playTitle} variant=\"overline\" noWrap>\r\n          PLAYLISTS\r\n        </Typography>\r\n        <Typography\r\n          className={classes.tracklistTotal}\r\n          variant=\"overline\"\r\n          noWrap\r\n        >\r\n          {this.props.songs.songs\r\n            ? this.props.songs.songs.length + \" SONGS\"\r\n            : null}\r\n        </Typography>\r\n        <div className={classes.root}>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            anchor=\"left\"\r\n          >\r\n            <List component=\"nav\">{this.renderList()}</List>\r\n          </Drawer>\r\n          {this.renderTrackList()}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userId: state.userReducer.user ? state.userReducer.user.id : \"\",\r\n    token: state.tokenReducer.token ? state.tokenReducer.token : \"\",\r\n    playlists: state.playlistsReducer,\r\n    songs: state.songsReducer.songs ? state.songsReducer : \"\",\r\n    selectedSongId: state.songsReducer.songId,\r\n    songIndex: state.songsReducer.songIndex\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchPlaylists,\r\n  fetchPlaylistSongs,\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex,\r\n  getPlaylistIndex\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Playlists));\r\n","import {\r\n  FETCH_PLAYLISTS_ERROR,\r\n  FETCH_PLAYLISTS_SUCCESS,\r\n  FETCH_PLAYLISTS_PENDING,\r\n  FETCH_PLAYLIST_SONGS_ERROR,\r\n  FETCH_PLAYLIST_SONGS_PENDING,\r\n  FETCH_PLAYLIST_SONGS_SUCCESS,\r\n  GET_PLAYLIST_INDEX\r\n} from \"./types\";\r\n\r\nexport const getPlaylistIndex = playlistIndex => {\r\n  return {\r\n    type: GET_PLAYLIST_INDEX,\r\n    playlistIndex\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsPending = () => {\r\n  return {\r\n    type: FETCH_PLAYLISTS_PENDING\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsSuccess = playlists => {\r\n  return {\r\n    type: FETCH_PLAYLISTS_SUCCESS,\r\n    playlists\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsError = () => {\r\n  return {\r\n    type: FETCH_PLAYLISTS_ERROR\r\n  };\r\n};\r\n\r\nexport const fetchPlaylists = (userId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(\r\n      `https://api.spotify.com/v1/users/${userId}/playlists?limit=50`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: \"Bearer \" + accessToken\r\n        })\r\n      }\r\n    );\r\n\r\n    dispatch(fetchPlaylistsPending());\r\n\r\n    fetch(request)\r\n      .then(res => {\r\n        if (res.statusText === \"Unauthorized\") {\r\n          window.location.href = \"./\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(fetchPlaylistsSuccess(res.items));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchPlaylistsError(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsPending = () => {\r\n  return {\r\n    type: FETCH_PLAYLIST_SONGS_PENDING\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsSuccess = (songs, playlistId) => {\r\n  return {\r\n    type: FETCH_PLAYLIST_SONGS_SUCCESS,\r\n    songs,\r\n    playlistId\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsError = () => {\r\n  return {\r\n    type: FETCH_PLAYLIST_SONGS_ERROR\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongs = (userId, playlistId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(\r\n      `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: \"Bearer \" + accessToken\r\n        })\r\n      }\r\n    );\r\n\r\n    dispatch(fetchPlaylistSongsPending());\r\n\r\n    fetch(request)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(fetchPlaylistSongsSuccess(res.items, playlistId));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchPlaylistSongsError(err));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nconst styles = theme => ({\r\n  iconHover: {\r\n    color: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.light\r\n    }\r\n  }\r\n});\r\n\r\nconst IconButton = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <Icon className={classes.iconHover} style={{ fontSize: props.iconSize }}>\r\n      {props.iconName}\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(IconButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, IconButton } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconBCustom from \"./IconButton\";\r\nimport {\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex\r\n} from \"../actions/songActions\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  buttonSO: {\r\n    padding: \"0px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  }\r\n};\r\n\r\nclass PlaybackButtons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playPauseIcon: !props.songPaused ? \"pause\" : \"play_arrow\"\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.songPaused !== prevProps.songPaused) {\r\n      this.setState({\r\n        playPauseIcon: !this.props.songPaused ? \"pause\" : \"play_arrow\"\r\n      });\r\n    }\r\n  }\r\n  handleClickNext = () => {\r\n    const { songList, songId, songIndex, token } = this.props;\r\n\r\n    if (songId) {\r\n      if (songIndex + 1 >= songList.length) {\r\n        //back to zero because we ran out of songs\r\n        this.props.playAudio(songList[0]);\r\n        this.props.playSong(songList[0].track);\r\n        this.props.getSongFeatures(songList[0].track.id, token);\r\n        this.props.getSongIndex(0);\r\n      } else {\r\n        this.props.playAudio(songList[songIndex + 1]);\r\n        this.props.playSong(songList[songIndex + 1].track);\r\n        this.props.getSongFeatures(songList[songIndex + 1].track.id, token);\r\n        this.props.getSongIndex(songIndex + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClickPrevious = () => {\r\n    const { songList, songId, songIndex, token } = this.props;\r\n    if (songId) {\r\n      if (songIndex === 0) {\r\n        //Play the last song of the playlist since there is no previous song\r\n        this.props.getSongIndex(songList.length - 1);\r\n        this.props.playSong(songList[songList.length - 1].track);\r\n        this.props.getSongFeatures(\r\n          songList[songList.length - 1].track.id,\r\n          token\r\n        );\r\n        this.props.playAudio(songList[songList.length - 1]);\r\n      } else {\r\n        this.props.getSongIndex(songIndex - 1);\r\n        this.props.playSong(songList[songIndex - 1].track);\r\n        this.props.getSongFeatures(songList[songIndex - 1].track.id, token);\r\n        this.props.playAudio(songList[songIndex - 1]);\r\n      }\r\n    }\r\n  };\r\n  handleClickPlayPause = () => {\r\n    const { songPlaying, songPaused, songId, songList, songIndex } = this.props;\r\n    if (songPlaying && songPaused) {\r\n      this.props.resumeAudio();\r\n    }\r\n    if (songPlaying && !songPaused) {\r\n      this.props.pauseAudio();\r\n    }\r\n    if (!songPlaying && songId) {\r\n      //Song selected but it's not being played, let's play it again then\r\n      this.props.playSong(songList[songIndex].track);\r\n      this.props.playAudio(songList[songIndex]);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Grid className={classes.root} container direction=\"row\" spacing={0}>\r\n        <Grid item>\r\n          <IconButton\r\n            disableRipple={true}\r\n            className={classes.buttonSO}\r\n            onClick={this.handleClickPrevious}\r\n          >\r\n            <IconBCustom iconName=\"skip_previous\" iconSize={40} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            disableRipple={true}\r\n            className={classes.buttonSO}\r\n            onClick={this.handleClickPlayPause}\r\n          >\r\n            <IconBCustom iconName={this.state.playPauseIcon} iconSize={40} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            disableRipple={true}\r\n            className={classes.buttonSO}\r\n            onClick={this.handleClickNext}\r\n          >\r\n            <IconBCustom iconName=\"skip_next\" iconSize={40} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songPaused: state.songsReducer.songPaused,\r\n    songPlaying: state.songsReducer.songPlaying,\r\n    songDetails: state.songsReducer.songDetails,\r\n    songList: state.songsReducer.songs ? state.songsReducer.songs : null,\r\n    songId: state.songsReducer.songId ? state.songsReducer.songId : null,\r\n    songIndex: state.songsReducer.songIndex,\r\n    token: state.tokenReducer.token ? state.tokenReducer.token : \"\"\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(PlaybackButtons));\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst styles = {\r\n  image: {\r\n    maxWidth: \"640px\",\r\n    maxHeight: \"640px\" //640px\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n    boxShadow: \"2px 2px 10px #000000\"\r\n  }\r\n};\r\nconst Cover = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid item xs className={classes.image}>\r\n      <img className={classes.img} alt=\"AnalBumCover\" src={props.albumcover} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default withStyles(styles)(Cover);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 0,\r\n    position: \"relative\"\r\n  },\r\n  elapsedTimeMargin: {\r\n    verticalAlign: \"bottom\",\r\n    float: \"left\",\r\n    marginTop: \"-10px\"\r\n  },\r\n  totalTimeMargin: {\r\n    verticalAlign: \"bottom\",\r\n    float: \"right\",\r\n    marginTop: \"-10px\"\r\n  },\r\n  slider: {\r\n    \"&:hover\": {\r\n      cursor: \"default\"\r\n    },\r\n    padding: \"22px 0px\"\r\n  },\r\n  trackThickness: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: 5\r\n  },\r\n  thumbIcon: {\r\n    opacity: 1,\r\n    \"&:hover\": {\r\n      boxShadow: `0px 0px 0px 5px var(--custom-color)`\r\n    },\r\n    \"&$activated\": {\r\n      boxShadow: `0px 0px 0px 9px var(--custom-color)!important`\r\n    },\r\n    \"&$jumped\": {\r\n      boxShadow: `0px 0px 0px 9px var(--custom-color)!important`\r\n    }\r\n  },\r\n  activated: {},\r\n  jumped: {},\r\n  focused: {}\r\n});\r\n\r\nclass SongProgress extends React.Component {\r\n  secondFormatter = number => {\r\n    const roundedSeconds = Math.ceil(number);\r\n    if (roundedSeconds < 10) {\r\n      return `0:0${roundedSeconds}`;\r\n    } else {\r\n      return `0:${roundedSeconds}`;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Slider\r\n          min={0}\r\n          max={30} //previews are no longer than 30 seconds\r\n          step={1}\r\n          className={classes.root}\r\n          classes={{\r\n            container: classes.slider,\r\n            track: classes.trackThickness,\r\n            thumb: classes.thumbIcon,\r\n            activated: classes.activated,\r\n            jumped: classes.jumped,\r\n            focused: classes.focused\r\n          }}\r\n          value={Math.ceil(this.props.songsInfo.timeElapsed)}\r\n        />\r\n\r\n        <div className={classes.elapsedTimeMargin}>\r\n          <Typography variant=\"caption\" noWrap>\r\n            {this.secondFormatter(this.props.songsInfo.timeElapsed)}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.totalTimeMargin}>\r\n          <Typography variant=\"caption\" noWrap>\r\n            0:30\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songsInfo: state.songsReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(SongProgress));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { updateVolume } from \"../actions/\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  slider: {\r\n    padding: \"22px 0px\",\r\n    \"&:hover $thumbIcon\": {\r\n      opacity: 1\r\n    }\r\n  },\r\n  trackThickness: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: 5\r\n  },\r\n  thumbIcon: {\r\n    opacity: 0\r\n  }\r\n});\r\n\r\nclass SliderComp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: props.volume\r\n    };\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n    this.props.updateVolume(Math.ceil(value));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        className={classes.root}\r\n        classes={{\r\n          container: classes.slider,\r\n          track: classes.trackThickness,\r\n          thumb: classes.thumbIcon\r\n        }}\r\n        value={value}\r\n        onChange={this.handleChange}\r\n        onDragEnd={this.props.jumpAtTime}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    volume: state.soundReducer.volume\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateVolume\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(SliderComp));\r\n","import * as actionTypes from \"./types\";\r\n\r\nexport const setToken = token => {\r\n  return {\r\n    type: actionTypes.SET_TOKEN,\r\n    token\r\n  };\r\n};\r\n\r\nexport const updateVolume = volume => {\r\n  return {\r\n    type: actionTypes.UPDATE_VOLUME,\r\n    volume\r\n  };\r\n};\r\n\r\nexport const toggleHiddenPlaylist = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_HIDE_PLAYLIST\r\n  };\r\n};\r\n\r\nexport const toggleDynamicColor = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_DYNAMIC_COLOR\r\n  };\r\n};\r\n\r\nexport const toggleDarkMode = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_DARK_MODE\r\n  };\r\n};\r\n\r\nexport const fetchUserSuccess = user => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_SUCCESS,\r\n    user\r\n  };\r\n};\r\n\r\nexport const fetchUserError = () => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_ERROR\r\n  };\r\n};\r\n\r\nexport const fetchUser = accessToken => {\r\n  return dispatch => {\r\n    const request = new Request(\"https://api.spotify.com/v1/me\", {\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + accessToken\r\n      })\r\n    });\r\n\r\n    fetch(request)\r\n      .then(res => {\r\n        if (res.statusText === \"Unauthorized\") {\r\n          window.location.href = \"./\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(fetchUserSuccess(res));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchUserError(err));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"./Slider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 0\r\n  },\r\n  volIcon: {\r\n    float: \"right\",\r\n    marginRight: \"-10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  ico: {\r\n    float: \"right\",\r\n    marginTop: \"12px\",\r\n    marginRight: \"5px\",\r\n    color: theme.palette.primary.main\r\n  }\r\n});\r\n\r\nclass Volume extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid className={classes.root} container direction=\"row\">\r\n        <Grid item xs={2}>\r\n          <Icon className={classes.ico} style={{ fontSize: 20 }}>\r\n            volume_up\r\n          </Icon>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Volume);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <Typography variant=\"h4\" color=\"primary\" noWrap>\r\n      {props.songDetails\r\n        ? props.songDetails.artists[0].name + \" - \" + props.songDetails.name\r\n        : null}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songDetails: state.songsReducer.songDetails\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  outer: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.6)\"\r\n  }\r\n};\r\n\r\nconst ContainerOuter = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.outer} style={{ backgroundColor: props.bcolor }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default withStyles(styles)(ContainerOuter);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  inner: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    transform: \"scale(0.89)\"\r\n  }\r\n};\r\n\r\nconst ContainerInner = props => {\r\n  const { classes } = props;\r\n  return <div className={classes.inner}>{props.children}</div>;\r\n};\r\nexport default withStyles(styles)(ContainerInner);\r\n","import React from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst spotifyauthurl = \"https://accounts.spotify.com/authorize?\";\r\nconst client_id = \"11ca528f5f3447c3913e6f903faa8999\"; // Your client id\r\nconst redirect_uri = \"http://shaggun.github.io/spotify-moody-player/callback/\"; // Or Your redirect uri\r\nconst scope =\r\n  \"playlist-read-private%20playlist-read-collaborative%20user-library-read%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state\";\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    backgroundColor: \"#1DB954\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#14813a\"\r\n    }\r\n  },\r\n  container: {\r\n    maxWidth: \"640px\"\r\n  },\r\n  text: {\r\n    paddingBottom: \"30px\"\r\n  }\r\n});\r\n\r\nconst LoginButton = props => {\r\n  const { classes } = props;\r\n\r\n  const reqURL = () => {\r\n    return (window.location.href =\r\n      spotifyauthurl +\r\n      \"client_id=\" +\r\n      client_id +\r\n      \"&scope=\" +\r\n      scope +\r\n      \"&response_type=token\" +\r\n      \"&redirect_uri=\" +\r\n      redirect_uri);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Typography className={classes.text} variant=\"h4\" color=\"primary\">\r\n        The colors will match the mood of the song.\r\n      </Typography>\r\n      <Fab variant=\"extended\" className={classes.fab} onClick={reqURL}>\r\n        <Typography color=\"primary\">LOG IN WITH SPOTIFY</Typography>\r\n      </Fab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(LoginButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport {\r\n  toggleDarkMode,\r\n  toggleDynamicColor,\r\n  toggleHiddenPlaylist\r\n} from \"../actions\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 60,\r\n    right: 0,\r\n    left: -100\r\n  },\r\n  wholeSet: {\r\n    position: \"relative\"\r\n  },\r\n  fieldSet: {\r\n    marginLeft: \"10px\"\r\n  }\r\n});\r\n\r\nclass SettingsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hiddenPlaylist: props.switchState.uiHiddenPlaylist,\r\n      dynamicColor: props.switchState.uiDynamicColor,\r\n      darkMode: props.switchState.uiDarkMode\r\n    };\r\n  }\r\n\r\n  handleChangeSettings = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n    switch (name) {\r\n      case \"hiddenPlaylist\":\r\n        return this.props.toggleHiddenPlaylist();\r\n      case \"dynamicColor\":\r\n        return this.props.toggleDynamicColor();\r\n      case \"darkMode\":\r\n        return this.props.toggleDarkMode();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <FormControl component=\"fieldset\" className={classes.fieldSet}>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={this.state.hiddenPlaylist}\r\n                  onChange={this.handleChangeSettings(\"hiddenPlaylist\")}\r\n                  value=\"hiddenPlay\"\r\n                />\r\n              }\r\n              label=\"Hide Playlist\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={this.state.dynamicColor}\r\n                  onChange={this.handleChangeSettings(\"dynamicColor\")}\r\n                  value=\"dynamicColor\"\r\n                />\r\n              }\r\n              label=\"Dynamic Color\"\r\n            />\r\n            {!this.state.dynamicColor ? (\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={this.state.darkMode}\r\n                    onChange={this.handleChangeSettings(\"darkMode\")}\r\n                    value=\"darkMode\"\r\n                  />\r\n                }\r\n                label=\"Dark Mode\"\r\n              />\r\n            ) : null}\r\n          </FormGroup>\r\n        </FormControl>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    switchState: state.uiSwitches\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleDarkMode,\r\n  toggleDynamicColor,\r\n  toggleHiddenPlaylist\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(SettingsPanel));\r\n","import red from \"@material-ui/core/colors/red\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport lime from \"@material-ui/core/colors/lime\";\r\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport teal from \"@material-ui/core/colors/teal\";\r\nimport cyan from \"@material-ui/core/colors/cyan\";\r\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n//Shade text is the last shade where the text is dark\r\n//a higher shade means that the color is dark enough for the text to change to a light color\r\nconst colorRed = {\r\n  color: red,\r\n  shadeText: 300\r\n};\r\nconst colorDeepOrange = {\r\n  color: deepOrange,\r\n  shadeText: 400\r\n};\r\nconst colorOrange = {\r\n  color: orange,\r\n  shadeText: 700\r\n};\r\nconst colorAmber = {\r\n  color: amber,\r\n  shadeText: 900\r\n};\r\nconst colorYellow = {\r\n  color: yellow,\r\n  shadeText: 900\r\n};\r\nconst colorLime = {\r\n  color: lime,\r\n  shadeText: 800\r\n};\r\nconst colorLightGreen = {\r\n  color: lightGreen,\r\n  shadeText: 600\r\n};\r\nconst colorGreen = {\r\n  color: green,\r\n  shadeText: 500\r\n};\r\nconst colorTeal = {\r\n  color: teal,\r\n  shadeText: 300\r\n};\r\nconst colorCyan = {\r\n  color: cyan,\r\n  shadeText: 600\r\n};\r\nconst colorLightBlue = {\r\n  color: lightBlue,\r\n  shadeText: 500\r\n};\r\nconst colorBlue = {\r\n  color: blue,\r\n  shadeText: 400\r\n};\r\nconst colorIndigo = {\r\n  color: indigo,\r\n  shadeText: 200\r\n};\r\nconst colorDeepPurple = {\r\n  color: deepPurple,\r\n  shadeText: 200\r\n};\r\n\r\nconst colors = [\r\n  colorRed,\r\n  colorDeepOrange,\r\n  colorOrange,\r\n  colorAmber,\r\n  colorYellow,\r\n  colorLime,\r\n  colorLightGreen,\r\n  colorGreen,\r\n  colorTeal,\r\n  colorCyan,\r\n  colorLightBlue,\r\n  colorBlue,\r\n  colorIndigo,\r\n  colorDeepPurple\r\n];\r\n\r\n//It returns an integer [0,13] representing a color according to song's energy\r\n//y=13x\r\nconst energyToColor = energy => Math.round(13 * energy);\r\n\r\n//It returns a shade [100,200,300...,900] representing the color intensity according to how positive a song is\r\n//y=800*x+100\r\nconst valenceToShade = valence => Math.round((800 * valence + 100) / 100) * 100;\r\n\r\n//We create the theme according to energy and valence\r\nexport const createDynamicTheme = (energy, valence) => {\r\n  const colorIndex = energyToColor(energy);\r\n  const colorShade = valenceToShade(valence);\r\n  const dynamicColor = colors[colorIndex].color[colorShade];\r\n  const dynamicTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: dynamicColor\r\n      },\r\n      secondary: {\r\n        main: dynamicColor\r\n      },\r\n      background: {\r\n        paper:\r\n          colors[colorIndex].shadeText <= colorShade ? \"#ffffff\" : \"#424242\"\r\n      },\r\n      text: {\r\n        primary:\r\n          colors[colorIndex].shadeText <= colorShade ? \"#424242\" : \"#ffffff\"\r\n      }\r\n    },\r\n    typography: { useNextVariants: true }\r\n  });\r\n  return dynamicTheme;\r\n};\r\n\r\nexport const colorShade = (energy, valence) => {\r\n  const colorIndex = energyToColor(energy);\r\n  const colorShade = valenceToShade(valence);\r\n  return colors[colorIndex].color[colorShade];\r\n};\r\n\r\nexport const isTextDark = (energy, valence) => {\r\n  const colorIndex = energyToColor(energy);\r\n  const colorShade = valenceToShade(valence);\r\n  return colors[colorIndex].shadeText >= colorShade ? true : false;\r\n};\r\n\r\nexport const hexToRGBA = (hex, alpha) => {\r\n  const hexs = hex.replace(\"#\", \"\");\r\n  const r = parseInt(hexs.substring(0, 2), 16);\r\n  const g = parseInt(hexs.substring(2, 4), 16);\r\n  const b = parseInt(hexs.substring(4, 6), 16);\r\n  return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\r\n};\r\n\r\nexport const rgb2rgba = (color, alpha) => {\r\n  let rgbstringtrimmed = color.slice(0, -1);\r\n  rgbstringtrimmed = rgbstringtrimmed.replace(\"rgb\", \"rgba\");\r\n  return rgbstringtrimmed + `, ${alpha})`;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Playlists from \"./Playlists\";\r\nimport PlaybackButtons from \"./PlaybackButtons\";\r\nimport Cover from \"./Cover\";\r\nimport SongProgress from \"./SongProgress\";\r\nimport Volume from \"./Volume\";\r\nimport IconBCustom from \"./IconButton\";\r\nimport SongHeader from \"./Header\";\r\nimport ContainerOuter from \"./containers/ContainerOuter\";\r\nimport ContainerInner from \"./containers/ContainerInner\";\r\nimport LogInButton from \"./LoginButton\";\r\nimport defaultCover from \"../assets/cover.jpg\";\r\nimport SettingsSwitches from \"./SettingsSwitches\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport {\r\n  colorShade,\r\n  isTextDark,\r\n  hexToRGBA\r\n} from \"../scripts/createDynamicTheme\";\r\nimport {\r\n  playSong,\r\n  stopSong,\r\n  pauseSong,\r\n  resumeSong,\r\n  updateSongTime\r\n} from \"../actions/songActions\";\r\n\r\nconst themeDark = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\", // Switching the dark mode on is a single property value change.\r\n    primary: {\r\n      main: \"#ffffff\",\r\n      light: \"#1DB954\"\r\n    },\r\n    secondary: {\r\n      main: \"#1DB954\"\r\n    }\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nconst themeLight = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n\r\n    primary: {\r\n      main: \"#242424\",\r\n      light: \"#1DB954\"\r\n    },\r\n    secondary: {\r\n      main: \"#1DB954\"\r\n    }\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    height: \"100vh\"\r\n  },\r\n  gridContainer: {},\r\n  topRow: {\r\n    height: \"85vh\",\r\n    overflow: \"hidden\"\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 60,\r\n    right: 0,\r\n    left: -100\r\n  },\r\n  iconSelection: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  iconPlaceholder: {\r\n    color: \"rgba(0,0,0,0)\"\r\n  },\r\n  wholeSet: {\r\n    position: \"relative\"\r\n  },\r\n  fieldSet: {\r\n    marginLeft: \"10px\"\r\n  },\r\n  ContainerOuter: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\"\r\n  },\r\n  ContainerInner: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    transform: \"scale(0.89)\"\r\n  }\r\n});\r\n\r\nclass Layout extends React.Component {\r\n  static audio;\r\n\r\n  state = {\r\n    open: false,\r\n    dynamicCover: defaultCover,\r\n    dynamicBGColor: \"rgba(2,136,209,0.6)\", //default song\r\n    dynamicDarkText: false, //dark text for a light theme according to color shade\r\n    //Switch states\r\n    hiddenPlaylist: false,\r\n    dynamicColor: true,\r\n    darkMode: true\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.songFeatures.energy &&\r\n      this.props.songFeatures !== prevProps.songFeatures\r\n    ) {\r\n      this.setState(state => ({\r\n        dynamicCover: this.props.songDetails.album.images[0].url,\r\n        dynamicBGColor: hexToRGBA(\r\n          colorShade(\r\n            this.props.songFeatures.energy,\r\n            this.props.songFeatures.valence\r\n          ),\r\n          0.6\r\n        ),\r\n        dynamicDarkText: isTextDark(\r\n          this.props.songFeatures.energy,\r\n          this.props.songFeatures.valence\r\n        )\r\n      }));\r\n    }\r\n    if (this.audio !== undefined) {\r\n      this.audio.volume = this.props.volume / 100;\r\n    }\r\n  }\r\n\r\n  calculateTime() {\r\n    const routine = setInterval(() => {\r\n      if (this.audio.ended) {\r\n        this.stopSong();\r\n      } else if (!this.props.songsInfo.songPaused) {\r\n        this.props.updateSongTime(this.audio.currentTime);\r\n      }\r\n    }, 1000);\r\n    this.setState({\r\n      routine: routine\r\n    });\r\n  }\r\n\r\n  stopSong = () => {\r\n    if (this.audio) {\r\n      this.props.stopSong();\r\n      this.audio.pause();\r\n      this.props.updateSongTime(0);\r\n      clearInterval(this.state.routine);\r\n    } else {\r\n      this.props.stopSong();\r\n      this.props.updateSongTime(0);\r\n      clearInterval(this.state.routine);\r\n    }\r\n  };\r\n\r\n  resumeSong = () => {\r\n    if (this.audio) {\r\n      this.props.resumeSong();\r\n      this.audio.play();\r\n      this.calculateTime();\r\n    }\r\n  };\r\n\r\n  pauseSong = () => {\r\n    if (this.audio) {\r\n      this.props.pauseSong();\r\n      this.audio.pause();\r\n      clearInterval(this.state.routine);\r\n    }\r\n  };\r\n\r\n  playAudio = song => {\r\n    const { updateSongTime, playSong } = this.props;\r\n    clearInterval(this.state.routine);\r\n    if (song.track.preview_url !== null) {\r\n      if (this.audio === undefined) {\r\n        this.audio = new Audio(song.track.preview_url);\r\n        playSong(song.track);\r\n        this.audio.play();\r\n        this.calculateTime();\r\n      } else {\r\n        updateSongTime(0);\r\n        this.audio.pause();\r\n        this.audio = new Audio(song.track.preview_url);\r\n        playSong(song.track);\r\n        this.audio.play();\r\n        this.calculateTime();\r\n      }\r\n    } else {\r\n      this.stopSong();\r\n    }\r\n  };\r\n\r\n  handleClickSettings = event => {\r\n    this.setState(state => ({\r\n      open: !state.open\r\n    }));\r\n  };\r\n\r\n  handleClickAway = () => {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  };\r\n\r\n  handleChangeSettings = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open, dynamicCover } = this.state;\r\n    document.body.style.backgroundImage = `url(${dynamicCover})`;\r\n\r\n    return (\r\n      <MuiThemeProvider\r\n        theme={\r\n          this.props.switchState.uiDynamicColor\r\n            ? this.state.dynamicDarkText\r\n              ? themeLight\r\n              : themeDark\r\n            : this.props.switchState.uiDarkMode\r\n            ? themeDark\r\n            : themeLight\r\n        }\r\n      >\r\n        <ContainerOuter\r\n          bcolor={\r\n            this.props.switchState.uiDynamicColor\r\n              ? this.state.dynamicBGColor\r\n              : this.props.switchState.uiDarkMode\r\n              ? \"rgba(0, 0, 0, 0.6)\"\r\n              : \"rgba(255, 255, 255, 0.4)\"\r\n          }\r\n        >\r\n          <ContainerInner>\r\n            <div className={classes.root}>\r\n              <Grid\r\n                container\r\n                justify=\"space-between\"\r\n                alignItems=\"stretch\"\r\n                spacing={16}\r\n                className={classes.gridContainer}\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  spacing={16}\r\n                  wrap=\"nowrap\"\r\n                >\r\n                  <Grid item xs={1}>\r\n                    <Icon\r\n                      className={classes.iconPlaceholder}\r\n                      style={{ fontSize: 40 }}\r\n                    >\r\n                      fiber_manual_record\r\n                    </Icon>\r\n                  </Grid>\r\n                  <Grid item zeroMinWidth>\r\n                    <SongHeader />\r\n                  </Grid>\r\n                  <Grid item xs={1} container justify=\"flex-end\">\r\n                    {this.props.auth.token ? (\r\n                      <div className={classes.wholeSet}>\r\n                        <ClickAwayListener onClickAway={this.handleClickAway}>\r\n                          <div>\r\n                            <IconButton\r\n                              disableRipple={true}\r\n                              className={classes.iconSelection}\r\n                              onClick={this.handleClickSettings}\r\n                            >\r\n                              <IconBCustom\r\n                                iconName=\"more_horiz\"\r\n                                iconSize={40}\r\n                              />\r\n                            </IconButton>\r\n                            {open ? <SettingsSwitches /> : null}\r\n                          </div>\r\n                        </ClickAwayListener>\r\n                      </div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                {this.props.switchState.uiHiddenPlaylist ? (\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    xs={12}\r\n                    direction=\"row\"\r\n                    spacing={16}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={classes.topRow}\r\n                  >\r\n                    <Cover albumcover={dynamicCover} />\r\n                  </Grid>\r\n                ) : (\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    xs={12}\r\n                    direction=\"row\"\r\n                    spacing={16}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" //flex-start\r\n                    className={classes.topRow}\r\n                  >\r\n                    <Grid item container xs justify=\"flex-end\">\r\n                      <Cover albumcover={dynamicCover} />\r\n                    </Grid>\r\n                    <Grid item container xs={6}>\r\n                      {this.props.auth.token ? (\r\n                        <Playlists playAudio={this.playAudio} />\r\n                      ) : (\r\n                        <LogInButton />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  spacing={16}\r\n                >\r\n                  {this.props.auth.token ? (\r\n                    <React.Fragment>\r\n                      <Grid item>\r\n                        <PlaybackButtons\r\n                          pauseAudio={this.pauseSong}\r\n                          resumeAudio={this.resumeSong}\r\n                          playAudio={this.playAudio}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs>\r\n                        <SongProgress />\r\n                      </Grid>\r\n                      <Grid item sm={1}>\r\n                        <Volume />\r\n                      </Grid>\r\n                    </React.Fragment>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </ContainerInner>\r\n        </ContainerOuter>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    switchState: state.uiSwitches,\r\n    auth: state.tokenReducer,\r\n    songDetails: state.songsReducer.songDetails,\r\n    songFeatures: state.songsReducer.features\r\n      ? state.songsReducer.features\r\n      : \"\",\r\n    songsInfo: state.songsReducer,\r\n    volume: state.soundReducer.volume\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  playSong,\r\n  stopSong,\r\n  pauseSong,\r\n  resumeSong,\r\n  updateSongTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Layout));\r\n","import React from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { connect } from \"react-redux\";\r\nimport { setToken, fetchUser } from \"../actions\";\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    let hashParams = {};\r\n    let e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    if (hashParams.access_token) {\r\n      this.props.setToken(hashParams.access_token);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.token !== this.props.token) {\r\n      this.props.fetchUser(this.props.token.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CssBaseline />\r\n        <Layout />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.tokenReducer\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setToken, fetchUser }\r\n)(App);\r\n","import {\r\n  TOGGLE_HIDE_PLAYLIST,\r\n  TOGGLE_DYNAMIC_COLOR,\r\n  TOGGLE_DARK_MODE\r\n} from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  uiHiddenPlaylist: false,\r\n  uiDynamicColor: true,\r\n  uiDarkMode: true\r\n};\r\n\r\nexport const uiReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_HIDE_PLAYLIST:\r\n      return {\r\n        ...state,\r\n        uiHiddenPlaylist: !state.uiHiddenPlaylist\r\n      };\r\n    case TOGGLE_DYNAMIC_COLOR:\r\n      return {\r\n        ...state,\r\n        uiDynamicColor: !state.uiDynamicColor\r\n      };\r\n    case TOGGLE_DARK_MODE:\r\n      return {\r\n        ...state,\r\n        uiDarkMode: !state.uiDarkMode\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import { FETCH_USER_SUCCESS, FETCH_USER_ERROR } from \"../actions/types\";\r\nexport const userReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        fetchUserError: false\r\n      };\r\n\r\n    case FETCH_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        fetchUserError: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import {\r\n  FETCH_PLAYLISTS_SUCCESS,\r\n  FETCH_PLAYLISTS_ERROR,\r\n  FETCH_PLAYLISTS_PENDING,\r\n  GET_PLAYLIST_INDEX\r\n} from \"../actions/types\";\r\n\r\nexport const playlistsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PLAYLISTS_PENDING:\r\n      return {\r\n        fetchPlaylistsPending: true,\r\n        ...state\r\n      };\r\n\r\n    case FETCH_PLAYLISTS_SUCCESS:\r\n      return {\r\n        playlists: action.playlists,\r\n        fetchPlaylistError: false,\r\n        fetchPlaylistsPending: false,\r\n        ...state\r\n      };\r\n\r\n    case FETCH_PLAYLISTS_ERROR:\r\n      return {\r\n        fetchPlaylistError: true,\r\n        fetchPlaylistsPending: false,\r\n        ...state\r\n      };\r\n    case GET_PLAYLIST_INDEX:\r\n      return {\r\n        ...state,\r\n        playlistIndex: action.playlistIndex\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playlistsReducer;\r\n","import {\r\n  FETCH_PLAYLIST_SONGS_ERROR,\r\n  FETCH_PLAYLIST_SONGS_PENDING,\r\n  FETCH_PLAYLIST_SONGS_SUCCESS,\r\n  PLAY_SONG,\r\n  STOP_SONG,\r\n  PAUSE_SONG,\r\n  RESUME_SONG,\r\n  UPDATE_SONG_TIME,\r\n  GET_SONG_FEATURES_ERROR,\r\n  GET_SONG_FEATURES_PENDING,\r\n  GET_SONG_FEATURES_SUCCESS,\r\n  GET_SONG_INDEX\r\n} from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  fetchSongsPending: true,\r\n  songPlaying: false,\r\n  timeElapsed: 0,\r\n  songId: 0,\r\n  viewType: \"songs\",\r\n  songPaused: true\r\n};\r\n\r\nexport const songsReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PLAYLIST_SONGS_PENDING:\r\n      return {\r\n        ...state,\r\n        fetchSongsPending: true\r\n      };\r\n    case FETCH_PLAYLIST_SONGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        songs: action.songs,\r\n        fetchArtistSongsError: false,\r\n        fetchArtistSongsPending: false,\r\n        playlistId: action.playlistId\r\n      };\r\n    case FETCH_PLAYLIST_SONGS_ERROR:\r\n      return {\r\n        ...state,\r\n        fetchArtistSongsError: true,\r\n        fetchArtistSongsPending: false\r\n      };\r\n    case PLAY_SONG:\r\n      return {\r\n        ...state,\r\n        songPlaying: true,\r\n        songDetails: action.song,\r\n        songId: action.song.id,\r\n        timeElapsed: 0,\r\n        songPaused: false\r\n      };\r\n    case STOP_SONG:\r\n      return {\r\n        ...state,\r\n        songPlaying: false,\r\n        timeElapsed: 0,\r\n        songPaused: true\r\n      };\r\n    case PAUSE_SONG:\r\n      return {\r\n        ...state,\r\n        songPaused: true\r\n      };\r\n    case RESUME_SONG:\r\n      return {\r\n        ...state,\r\n        songPaused: false\r\n      };\r\n    case UPDATE_SONG_TIME:\r\n      return {\r\n        ...state,\r\n        timeElapsed: action.time\r\n      };\r\n    case GET_SONG_INDEX:\r\n      return {\r\n        ...state,\r\n        songIndex: action.songIndex\r\n      };\r\n    case GET_SONG_FEATURES_ERROR:\r\n      return {\r\n        ...state,\r\n        getSongFeaturesError: true,\r\n        getSongFeaturesPending: false\r\n      };\r\n    case GET_SONG_FEATURES_PENDING:\r\n      return {\r\n        ...state,\r\n        getSongFeaturesPending: true,\r\n        getSongFeaturesError: false\r\n      };\r\n    case GET_SONG_FEATURES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        features: action.features,\r\n        getSongFeaturesError: false,\r\n        getSongFeaturesPending: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default songsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { SET_TOKEN, UPDATE_VOLUME } from \"../actions/types\";\r\nimport { uiReducer as uiSwitches } from \"./uiReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport playlistsReducer from \"./playlistsReducer\";\r\nimport songsReducer from \"./songsReducer\";\r\n\r\nconst tokenReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.token\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst soundReducer = (state = { volume: 100 }, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_VOLUME:\r\n      return {\r\n        volume: action.volume\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  userReducer: userReducer,\r\n  uiSwitches: uiSwitches,\r\n  playlistsReducer: playlistsReducer,\r\n  songsReducer: songsReducer,\r\n  soundReducer: soundReducer,\r\n  tokenReducer: tokenReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport \"./Style.css\"; //needed for background image in body\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}