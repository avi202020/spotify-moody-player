{"version":3,"sources":["assets/cover.jpg","actions/songActions.js","actions/types.js","components/TrackList.js","components/Playlists.js","actions/playlistsActions.js","components/IconButton.js","components/PlaybackButtons.js","components/Cover.js","components/SongProgress.js","components/Slider.js","actions/index.js","components/Volume.js","components/Header.js","components/containers/ContainerOuter.js","components/containers/ContainerInner.js","components/LoginButton.js","components/SettingsSwitches.js","scripts/createDynamicTheme.js","components/Layout.js","components/App.js","reducers/uiReducer.js","reducers/userReducer.js","reducers/playlistsReducer.js","reducers/songsReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","playSong","song","type","getSongIndex","songIndex","getSongFeatures","songId","accessToken","dispatch","request","Request","concat","headers","Headers","Authorization","fetch","then","res","statusText","window","location","href","json","features","catch","err","TrackList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedIndexSong","prevProps","songs","playlistId","refs","tcontainer","scrollTop","setState","ms","minutes","Math","floor","seconds","toFixed","index","track","id","token","playAudio","_this2","classes","react_default","a","createElement","Fragment","className","content","ref","Table_default","table","TableHead_default","TableRow_default","key","TableCell_default","tableC","align","TableBody_default","map","row","selected","tableRow","hover","onClick","SelectSongToPlay","component","scope","name","artists","msToMinutesAndSeconds","duration_ms","React","Component","mapDispatchToProps","connect","songsReducer","tokenReducer","playlists","playlistsReducer","withStyles","theme","flexGrow","padding","spacing","unit","overflow","scrollbarWidth","&::-webkit-scrollbar","width","height","maxWidth","borderBottomColor","palette","divider","&:hover","cursor","Playlists","selectedIndexPL","playlistIndex","userId","fetchPlaylists","playlist","ListItem_default","variant","button","FetchSongs","ListItemText_default","primary","fetchPlaylistSongs","getPlaylistIndex","Typography_default","playTitle","noWrap","tracklistTotal","length","root","Drawer_default","drawer","paper","drawerPaper","anchor","List_default","renderList","fetchSongsPending","components_TrackList","items","fetchPlaylistSongsSuccess","userReducer","user","selectedSongId","display","maxHeight","flexShrink","position","background","marginLeft","marginTop","iconHover","color","main","light","Icon_default","style","fontSize","iconSize","iconName","PlaybackButtons","handleClickNext","_this$props","songList","handleClickPrevious","_this$props2","handleClickPlayPause","_this$props3","songPlaying","songPaused","resumeAudio","pauseAudio","console","log","playPauseIcon","Grid_default","container","direction","item","index_es","disableRipple","buttonSO","components_IconButton","songDetails","backgroundColor","image","img","margin","boxShadow","xs","alt","src","albumcover","SongProgress","secondFormatter","number","roundedSeconds","ceil","Slider_default","min","max","step","slider","trackThickness","thumb","thumbIcon","activated","jumped","focused","value","songsInfo","timeElapsed","elapsedTimeMargin","totalTimeMargin","verticalAlign","float","opacity","&$activated","&$jumped","SliderComp","handleChange","event","updateVolume","volume","onChange","onDragEnd","jumpAtTime","soundReducer","&:hover $thumbIcon","Volume","ico","components_Slider","volIcon","marginRight","outer","bcolor","children","inner","transform","fab","text","paddingBottom","Fab_default","spotifyauthurl","SettingsPanel","handleChangeSettings","defineProperty","target","checked","toggleHiddenPlaylist","toggleDynamicColor","toggleDarkMode","hiddenPlaylist","switchState","uiHiddenPlaylist","dynamicColor","uiDynamicColor","darkMode","uiDarkMode","Paper_default","FormControl_default","fieldSet","FormGroup_default","FormControlLabel_default","control","Switch_default","label","uiSwitches","top","right","left","wholeSet","colors","red","shadeText","deepOrange","orange","amber","yellow","lime","lightGreen","green","teal","cyan","lightBlue","blue","indigo","deepPurple","energyToColor","energy","round","valenceToShade","valence","colorShade","colorIndex","isTextDark","hexToRGBA","hex","alpha","hexs","replace","parseInt","substring","themeDark","createMuiTheme","secondary","typography","useNextVariants","themeLight","Layout","open","dynamicCover","defaultCover","dynamicBGColor","dynamicDarkText","stopSong","audio","pause","updateSongTime","clearInterval","routine","resumeSong","play","calculateTime","pauseSong","preview_url","undefined","Audio","handleClickSettings","handleClickAway","songFeatures","album","images","url","_this3","setInterval","ended","currentTime","_this$state","document","body","backgroundImage","styles","containers_ContainerOuter","containers_ContainerInner","justify","alignItems","gridContainer","wrap","iconPlaceholder","zeroMinWidth","components_Header","auth","ClickAwayListener_default","onClickAway","IconButton_default","iconSelection","SettingsSwitches","topRow","components_Cover","components_Playlists","components_LoginButton","components_PlaybackButtons","components_SongProgress","sm","components_Volume","time","ContainerOuter","ContainerInner","App","e","hashParams","r","q","hash","exec","decodeURIComponent","access_token","setToken","fetchUser","CssBaseline_default","components_Layout","defaultState","uiReducer","arguments","objectSpread","action","fetchUserError","fetchPlaylistsPending","fetchPlaylistError","viewType","fetchArtistSongsError","fetchArtistSongsPending","getSongFeaturesError","getSongFeaturesPending","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","querySelector"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wTCY3BC,EAAW,SAAAC,GACtB,MAAO,CACLC,KCHqB,YDIrBD,SA4BSE,EAAe,SAAAC,GAC1B,MAAO,CACLF,KCzB0B,iBD0B1BE,cAuBSC,EAAkB,SAACC,EAAQC,GACtC,OAAO,SAAAC,GACL,IAAMC,EAAU,IAAIC,QAAJ,6CAAAC,OAC+BL,GAC7C,CACEM,QAAS,IAAIC,QAAQ,CACnBC,cAAe,UAAYP,MAIjCC,EAtBK,CACLN,KCvCqC,8BD6DrCa,MAAMN,GACHO,KAAK,SAAAC,GAIJ,MAHuB,iBAAnBA,EAAIC,aACNC,OAAOC,SAASC,KAAO,MAElBJ,EAAIK,SAEZN,KAAK,SAAAC,GACJT,EAzBC,CACLN,KC/CqC,4BDgDrCqB,SAuBoCN,MAEjCO,MAAM,SAAAC,GACLjB,EAxCC,CACLN,KClCmC,yLCoBjCwB,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,kBAAmBR,EAAKD,MAAMvB,WAHfwB,kFAOAS,GACbN,KAAKJ,MAAMW,MAAMC,YACfR,KAAKJ,MAAMW,MAAMC,aAAeF,EAAUC,MAAMC,YAC9CR,KAAKS,KAAKC,aACZV,KAAKS,KAAKC,WAAWC,UAAY,GAInCX,KAAKJ,MAAMvB,YAAciC,EAAUjC,WACrC2B,KAAKY,SAAS,CAAEP,kBAAmBL,KAAKJ,MAAMvB,0DAI5BwC,GACpB,IAAMC,EAAUC,KAAKC,MAAMH,EAAK,KAC1BI,GAAYJ,EAAK,IAAS,KAAMK,QAAQ,GAC9C,OAAOJ,EAAU,KAAOG,EAAU,GAAK,IAAM,IAAMA,2CAGpC/C,EAAMiD,GACrBnB,KAAKJ,MAAMxB,aAAa+C,GACxBnB,KAAKJ,MAAM3B,SAASC,EAAKkD,OACzBpB,KAAKJ,MAAMtB,gBAAgBJ,EAAKkD,MAAMC,GAAIrB,KAAKJ,MAAM0B,OACrDtB,KAAKJ,MAAM2B,UAAUrD,oCAGd,IAAAsD,EAAAxB,KACCyB,EAAYzB,KAAKJ,MAAjB6B,QACR,OAAIzB,KAAKJ,MAAMW,MAAMA,MAEjBmB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQM,QAASC,IAAI,cACnCN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAOG,UAAWL,EAAQS,OACxBR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAUU,IAAI,eACZX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAWG,UAAWL,EAAQc,QAA9B,SACAb,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAWG,UAAWL,EAAQc,OAAQC,MAAM,QAA5C,UAGAd,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAWG,UAAWL,EAAQc,OAAQC,MAAM,QAA5C,cAKJd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,KACG3B,KAAKJ,MAAMW,MAAMA,MAAMmC,IAAI,SAACC,EAAKxB,GAAN,OAC1BO,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEiB,SACEpB,EAAKpB,MAAMC,oBAAsBc,EAEnCW,UAAWL,EAAQoB,SACnBC,OAAO,EACPT,IAAKlB,EAAQ,GAAKwB,EAAIvB,MAAMC,GAC5B0B,QAAS,kBAAMvB,EAAKwB,iBAAiBL,EAAKxB,KAE1CO,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEG,UAAWL,EAAQc,OACnBU,UAAU,KACVC,MAAM,OAELP,EAAIvB,MAAM+B,MAEbzB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAWG,UAAWL,EAAQc,OAAQC,MAAM,QACzCG,EAAIvB,MAAMgC,QAAQ,GAAGD,MAExBzB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAWG,UAAWL,EAAQc,OAAQC,MAAM,QACzChB,EAAK6B,sBAAsBV,EAAIvB,MAAMkC,qBAU/C,YApFWC,IAAMC,WAkGxBC,EAAqB,CACzBnF,kBACAF,eACAH,YAGayF,cAfS,SAAAtD,GACtB,MAAO,CACLG,MAAOH,EAAMuD,aAAapD,MAAQH,EAAMuD,aAAe,GACvDrC,MAAOlB,EAAMwD,aAAatC,MAAQlB,EAAMwD,aAAatC,MAAQ,GAC7DuC,UAAWzD,EAAM0D,iBACjBzF,UAAW+B,EAAMuD,aAAatF,YAYhCoF,EAFaC,CAGbK,qBAnIa,SAAAC,GAAK,MAAK,CACvBjC,QAAS,CACPkC,SAAU,EACVC,QAA8B,EAArBF,EAAMG,QAAQC,KACvBC,SAAU,OACVC,eAAgB,OAChBC,uBAAwB,CACtBC,MAAO,IACPC,OAAQ,MAGZvC,MAAO,CACLwC,SAAU,KAEZnC,OAAQ,CACNoC,kBAAmBX,EAAMY,QAAQC,SAEnChC,SAAU,CACRiC,UAAW,CACTC,OAAQ,cAgHZhB,CAAmBpE,qBC1FfqF,cACJ,SAAAA,EAAYpF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IACjBnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,KAAMJ,KACDQ,MAAQ,CACX6E,gBAAiBpF,EAAKD,MAAMiE,UAAUqB,cACtC7E,kBAAmBR,EAAKD,MAAMvB,WAJfwB,kFAQAS,GACbN,KAAKJ,QAAUU,GACbN,KAAKJ,MAAMuF,SAAW7E,EAAU6E,QACR,KAAtBnF,KAAKJ,MAAMuF,QAAsC,KAArBnF,KAAKJ,MAAM0B,OACzCtB,KAAKJ,MAAMwF,eAAepF,KAAKJ,MAAMuF,OAAQnF,KAAKJ,MAAM0B,4CAMnD,IAAAE,EAAAxB,KACX,OAAIA,KAAKJ,MAAMiE,UAAUA,UAChB7D,KAAKJ,MAAMiE,UAAUA,UAAUnB,IAAI,SAAC2C,EAAUlE,GACnD,OACEO,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CACE4D,QAAQ,QACRC,QAAM,EACN5C,SAAUpB,EAAKpB,MAAM6E,kBAAoB9D,EACzCkB,IAAKgD,EAAShE,GACd0B,QAAS,kBACPvB,EAAKiE,WACHjE,EAAK5B,MAAMuF,OACXE,EAAShE,GACTG,EAAK5B,MAAM0B,MACXH,KAIJO,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CAAcgE,QAASN,EAASlC,UAMpCzB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CAAU4D,QAAQ,QAAQlD,IAAI,WAC5BX,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CAAcgE,QAAQ,8DAOrBR,EAAQ3E,EAAYc,EAAOH,GAEhCnB,KAAKJ,MAAMW,MAAMC,aAAeA,IAClCR,KAAKJ,MAAMgG,mBAAmBT,EAAQ3E,EAAYc,GAClDtB,KAAKJ,MAAMiG,iBAAiB1E,GAC5BnB,KAAKJ,MAAMxB,aAAa,MACxB4B,KAAKY,SAAS,CAAEqE,gBAAiB9D,sCAI5B,IACCM,EAAYzB,KAAKJ,MAAjB6B,QACR,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAYG,UAAWL,EAAQsE,UAAWR,QAAQ,WAAWS,QAAM,GAAnE,aAGAtE,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CACEG,UAAWL,EAAQwE,eACnBV,QAAQ,WACRS,QAAM,GAELhG,KAAKJ,MAAMW,MAAMA,MACdP,KAAKJ,MAAMW,MAAMA,MAAM2F,OAAS,SAChC,MAENxE,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQ0E,MACtBzE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEG,UAAWL,EAAQ4E,OACnBd,QAAQ,YACR9D,QAAS,CACP6E,MAAO7E,EAAQ8E,aAEjBC,OAAO,QAEP9E,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAMsB,UAAU,OAAOjD,KAAK0G,eAE5B1G,KAAKJ,MAAM+G,kBAET,KADFjF,EAAAC,EAAAC,cAACgF,EAAD,CAAWrF,UAAWvB,KAAKJ,MAAM2B,qBA1FrBgC,IAAMC,WA8GxBC,EAAqB,CACzB2B,eClI4B,SAACD,EAAQ3G,GACrC,OAAO,SAAAC,GACL,IAAMC,EAAU,IAAIC,QAAJ,oCAAAC,OACsBuG,EADtB,uBAEd,CACEtG,QAAS,IAAIC,QAAQ,CACnBC,cAAe,UAAYP,MAKjCC,EA7BK,CACLN,KHZmC,4BG0CnCa,MAAMN,GACHO,KAAK,SAAAC,GAIJ,MAHuB,iBAAnBA,EAAIC,aACNC,OAAOC,SAASC,KAAO,MAElBJ,EAAIK,SAEZN,KAAK,SAAAC,GACJT,EAjCC,CACLN,KHpBmC,0BGqBnC0F,UA+BmC3E,EAAI2H,UAEpCpH,MAAM,SAAAC,GACLjB,EA7BC,CACLN,KH1BiC,8BEiKnCyH,mBClFgC,SAACT,EAAQ3E,EAAYhC,GACrD,OAAO,SAAAC,GACL,IAAMC,EAAU,IAAIC,QAAJ,oCAAAC,OACsBuG,EADtB,eAAAvG,OAC0C4B,EAD1C,WAEd,CACE3B,QAAS,IAAIC,QAAQ,CACnBC,cAAe,UAAYP,MAKjCC,EA9BK,CACLN,KH3DwC,iCG0FxCa,MAAMN,GACHO,KAAK,SAAAC,GACJ,OAAOA,EAAIK,SAEZN,KAAK,SAAAC,GACJT,EAhCiC,SAAC8B,EAAOC,GAC/C,MAAO,CACLrC,KHhEwC,+BGiExCoC,QACAC,cA4BasG,CAA0B5H,EAAI2H,MAAOrG,MAE/Cf,MAAM,SAAAC,GACLjB,EA1BC,CACLN,KHvEsC,mCE8JxCF,WACAK,kBACAF,eACAyH,iBCjK8B,SAAAX,GAC9B,MAAO,CACL/G,KHG8B,qBGF9B+G,mBDiKWxB,cArBS,SAAAtD,GACtB,MAAO,CACL+E,OAAQ/E,EAAM2G,YAAYC,KAAO5G,EAAM2G,YAAYC,KAAK3F,GAAK,GAC7DC,MAAOlB,EAAMwD,aAAatC,MAAQlB,EAAMwD,aAAatC,MAAQ,GAC7DuC,UAAWzD,EAAM0D,iBACjBvD,MAAOH,EAAMuD,aAAapD,MAAQH,EAAMuD,aAAe,GACvDsD,eAAgB7G,EAAMuD,aAAapF,OACnCF,UAAW+B,EAAMuD,aAAatF,UAC9BsI,kBAAmBvG,EAAMuD,aAAagD,oBAexClD,EAFaC,CAGbK,qBA1Ja,SAAAC,GAAK,MAAK,CACvBmC,KAAM,CACJe,QAAS,OACTC,UAAW,SAEbd,OAAQ,CACN7B,MARgB,IAShB4C,WAAY,GAEdb,YAAa,CACX/B,MAZgB,IAahB6C,SAAU,WACVC,WAAY,cACZjD,SAAU,OACVC,eAAgB,OAChBC,uBAAwB,CACtBC,MAAO,IACPC,OAAQ,MAGZsB,UAAW,CACTsB,SAAU,WACVE,WAAY,OACZC,UAAW,SAEbvB,eAAgB,CACdoB,SAAU,WACVE,WAAY,QACZC,UAAW,WA8HbzD,CAAmBiB,8BE5JNjB,wBAlBA,SAAAC,GAAK,MAAK,CACvByD,UAAW,CACTC,MAAO1D,EAAMY,QAAQe,QAAQgC,KAC7B7C,UAAW,CACT4C,MAAO1D,EAAMY,QAAQe,QAAQiC,UAcpB7D,CATI,SAAAnE,GAAS,IAClB6B,EAAY7B,EAAZ6B,QACR,OACEC,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAMG,UAAWL,EAAQgG,UAAWK,MAAO,CAAEC,SAAUnI,EAAMoI,WAC1DpI,EAAMqI,YCOPC,eACJ,SAAAA,EAAYtI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkI,IACjBrI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoI,GAAA/H,KAAAH,KAAMJ,KAaRuI,gBAAkB,WAAM,IAAAC,EACyBvI,EAAKD,MAA5CyI,EADcD,EACdC,SAAU9J,EADI6J,EACJ7J,OAAQF,EADJ+J,EACI/J,UAAWiD,EADf8G,EACe9G,MAEjC/C,GAAwB,OAAdF,IACRA,EAAY,GAAKgK,EAASnC,QAE5BrG,EAAKD,MAAM2B,UAAU8G,EAAS,IAC9BxI,EAAKD,MAAM3B,SAASoK,EAAS,GAAGjH,OAChCvB,EAAKD,MAAMtB,gBAAgB+J,EAAS,GAAGjH,MAAMC,GAAIC,GACjDzB,EAAKD,MAAMxB,aAAa,KAExByB,EAAKD,MAAM2B,UAAU8G,EAAShK,EAAY,IAC1CwB,EAAKD,MAAM3B,SAASoK,EAAShK,EAAY,GAAG+C,OAC5CvB,EAAKD,MAAMtB,gBAAgB+J,EAAShK,EAAY,GAAG+C,MAAMC,GAAIC,GAC7DzB,EAAKD,MAAMxB,aAAaC,EAAY,MA5BvBwB,EAiCnByI,oBAAsB,WAAM,IAAAC,EACqB1I,EAAKD,MAA5CyI,EADkBE,EAClBF,SAAU9J,EADQgK,EACRhK,OAAQF,EADAkK,EACAlK,UAAWiD,EADXiH,EACWjH,MACjC/C,GAAwB,OAAdF,IACM,IAAdA,GAEFwB,EAAKD,MAAMxB,aAAaiK,EAASnC,OAAS,GAC1CrG,EAAKD,MAAM3B,SAASoK,EAASA,EAASnC,OAAS,GAAG9E,OAClDvB,EAAKD,MAAMtB,gBACT+J,EAASA,EAASnC,OAAS,GAAG9E,MAAMC,GACpCC,GAEFzB,EAAKD,MAAM2B,UAAU8G,EAASA,EAASnC,OAAS,MAEhDrG,EAAKD,MAAMxB,aAAaC,EAAY,GACpCwB,EAAKD,MAAM3B,SAASoK,EAAShK,EAAY,GAAG+C,OAC5CvB,EAAKD,MAAMtB,gBAAgB+J,EAAShK,EAAY,GAAG+C,MAAMC,GAAIC,GAC7DzB,EAAKD,MAAM2B,UAAU8G,EAAShK,EAAY,OAjD7BwB,EAqDnB2I,qBAAuB,WAAM,IAAAC,EACiB5I,EAAKD,MAAzC8I,EADmBD,EACnBC,YAAaC,EADMF,EACNE,WAAYpK,EADNkK,EACMlK,OAC7BmK,GAAeC,GACjB9I,EAAKD,MAAMgJ,cAETF,IAAgBC,GAClB9I,EAAKD,MAAMiJ,cAERH,GAAenK,IAClBuK,QAAQC,IAAIlJ,EAAKD,OAEjBC,EAAKD,MAAMgJ,gBA9Db/I,EAAKO,MAAQ,CACX4I,cAAgBpJ,EAAM+I,WAAuB,aAAV,SAHpB9I,kFAOAS,GACbN,KAAKJ,MAAM+I,aAAerI,EAAUqI,YACtC3I,KAAKY,SAAS,CACZoI,cAAgBhJ,KAAKJ,MAAM+I,WAAuB,aAAV,2CA0DrC,IACClH,EAAYzB,KAAKJ,MAAjB6B,QACR,OACEC,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMG,UAAWL,EAAQ0E,KAAM+C,WAAS,EAACC,UAAU,MAAMhF,QAAS,GAChEzC,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,GACR1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CACEC,eAAe,EACfxH,UAAWL,EAAQ8H,SACnBxG,QAAS/C,KAAKsI,qBAEd5G,EAAAC,EAAAC,cAAC4H,GAAD,CAAavB,SAAS,gBAAgBD,SAAU,OAGpDtG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,GACR1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CACEC,eAAe,EACfxH,UAAWL,EAAQ8H,SACnBxG,QAAS/C,KAAKwI,sBAEd9G,EAAAC,EAAAC,cAAC4H,GAAD,CAAavB,SAAUjI,KAAKI,MAAM4I,cAAehB,SAAU,OAG/DtG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,GACR1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CACEC,eAAe,EACfxH,UAAWL,EAAQ8H,SACnBxG,QAAS/C,KAAKmI,iBAEdzG,EAAAC,EAAAC,cAAC4H,GAAD,CAAavB,SAAS,YAAYD,SAAU,eAjG1BzE,IAAMC,WAqH9BC,GAAqB,CACzBxF,WACAK,kBACAF,gBAGasF,eAlBS,SAAAtD,GACtB,MAAO,CACLuI,WAAYvI,EAAMuD,aAAagF,WAC/BD,YAAatI,EAAMuD,aAAa+E,YAChCe,YAAarJ,EAAMuD,aAAa8F,YAChCpB,SAAUjI,EAAMuD,aAAapD,MAAQH,EAAMuD,aAAapD,MAAQ,KAChEhC,OAAQ6B,EAAMuD,aAAapF,OAAS6B,EAAMuD,aAAapF,OAAS,KAChEF,UAAW+B,EAAMuD,aAAatF,UAC9BiD,MAAOlB,EAAMwD,aAAatC,MAAQlB,EAAMwD,aAAatC,MAAQ,KAY/DmC,GAFaC,CAGbK,qBA1Ia,CACboC,KAAM,CACJlC,SAAU,GAEZsF,SAAU,CACRrF,QAAS,MACTY,UAAW,CACT4E,gBAAiB,iBAmIrB3F,CAAmBmE,KC7HNnE,wBArBA,CACb4F,MAAO,CACLjF,SAAU,QACVyC,UAAW,SAEbyC,IAAK,CACHC,OAAQ,OACR3C,QAAS,QACTxC,SAAU,OACVyC,UAAW,OACX2C,UAAW,yBAWA/F,CARD,SAAAnE,GAAS,IACb6B,EAAY7B,EAAZ6B,QACR,OACEC,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAACW,IAAE,EAACjI,UAAWL,EAAQkI,OAC/BjI,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQmI,IAAKI,IAAI,eAAeC,IAAKrK,EAAMsK,oCC4B3DC,8MACJC,gBAAkB,SAAAC,GAChB,IAAMC,EAAiBvJ,KAAKwJ,KAAKF,GACjC,OAAIC,EAAiB,GACnB,MAAA1L,OAAa0L,GAEb,KAAA1L,OAAY0L,4EAIP,IACC7I,EAAYzB,KAAKJ,MAAjB6B,QACR,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQ0E,MACtBzE,EAAAC,EAAAC,cAAC4I,GAAA7I,EAAD,CACE8I,IAAK,EACLC,IAAK,GACLC,KAAM,EACN7I,UAAWL,EAAQ0E,KACnB1E,QAAS,CACPyH,UAAWzH,EAAQmJ,OACnBxJ,MAAOK,EAAQoJ,eACfC,MAAOrJ,EAAQsJ,UACfC,UAAWvJ,EAAQuJ,UACnBC,OAAQxJ,EAAQwJ,OAChBC,QAASzJ,EAAQyJ,SAEnBC,MAAOpK,KAAKwJ,KAAKvK,KAAKJ,MAAMwL,UAAUC,eAGxC3J,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQ6J,mBACtB5J,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAY4D,QAAQ,UAAUS,QAAM,GACjChG,KAAKoK,gBAAgBpK,KAAKJ,MAAMwL,UAAUC,eAG/C3J,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQ8J,iBACtB7J,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAY4D,QAAQ,UAAUS,QAAM,GAApC,iBApCiBzC,IAAMC,WAmDlBE,eANS,SAAAtD,GACtB,MAAO,CACLgL,UAAWhL,EAAMuD,eAIND,CAAyBK,qBA7FzB,SAAAC,GAAK,MAAK,CACvBmC,KAAM,CACJlC,SAAU,EACVoD,SAAU,YAEZiE,kBAAmB,CACjBE,cAAe,SACfC,MAAO,OACPjE,UAAW,SAEb+D,gBAAiB,CACfC,cAAe,SACfC,MAAO,QACPjE,UAAW,SAEboD,OAAQ,CACN9F,UAAW,CACTC,OAAQ,WAEVb,QAAS,YAEX2G,eAAgB,CACdnB,gBAAiB1F,EAAMY,QAAQe,QAAQgC,KACvClD,OAAQ,GAEVsG,UAAW,CACTW,QAAS,EACT5G,UAAW,CACTgF,UAAS,uCAEX6B,cAAe,CACb7B,UAAS,iDAEX8B,WAAY,CACV9B,UAAS,kDAGbkB,UAAW,GACXC,OAAQ,GACRC,QAAS,KAsD6BnH,CAAmBoG,KC1ErD0B,eACJ,SAAAA,EAAYjM,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6L,IACjBhM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+L,GAAA1L,KAAAH,KAAMJ,KAMRkM,aAAe,SAACC,EAAOZ,GACrBtL,EAAKe,SAAS,CAAEuK,UAChBtL,EAAKD,MAAMoM,aAAajL,KAAKwJ,KAAKY,KAPlCtL,EAAKO,MAAQ,CACX+K,MAAOvL,EAAMqM,QAHEpM,wEAYV,IACC4B,EAAYzB,KAAKJ,MAAjB6B,QACA0J,EAAUnL,KAAKI,MAAf+K,MAER,OACEzJ,EAAAC,EAAAC,cAAC4I,GAAA7I,EAAD,CACE8I,IAAK,EACLC,IAAK,IACL5I,UAAWL,EAAQ0E,KACnB1E,QAAS,CACPyH,UAAWzH,EAAQmJ,OACnBxJ,MAAOK,EAAQoJ,eACfC,MAAOrJ,EAAQsJ,WAEjBI,MAAOA,EACPe,SAAUlM,KAAK8L,aACfK,UAAWnM,KAAKJ,MAAMwM,oBA7BL7I,IAAMC,WAyCzBC,GAAqB,CACzBuI,aC1D0B,SAAAC,GAC1B,MAAO,CACL9N,KTUyB,gBSTzB8N,YD0DWvI,eAVS,SAAAtD,GACtB,MAAO,CACL6L,OAAQ7L,EAAMiM,aAAaJ,SAU7BxI,GAFaC,CAGbK,qBAnEa,SAAAC,GAAK,MAAK,CACvBmC,KAAM,CACJlC,SAAU,GAEZ2G,OAAQ,CACN1G,QAAS,WACToI,qBAAsB,CACpBZ,QAAS,IAGbb,eAAgB,CACdnB,gBAAiB1F,EAAMY,QAAQe,QAAQgC,KACvClD,OAAQ,GAEVsG,UAAW,CACTW,QAAS,KAoDX3H,CAAmB8H,KEjDfU,oLACK,IACC9K,EAAYzB,KAAKJ,MAAjB6B,QAER,OACEC,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMG,UAAWL,EAAQ0E,KAAM+C,WAAS,EAACC,UAAU,OACjDzH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAACW,GAAI,GACbrI,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CAAMG,UAAWL,EAAQ+K,IAAK1E,MAAO,CAAEC,SAAU,KAAjD,cAIFrG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAACW,IAAE,GACXrI,EAAAC,EAAAC,cAAC6K,GAAD,eAZWlJ,IAAMC,WAmBZO,wBAtCA,SAAAC,GAAK,MAAK,CACvBmC,KAAM,CACJlC,SAAU,GAEZyI,QAAS,CACPjB,MAAO,QACPkB,YAAa,QACb7H,UAAW,CACT4E,gBAAiB,gBAGrB8C,IAAK,CACHf,MAAO,QACPjE,UAAW,OACXmF,YAAa,MACbjF,MAAO1D,EAAMY,QAAQe,QAAQgC,QAuBlB5D,CAAmBwI,ICvBnB7I,eANS,SAAAtD,GACtB,MAAO,CACLqJ,YAAarJ,EAAMuD,aAAa8F,cAIrB/F,CAhBA,SAAA9D,GACb,OACE8B,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAY4D,QAAQ,KAAKmC,MAAM,UAAU1B,QAAM,GAC5CpG,EAAM6J,YACH7J,EAAM6J,YAAYrG,QAAQ,GAAGD,KAAO,MAAQvD,EAAM6J,YAAYtG,KAC9D,QCWKY,wBAjBA,CACb6I,MAAO,CACLpI,MAAO,OACPC,OAAQ,OACR4C,SAAU,WACVqC,gBAAiB,6BAYN3F,CARQ,SAAAnE,GAAS,IACtB6B,EAAY7B,EAAZ6B,QACR,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQmL,MAAO9E,MAAO,CAAE4B,gBAAiB9J,EAAMiN,SAC5DjN,EAAMkN,YCAE/I,wBAbA,CACbgJ,MAAO,CACLvI,MAAO,OACPC,OAAQ,OACR4C,SAAU,WACV2F,UAAW,gBAQAjJ,CAJQ,SAAAnE,GAAS,IACtB6B,EAAY7B,EAAZ6B,QACR,OAAOC,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQsL,OAAQnN,EAAMkN,gCCuChC/I,wBA1CA,SAAAC,GAAK,MAAK,CACvBiJ,IAAK,CACHvD,gBAAiB,UACjB5E,UAAW,CACT4E,gBAAiB,YAGrBR,UAAW,CACTxE,SAAU,SAEZwI,KAAM,CACJC,cAAe,UA+BJpJ,CA3BK,SAAAnE,GAAS,IACnB6B,EAAY7B,EAAZ6B,QAcR,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQyH,WACtBxH,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAYG,UAAWL,EAAQyL,KAAM3H,QAAQ,KAAKmC,MAAM,WAAxD,+CAGAhG,EAAAC,EAAAC,cAACwL,GAAAzL,EAAD,CAAK4D,QAAQ,WAAWzD,UAAWL,EAAQwL,IAAKlK,QAjBrC,WACb,OAAQ3D,OAAOC,SAASC,KACtB+N,qUAgBE3L,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAY+F,MAAM,WAAlB,oJClBF4F,eACJ,SAAAA,EAAY1N,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsN,IACjBzN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwN,GAAAnN,KAAAH,KAAMJ,KAQR2N,qBAAuB,SAAApK,GAAI,OAAI,SAAA4I,GAE7B,OADAlM,EAAKe,SAALd,OAAA0N,EAAA,EAAA1N,CAAA,GAAiBqD,EAAO4I,EAAM0B,OAAOC,UAC7BvK,GACN,IAAK,iBACH,OAAOtD,EAAKD,MAAM+N,uBACpB,IAAK,eACH,OAAO9N,EAAKD,MAAMgO,qBACpB,IAAK,WACH,OAAO/N,EAAKD,MAAMiO,iBACpB,QACE,OAAO,QAjBXhO,EAAKO,MAAQ,CACX0N,eAAgBlO,EAAMmO,YAAYC,iBAClCC,aAAcrO,EAAMmO,YAAYG,eAChCC,SAAUvO,EAAMmO,YAAYK,YALbvO,wEAuBV,IACC4B,EAAYzB,KAAKJ,MAAjB6B,QACR,OACEC,EAAAC,EAAAC,cAACyM,GAAA1M,EAAD,CAAOG,UAAWL,EAAQ6E,OACxB5E,EAAAC,EAAAC,cAAC0M,GAAA3M,EAAD,CAAasB,UAAU,WAAWnB,UAAWL,EAAQ8M,UACnD7M,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,KACED,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,CACE+M,QACEhN,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,CACE+L,QAAS1N,KAAKI,MAAM0N,eACpB5B,SAAUlM,KAAKuN,qBAAqB,kBACpCpC,MAAM,eAGVyD,MAAM,kBAERlN,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,CACE+M,QACEhN,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,CACE+L,QAAS1N,KAAKI,MAAM6N,aACpB/B,SAAUlM,KAAKuN,qBAAqB,gBACpCpC,MAAM,iBAGVyD,MAAM,kBAEN5O,KAAKI,MAAM6N,aAWT,KAVFvM,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,CACE+M,QACEhN,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,CACE+L,QAAS1N,KAAKI,MAAM+N,SACpBjC,SAAUlM,KAAKuN,qBAAqB,YACpCpC,MAAM,aAGVyD,MAAM,wBA3DMrL,IAAMC,WA2E5BC,GAAqB,CACzBoK,eN7E4B,WAC5B,MAAO,CACL1P,KT1B4B,qBesG9ByP,mBNpFgC,WAChC,MAAO,CACLzP,KTrBgC,yBewGlCwP,qBN3FkC,WAClC,MAAO,CACLxP,KThBgC,0Be4GrBuF,eAZS,SAAAtD,GACtB,MAAO,CACL2N,YAAa3N,EAAMyO,aAYrBpL,GAFaC,CAGbK,qBAnGa,SAAAC,GAAK,MAAK,CACvBsC,MAAO,CACLe,SAAU,WACVyH,IAAK,GACLC,MAAO,EACPC,MAAO,KAETC,SAAU,CACR5H,SAAU,YAEZkH,SAAU,CACRhH,WAAY,UAwFdxD,CAAmBuJ,ySCvCf4B,GAAS,CAzDE,CACfxH,MAAOyH,KACPC,UAAW,KAEW,CACtB1H,MAAO2H,KACPD,UAAW,KAEO,CAClB1H,MAAO4H,KACPF,UAAW,KAEM,CACjB1H,MAAO6H,KACPH,UAAW,KAEO,CAClB1H,MAAO8H,KACPJ,UAAW,KAEK,CAChB1H,MAAO+H,KACPL,UAAW,KAEW,CACtB1H,MAAOgI,KACPN,UAAW,KAEM,CACjB1H,MAAOiI,KACPP,UAAW,KAEK,CAChB1H,MAAOkI,KACPR,UAAW,KAEK,CAChB1H,MAAOmI,KACPT,UAAW,KAEU,CACrB1H,MAAOoI,KACPV,UAAW,KAEK,CAChB1H,MAAOqI,KACPX,UAAW,KAEO,CAClB1H,MAAOsI,KACPZ,UAAW,KAEW,CACtB1H,MAAOuI,KACPb,UAAW,MAsBPc,GAAgB,SAAAC,GAAM,OAAIpP,KAAKqP,MAAM,GAAKD,IAI1CE,GAAiB,SAAAC,GAAO,OAA8C,IAA1CvP,KAAKqP,OAAO,IAAME,EAAU,KAAO,MA6BxDC,GAAa,SAACJ,EAAQG,GACjC,IAAME,EAAaN,GAAcC,GAC3BI,EAAaF,GAAeC,GAClC,OAAOpB,GAAOsB,GAAY9I,MAAM6I,IAGrBE,GAAa,SAACN,EAAQG,GACjC,IAAME,EAAaN,GAAcC,GAC3BI,EAAaF,GAAeC,GAClC,OAAOpB,GAAOsB,GAAYpB,WAAamB,GAG5BG,GAAY,SAACC,EAAKC,GAC7B,IAAMC,EAAOF,EAAIG,QAAQ,IAAK,IAI9B,MAAO,QAHGC,SAASF,EAAKG,UAAU,EAAG,GAAI,IAGpB,IAFXD,SAASF,EAAKG,UAAU,EAAG,GAAI,IAEV,IADrBD,SAASF,EAAKG,UAAU,EAAG,GAAI,IACA,IAAMJ,EAAQ,KC9GnDK,GAAYC,yBAAe,CAC/BtM,QAAS,CACPzG,KAAM,OACNwH,QAAS,CACPgC,KAAM,UACNC,MAAO,WAETuJ,UAAW,CACTxJ,KAAM,YAGVyJ,WAAY,CAAEC,iBAAiB,KAG3BC,GAAaJ,yBAAe,CAChCtM,QAAS,CACPzG,KAAM,QAENwH,QAAS,CACPgC,KAAM,UACNC,MAAO,WAETuJ,UAAW,CACTxJ,KAAM,YAGVyJ,WAAY,CAAEC,iBAAiB,KAgD3BE,8MAGJnR,MAAQ,CACNoR,MAAM,EACNC,aAAcC,KACdC,eAAgB,sBAChBC,iBAAiB,EAEjB9D,gBAAgB,EAChBG,cAAc,EACdE,UAAU,KA0CZ0D,SAAW,WACLhS,EAAKiS,OACPjS,EAAKD,MAAMiS,WACXhS,EAAKiS,MAAMC,QACXlS,EAAKD,MAAMoS,eAAe,GAC1BC,cAAcpS,EAAKO,MAAM8R,WAEzBrS,EAAKD,MAAMiS,WACXhS,EAAKD,MAAMoS,eAAe,GAC1BC,cAAcpS,EAAKO,MAAM8R,aAI7BC,WAAa,WACPtS,EAAKiS,QACPjS,EAAKD,MAAMuS,aACXtS,EAAKiS,MAAMM,OACXvS,EAAKwS,oBAITC,UAAY,WACNzS,EAAKiS,QACPjS,EAAKD,MAAM0S,YACXzS,EAAKiS,MAAMC,QACXE,cAAcpS,EAAKO,MAAM8R,aAI7B3Q,UAAY,SAAArD,GAAQ,IACV8T,EAAmBnS,EAAKD,MAAxBoS,eACRC,cAAcpS,EAAKO,MAAM8R,SACM,OAA3BhU,EAAKkD,MAAMmR,iBACMC,IAAf3S,EAAKiS,OACPjS,EAAKiS,MAAQ,IAAIW,MAAMvU,EAAKkD,MAAMmR,aAClC1S,EAAKiS,MAAMM,OACXvS,EAAKwS,kBAELL,EAAe,GACfnS,EAAKiS,MAAMC,QACXlS,EAAKiS,MAAQ,IAAIW,MAAMvU,EAAKkD,MAAMmR,aAClC1S,EAAKiS,MAAMM,OACXvS,EAAKwS,iBAGPxS,EAAKgS,cAITa,oBAAsB,SAAA3G,GACpBlM,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtBoR,MAAOpR,EAAMoR,WAIjBmB,gBAAkB,WAChB9S,EAAKe,SAAS,CACZ4Q,MAAM,OAIVjE,qBAAuB,SAAApK,GAAI,OAAI,SAAA4I,GAC7BlM,EAAKe,SAALd,OAAA0N,EAAA,EAAA1N,CAAA,GAAiBqD,EAAO4I,EAAM0B,OAAOC,8FArGpBpN,GAAW,IAAAkB,EAAAxB,KAE1BA,KAAKJ,MAAMgT,aAAazC,QACxBnQ,KAAKJ,MAAMgT,eAAiBtS,EAAUsS,cAEtC5S,KAAKY,SAAS,SAAAR,GAAK,MAAK,CACtBqR,aAAcjQ,EAAK5B,MAAM6J,YAAYoJ,MAAMC,OAAO,GAAGC,IACrDpB,eAAgBjB,GACdH,GACE/O,EAAK5B,MAAMgT,aAAazC,OACxB3O,EAAK5B,MAAMgT,aAAatC,SAE1B,IAEFsB,gBAAiBnB,GACfjP,EAAK5B,MAAMgT,aAAazC,OACxB3O,EAAK5B,MAAMgT,aAAatC,iBAIXkC,IAAfxS,KAAK8R,QACP9R,KAAK8R,MAAM7F,OAASjM,KAAKJ,MAAMqM,OAAS,6CAI5B,IAAA+G,EAAAhT,KACRkS,EAAUe,YAAY,WACtBD,EAAKlB,MAAMoB,OACbF,EAAKV,YACLU,EAAKpT,MAAMoS,eAAe,IAChBgB,EAAKpT,MAAMwL,UAAUzC,YAC/BqK,EAAKpT,MAAMoS,eAAegB,EAAKlB,MAAMqB,cAEtC,KACHnT,KAAKY,SAAS,CACZsR,QAASA,qCAqEJ,IACCzQ,EAAYzB,KAAKJ,MAAjB6B,QADD2R,EAEwBpT,KAAKI,MAA5BoR,EAFD4B,EAEC5B,KAAMC,EAFP2B,EAEO3B,aAGd,OAFA4B,SAASC,KAAKxL,MAAMyL,gBAApB,OAAA3U,OAA6C6S,EAA7C,KAGE/P,EAAAC,EAAAC,cAAC4R,EAAA,iBAAD,CACExP,MACEhE,KAAKJ,MAAMmO,YAAYG,eACnBlO,KAAKI,MAAMwR,gBACTN,GACAL,GACFjR,KAAKJ,MAAMmO,YAAYK,WACvB6C,GACAK,IAGN5P,EAAAC,EAAAC,cAAC6R,GAAD,CACE5G,OACE7M,KAAKJ,MAAMmO,YAAYG,eACnBlO,KAAKI,MAAMuR,eACX3R,KAAKJ,MAAMmO,YAAYK,WACvB,qBACA,4BAGN1M,EAAAC,EAAAC,cAAC8R,GAAD,KACEhS,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQ0E,MACtBzE,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CACEuH,WAAS,EACTyK,QAAQ,gBACRC,WAAW,UACXzP,QAAS,GACTrC,UAAWL,EAAQoS,eAEnBnS,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CACEyH,MAAI,EACJF,WAAS,EACTa,GAAI,GACJZ,UAAU,MACVwK,QAAQ,gBACRC,WAAW,SACXzP,QAAS,GACT2P,KAAK,UAELpS,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAACW,GAAI,GACbrI,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,CACEG,UAAWL,EAAQsS,gBACnBjM,MAAO,CAAEC,SAAU,KAFrB,wBAOFrG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAAC4K,cAAY,GACrBtS,EAAAC,EAAAC,cAACqS,GAAD,OAEFvS,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAACW,GAAI,EAAGb,WAAS,EAACyK,QAAQ,YACjC3T,KAAKJ,MAAMsU,KAAK5S,MACfI,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQwN,UACtBvN,EAAAC,EAAAC,cAACuS,EAAAxS,EAAD,CAAmByS,YAAapU,KAAK2S,iBACnCjR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyS,EAAA1S,EAAD,CACE2H,eAAe,EACfxH,UAAWL,EAAQ6S,cACnBvR,QAAS/C,KAAK0S,qBAEdhR,EAAAC,EAAAC,cAAC4H,GAAD,CACEvB,SAAS,aACTD,SAAU,MAGbwJ,EAAO9P,EAAAC,EAAAC,cAAC2S,GAAD,MAAuB,QAInC,OAGPvU,KAAKJ,MAAMmO,YAAYC,iBACtBtM,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CACEyH,MAAI,EACJF,WAAS,EACTa,GAAI,GACJZ,UAAU,MACVhF,QAAS,GACTwP,QAAQ,SACRC,WAAW,SACX9R,UAAWL,EAAQ+S,QAEnB9S,EAAAC,EAAAC,cAAC6S,GAAD,CAAOvK,WAAYuH,KAGrB/P,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CACEyH,MAAI,EACJF,WAAS,EACTa,GAAI,GACJZ,UAAU,MACVhF,QAAS,GACTwP,QAAQ,SACRC,WAAW,SACX9R,UAAWL,EAAQ+S,QAEnB9S,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAACF,WAAS,EAACa,IAAE,EAAC4J,QAAQ,YAC9BjS,EAAAC,EAAAC,cAAC6S,GAAD,CAAOvK,WAAYuH,KAErB/P,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAACF,WAAS,EAACa,GAAI,GACtB/J,KAAKJ,MAAMsU,KAAK5S,MACfI,EAAAC,EAAAC,cAAC8S,EAAD,CAAWnT,UAAWvB,KAAKuB,YAE3BG,EAAAC,EAAAC,cAAC+S,GAAD,QAKRjT,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CACEyH,MAAI,EACJF,WAAS,EACTa,GAAI,GACJZ,UAAU,MACVwK,QAAQ,gBACRxP,QAAS,IAERnE,KAAKJ,MAAMsU,KAAK5S,MACfI,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,GACR1H,EAAAC,EAAAC,cAACgT,GAAD,CACE/L,WAAY7I,KAAKsS,UACjB1J,YAAa5I,KAAKmS,WAClB5Q,UAAWvB,KAAKuB,aAGpBG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAACW,IAAE,GACXrI,EAAAC,EAAAC,cAACiT,GAAD,OAEFnT,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAMyH,MAAI,EAAC0L,GAAI,GACbpT,EAAAC,EAAAC,cAACmT,GAAD,QAGF,kBAhQDxR,IAAMC,WA4RrBC,GAAqB,CACzBoO,SlBrXsB,WACtB,MAAO,CACL1T,KCTqB,ciB6XvBmU,UlBhXuB,WACvB,MAAO,CACLnU,KCdsB,eiB6XxBgU,WlB3WwB,WACxB,MAAO,CACLhU,KCnBuB,gBiB6XzB6T,elBtW4B,SAAAgD,GAC5B,MAAO,CACL7W,KCvB4B,mBDwB5B6W,UkBsWWtR,eApBS,SAAAtD,GACtB,MAAO,CACL2N,YAAa3N,EAAMyO,WACnBqF,KAAM9T,EAAMwD,aACZ6F,YAAarJ,EAAMuD,aAAa8F,YAChCmJ,aAAcxS,EAAMuD,aAAanE,SAC7BY,EAAMuD,aAAanE,SACnB,GACJ4L,UAAWhL,EAAMuD,aACjBsI,OAAQ7L,EAAMiM,aAAaJ,SAa7BxI,GAFaC,CAGbK,qBAnVa,SAAAC,GAAK,MAAK,CACvBmC,KAAM,CACJlC,SAAU,EACVO,MAAO,OACPC,OAAQ,SAEVoP,cAAe,GACfW,OAAQ,CACN/P,OAAQ,OACRJ,SAAU,UAEZiC,MAAO,CACLe,SAAU,WACVyH,IAAK,GACLC,MAAO,EACPC,MAAO,KAETsF,cAAe,CACbxP,UAAW,CACT4E,gBAAiB,gBAGrBqK,gBAAiB,CACfrM,MAAO,iBAETuH,SAAU,CACR5H,SAAU,YAEZkH,SAAU,CACRhH,WAAY,QAEd0N,eAAgB,CACdzQ,MAAO,OACPC,OAAQ,OACR4C,SAAU,WACVqC,gBAAiB,sBAEnBwL,eAAgB,CACd1Q,MAAO,OACPC,OAAQ,OACR4C,SAAU,WACV2F,UAAW,iBA0SbjJ,CAAmBwN,yBC5Yf4D,+LAMF,IAJA,IACIC,EADAC,EAAa,GAEfC,EAAI,uBACJC,EAAInW,OAAOC,SAASmW,KAAKxE,UAAU,GAC7BoE,EAAIE,EAAEG,KAAKF,IACjBF,EAAWD,EAAE,IAAMM,mBAAmBN,EAAE,IAEtCC,EAAWM,cACb3V,KAAKJ,MAAMgW,SAASP,EAAWM,yDAIhBrV,GACbA,EAAUgB,QAAUtB,KAAKJ,MAAM0B,OACjCtB,KAAKJ,MAAMiW,UAAU7V,KAAKJ,MAAM0B,MAAMA,wCAKxC,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkU,GAAAnU,EAAD,MACAD,EAAAC,EAAAC,cAACmU,GAAD,cAxBUxS,IAAMC,WAoCTE,eANS,SAAAtD,GACtB,MAAO,CACLkB,MAAOlB,EAAMwD,eAMf,CAAEgS,STzCoB,SAAAtU,GACtB,MAAO,CACLnD,KTHqB,YSIrBmD,USsCUuU,UTIW,SAAArX,GACvB,OAAO,SAAAC,GACL,IAAMC,EAAU,IAAIC,QAAQ,gCAAiC,CAC3DE,QAAS,IAAIC,QAAQ,CACnBC,cAAe,UAAYP,MAI/BQ,MAAMN,GACHO,KAAK,SAAAC,GAIJ,MAHuB,iBAAnBA,EAAIC,aACNC,OAAOC,SAASC,KAAO,MAElBJ,EAAIK,SAEZN,KAAK,SAAAC,GACJT,EA5BC,CACLN,KTd8B,qBSe9B6I,KA0B8B9H,MAE3BO,MAAM,SAAAC,GACLjB,EAxBC,CACLN,KTpB4B,0BkBkBjBuF,CAGbyR,YCtCIa,GAAe,CACnBhI,kBAAkB,EAClBE,gBAAgB,EAChBE,YAAY,GAGD6H,GAAY,WAAkC,IAAjC7V,EAAiC8V,UAAAhQ,OAAA,QAAAsM,IAAA0D,UAAA,GAAAA,UAAA,GAAzBF,GAChC,QADyDE,UAAAhQ,OAAA,EAAAgQ,UAAA,QAAA1D,GAC1CrU,MACb,InBZgC,uBmBa9B,OAAO2B,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEE4N,kBAAmB5N,EAAM4N,mBAE7B,InBhBgC,uBmBiB9B,OAAOlO,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEE8N,gBAAiB9N,EAAM8N,iBAE3B,InBpB4B,mBmBqB1B,OAAOpO,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEgO,YAAahO,EAAMgO,aAEvB,QACE,OAAOhO,ICTE2G,GApBY,WAAwB,IAAvB3G,EAAuB8V,UAAAhQ,OAAA,QAAAsM,IAAA0D,UAAA,GAAAA,UAAA,GAAf,GAAIE,EAAWF,UAAAhQ,OAAA,EAAAgQ,UAAA,QAAA1D,EACjD,OAAQ4D,EAAOjY,MACb,IpBmB8B,qBoBlB5B,OAAO2B,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEE4G,KAAMoP,EAAOpP,KACbqP,gBAAgB,IAGpB,IpBa4B,mBoBZ1B,OAAOvW,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEiW,gBAAgB,IAGpB,QACE,OAAOjW,ICuBE0D,GAjCiB,WAAwB,IAAvB1D,EAAuB8V,UAAAhQ,OAAA,QAAAsM,IAAA0D,UAAA,GAAAA,UAAA,GAAf,GAAIE,EAAWF,UAAAhQ,OAAA,EAAAgQ,UAAA,QAAA1D,EACtD,OAAQ4D,EAAOjY,MACb,IrBFmC,0BqBGjC,OAAO2B,OAAAqW,GAAA,EAAArW,CAAA,CACLwW,uBAAuB,GACpBlW,GAGP,IrBVmC,0BqBWjC,OAAON,OAAAqW,GAAA,EAAArW,CAAA,CACL+D,UAAWuS,EAAOvS,UAClB0S,oBAAoB,EACpBD,uBAAuB,GACpBlW,GAGP,IrBjBiC,wBqBkB/B,OAAON,OAAAqW,GAAA,EAAArW,CAAA,CACLyW,oBAAoB,EACpBD,uBAAuB,GACpBlW,GAEP,IrBd8B,qBqBe5B,OAAON,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEE8E,cAAekR,EAAOlR,gBAG1B,QACE,OAAO9E,ICrBP4V,GAAe,CACnBrP,mBAAmB,EACnB+B,aAAa,EACb2C,YAAa,EACb9M,OAAQ,EACRiY,SAAU,QACV7N,YAAY,GAsFChF,GAnFa,WAAkC,IAAjCvD,EAAiC8V,UAAAhQ,OAAA,QAAAsM,IAAA0D,UAAA,GAAAA,UAAA,GAAzBF,GAAcI,EAAWF,UAAAhQ,OAAA,EAAAgQ,UAAA,QAAA1D,EAC5D,OAAQ4D,EAAOjY,MACb,ItBlBwC,+BsBmBtC,OAAO2B,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEuG,mBAAmB,IAEvB,ItBtBwC,+BsBuBtC,OAAO7G,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEG,MAAO6V,EAAO7V,MACdkW,uBAAuB,EACvBC,yBAAyB,EACzBlW,WAAY4V,EAAO5V,WACnBmG,mBAAmB,IAEvB,ItB9BsC,6BsB+BpC,OAAO7G,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEqW,uBAAuB,EACvBC,yBAAyB,EACzB/P,mBAAmB,IAEvB,ItBpCqB,YsBqCnB,OAAO7G,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEsI,aAAa,EACbe,YAAa2M,EAAOlY,KACpBK,OAAQ6X,EAAOlY,KAAKmD,GACpBgK,YAAa,EACb1C,YAAY,IAEhB,ItB5CqB,YsB6CnB,OAAO7I,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEsI,aAAa,EACb2C,YAAa,EACb1C,YAAY,IAEhB,ItBlDsB,asBmDpB,OAAO7I,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEuI,YAAY,IAEhB,ItBtDuB,csBuDrB,OAAO7I,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEuI,YAAY,IAEhB,ItBzD4B,mBsB0D1B,OAAO7I,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEiL,YAAa+K,EAAOpB,OAExB,ItB1D0B,iBsB2DxB,OAAOlV,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEE/B,UAAW+X,EAAO/X,YAEtB,ItBjEmC,0BsBkEjC,OAAOyB,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEuW,sBAAsB,EACtBC,wBAAwB,IAE5B,ItBtEqC,4BsBuEnC,OAAO9W,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEwW,wBAAwB,EACxBD,sBAAsB,IAE1B,ItB9EqC,4BsB+EnC,OAAO7W,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEZ,SAAU4W,EAAO5W,SACjBmX,sBAAsB,EACtBC,wBAAwB,IAE5B,QACE,OAAOxW,ICzEEyW,eAAgB,CAC7B9P,YAAaA,GACb8H,WAAYA,GACZ/K,iBAAkBA,GAClBH,aAAcA,GACd0I,aAhBmB,WAAqC,IAApCjM,EAAoC8V,UAAAhQ,OAAA,QAAAsM,IAAA0D,UAAA,GAAAA,UAAA,GAA5B,CAAEjK,OAAQ,KAAOmK,EAAWF,UAAAhQ,OAAA,EAAAgQ,UAAA,QAAA1D,EACxD,OAAQ4D,EAAOjY,MACb,IvBAyB,gBuBCvB,MAAO,CACL8N,OAAQmK,EAAOnK,QAEnB,QACE,OAAO7L,IAUXwD,aA7BmB,WAAwB,IAAvBxD,EAAuB8V,UAAAhQ,OAAA,QAAAsM,IAAA0D,UAAA,GAAAA,UAAA,GAAf,GAAIE,EAAWF,UAAAhQ,OAAA,EAAAgQ,UAAA,QAAA1D,EAC3C,OAAQ4D,EAAOjY,MACb,IvBRqB,YuBSnB,OAAO2B,OAAAqW,GAAA,EAAArW,CAAA,GACFM,EADL,CAEEkB,MAAO8U,EAAO9U,QAElB,QACE,OAAOlB,MCNP0W,GAAQC,YAAYC,GAAUC,YAAgBC,MAEpDC,IAASC,OACP1V,EAAAC,EAAAC,cAACyV,EAAA,EAAD,CAAUP,MAAOA,IACfpV,EAAAC,EAAAC,cAAC0V,GAAD,OAGFjE,SAASkE,cAAc","file":"static/js/main.5d972201.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.1602b481.jpg\";","import {\r\n  PLAY_SONG,\r\n  STOP_SONG,\r\n  PAUSE_SONG,\r\n  RESUME_SONG,\r\n  UPDATE_SONG_TIME,\r\n  GET_SONG_FEATURES_ERROR,\r\n  GET_SONG_FEATURES_PENDING,\r\n  GET_SONG_FEATURES_SUCCESS,\r\n  GET_SONG_INDEX\r\n} from \"./types\";\r\n\r\nexport const playSong = song => {\r\n  return {\r\n    type: PLAY_SONG,\r\n    song\r\n  };\r\n};\r\n\r\nexport const stopSong = () => {\r\n  return {\r\n    type: STOP_SONG\r\n  };\r\n};\r\n\r\nexport const pauseSong = () => {\r\n  return {\r\n    type: PAUSE_SONG\r\n  };\r\n};\r\n\r\nexport const resumeSong = () => {\r\n  return {\r\n    type: RESUME_SONG\r\n  };\r\n};\r\n\r\nexport const updateSongTime = time => {\r\n  return {\r\n    type: UPDATE_SONG_TIME,\r\n    time\r\n  };\r\n};\r\nexport const getSongIndex = songIndex => {\r\n  return {\r\n    type: GET_SONG_INDEX,\r\n    songIndex\r\n  };\r\n};\r\n\r\nexport const getSongFeaturesError = () => {\r\n  return {\r\n    type: GET_SONG_FEATURES_ERROR\r\n  };\r\n};\r\n\r\nexport const getSongFeaturesPending = () => {\r\n  return {\r\n    type: GET_SONG_FEATURES_PENDING\r\n  };\r\n};\r\n\r\nexport const getSongFeaturesSuccess = features => {\r\n  return {\r\n    type: GET_SONG_FEATURES_SUCCESS,\r\n    features\r\n  };\r\n};\r\n\r\nexport const getSongFeatures = (songId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(\r\n      `https://api.spotify.com/v1/audio-features/${songId}`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: \"Bearer \" + accessToken\r\n        })\r\n      }\r\n    );\r\n    dispatch(getSongFeaturesPending());\r\n    fetch(request)\r\n      .then(res => {\r\n        if (res.statusText === \"Unauthorized\") {\r\n          window.location.href = \"./\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(getSongFeaturesSuccess(res));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getSongFeaturesError(err));\r\n      });\r\n  };\r\n};\r\n","export const FETCH_PLAYLISTS = \"FETCH_PLAYLISTS\";\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_HIDE_PLAYLIST = \"TOGGLE_HIDE_PLAYLIST\";\r\nexport const TOGGLE_DYNAMIC_COLOR = \"TOGGLE_DYNAMIC_COLOR\";\r\nexport const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\";\r\nexport const FETCH_PLAYLISTS_SUCCESS = \"FETCH_PLAYLISTS_SUCCESS\";\r\nexport const FETCH_PLAYLISTS_ERROR = \"FETCH_PLAYLISTS_ERROR\";\r\nexport const FETCH_PLAYLISTS_PENDING = \"FETCH_PLAYLISTS_PENDING\";\r\nexport const FETCH_PLAYLIST_SONGS_PENDING = \"FETCH_PLAYLIST_SONGS_PENDING\";\r\nexport const FETCH_PLAYLIST_SONGS_SUCCESS = \"FETCH_PLAYLIST_SONGS_SUCCESS\";\r\nexport const FETCH_PLAYLIST_SONGS_ERROR = \"FETCH_PLAYLIST_SONGS_ERROR\";\r\nexport const PLAY_SONG = \"PLAY_SONG\";\r\nexport const STOP_SONG = \"STOP_SONG\";\r\nexport const PAUSE_SONG = \"PAUSE_SONG\";\r\nexport const RESUME_SONG = \"RESUME_SONG\";\r\nexport const GET_PLAYLIST_INDEX = \"GET_PLAYLIST_INDEX\";\r\nexport const UPDATE_SONG_TIME = \"UPDATE_SONG_TIME\";\r\nexport const GET_SONG_FEATURES_SUCCESS = \"GET_SONG_FEATURES_SUCCESS\";\r\nexport const GET_SONG_FEATURES_ERROR = \"GET_SONG_FEATURES_ERROR\";\r\nexport const GET_SONG_FEATURES_PENDING = \"GET_SONG_FEATURES_PENDING\";\r\nexport const GET_SONG_INDEX = \"GET_SONG_INDEX\";\r\nexport const UPDATE_VOLUME = \"UPDATE_VOLUME\";\r\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\r\nexport const FETCH_USER_ERROR = \"FETCH_USER_ERROR\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {\r\n  getSongFeatures,\r\n  getSongIndex,\r\n  playSong\r\n} from \"../actions/songActions\";\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 0,\r\n    overflow: \"auto\",\r\n    scrollbarWidth: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0\",\r\n      height: \"0\"\r\n    }\r\n  },\r\n  table: {\r\n    maxWidth: 500\r\n  },\r\n  tableC: {\r\n    borderBottomColor: theme.palette.divider\r\n  },\r\n  tableRow: {\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  }\r\n});\r\n\r\nclass TrackList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedIndexSong: this.props.songIndex\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.songs.playlistId) {\r\n      if (this.props.songs.playlistId !== prevProps.songs.playlistId) {\r\n        if (this.refs.tcontainer) {\r\n          this.refs.tcontainer.scrollTop = 0;\r\n        }\r\n      }\r\n    }\r\n    if (this.props.songIndex !== prevProps.songIndex) {\r\n      this.setState({ selectedIndexSong: this.props.songIndex });\r\n    }\r\n  }\r\n\r\n  msToMinutesAndSeconds(ms) {\r\n    const minutes = Math.floor(ms / 60000);\r\n    const seconds = ((ms % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  }\r\n\r\n  SelectSongToPlay(song, index) {\r\n    this.props.getSongIndex(index);\r\n    this.props.playSong(song.track);\r\n    this.props.getSongFeatures(song.track.id, this.props.token);\r\n    this.props.playAudio(song);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.props.songs.songs) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className={classes.content} ref=\"tcontainer\">\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow key=\"headertable\">\r\n                  <TableCell className={classes.tableC}>TITLE</TableCell>\r\n                  <TableCell className={classes.tableC} align=\"left\">\r\n                    ARTIST\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableC} align=\"left\">\r\n                    DURATION\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.props.songs.songs.map((row, index) => (\r\n                  <TableRow\r\n                    selected={\r\n                      this.state.selectedIndexSong === index ? true : false\r\n                    }\r\n                    className={classes.tableRow}\r\n                    hover={true}\r\n                    key={index + \"\" + row.track.id}\r\n                    onClick={() => this.SelectSongToPlay(row, index)}\r\n                  >\r\n                    <TableCell\r\n                      className={classes.tableC}\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                    >\r\n                      {row.track.name}\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableC} align=\"left\">\r\n                      {row.track.artists[0].name}\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableC} align=\"left\">\r\n                      {this.msToMinutesAndSeconds(row.track.duration_ms)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songs: state.songsReducer.songs ? state.songsReducer : \"\",\r\n    token: state.tokenReducer.token ? state.tokenReducer.token : \"\",\r\n    playlists: state.playlistsReducer,\r\n    songIndex: state.songsReducer.songIndex\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getSongFeatures,\r\n  getSongIndex,\r\n  playSong\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(TrackList));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchPlaylists,\r\n  fetchPlaylistSongs,\r\n  getPlaylistIndex\r\n} from \"../actions/playlistsActions\";\r\nimport {\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex\r\n} from \"../actions/songActions\";\r\n\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TrackList from \"./TrackList\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    maxHeight: \"640px\" //height of spotify album cover\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    position: \"relative\",\r\n    background: \"transparent\",\r\n    overflow: \"auto\",\r\n    scrollbarWidth: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0\",\r\n      height: \"0\"\r\n    }\r\n  },\r\n  playTitle: {\r\n    position: \"absolute\",\r\n    marginLeft: \"15px\",\r\n    marginTop: \"-25px\"\r\n  },\r\n  tracklistTotal: {\r\n    position: \"absolute\",\r\n    marginLeft: \"265px\",\r\n    marginTop: \"640px\"\r\n  }\r\n});\r\n\r\nclass Playlists extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedIndexPL: this.props.playlists.playlistIndex,\r\n      selectedIndexSong: this.props.songIndex\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps) {\r\n      if (this.props.userId !== prevProps.userId) {\r\n        if (this.props.userId !== \"\" && this.props.token !== \"\") {\r\n          this.props.fetchPlaylists(this.props.userId, this.props.token);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  renderList() {\r\n    if (this.props.playlists.playlists) {\r\n      return this.props.playlists.playlists.map((playlist, index) => {\r\n        return (\r\n          <ListItem\r\n            variant=\"body2\"\r\n            button\r\n            selected={this.state.selectedIndexPL === index}\r\n            key={playlist.id}\r\n            onClick={() =>\r\n              this.FetchSongs(\r\n                this.props.userId,\r\n                playlist.id,\r\n                this.props.token,\r\n                index\r\n              )\r\n            }\r\n          >\r\n            <ListItemText primary={playlist.name} />\r\n          </ListItem>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <ListItem variant=\"body2\" key=\"generic\">\r\n            <ListItemText primary=\"Loading Playlists...\" />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  FetchSongs(userId, playlistId, token, index) {\r\n    //We avoid fetching the same tracklist\r\n    if (this.props.songs.playlistId !== playlistId) {\r\n      this.props.fetchPlaylistSongs(userId, playlistId, token);\r\n      this.props.getPlaylistIndex(index);\r\n      this.props.getSongIndex(null);\r\n      this.setState({ selectedIndexPL: index });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Typography className={classes.playTitle} variant=\"overline\" noWrap>\r\n          PLAYLISTS\r\n        </Typography>\r\n        <Typography\r\n          className={classes.tracklistTotal}\r\n          variant=\"overline\"\r\n          noWrap\r\n        >\r\n          {this.props.songs.songs\r\n            ? this.props.songs.songs.length + \" SONGS\"\r\n            : null}\r\n        </Typography>\r\n        <div className={classes.root}>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            anchor=\"left\"\r\n          >\r\n            <List component=\"nav\">{this.renderList()}</List>\r\n          </Drawer>\r\n          {!this.props.fetchSongsPending ? (\r\n            <TrackList playAudio={this.props.playAudio} />\r\n          ) : null}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userId: state.userReducer.user ? state.userReducer.user.id : \"\",\r\n    token: state.tokenReducer.token ? state.tokenReducer.token : \"\",\r\n    playlists: state.playlistsReducer,\r\n    songs: state.songsReducer.songs ? state.songsReducer : \"\",\r\n    selectedSongId: state.songsReducer.songId,\r\n    songIndex: state.songsReducer.songIndex,\r\n    fetchSongsPending: state.songsReducer.fetchSongsPending\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchPlaylists,\r\n  fetchPlaylistSongs,\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex,\r\n  getPlaylistIndex\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Playlists));\r\n","import {\r\n  FETCH_PLAYLISTS_ERROR,\r\n  FETCH_PLAYLISTS_SUCCESS,\r\n  FETCH_PLAYLISTS_PENDING,\r\n  FETCH_PLAYLIST_SONGS_ERROR,\r\n  FETCH_PLAYLIST_SONGS_PENDING,\r\n  FETCH_PLAYLIST_SONGS_SUCCESS,\r\n  GET_PLAYLIST_INDEX\r\n} from \"./types\";\r\n\r\nexport const getPlaylistIndex = playlistIndex => {\r\n  return {\r\n    type: GET_PLAYLIST_INDEX,\r\n    playlistIndex\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsPending = () => {\r\n  return {\r\n    type: FETCH_PLAYLISTS_PENDING\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsSuccess = playlists => {\r\n  return {\r\n    type: FETCH_PLAYLISTS_SUCCESS,\r\n    playlists\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsError = () => {\r\n  return {\r\n    type: FETCH_PLAYLISTS_ERROR\r\n  };\r\n};\r\n\r\nexport const fetchPlaylists = (userId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(\r\n      `https://api.spotify.com/v1/users/${userId}/playlists?limit=50`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: \"Bearer \" + accessToken\r\n        })\r\n      }\r\n    );\r\n\r\n    dispatch(fetchPlaylistsPending());\r\n\r\n    fetch(request)\r\n      .then(res => {\r\n        if (res.statusText === \"Unauthorized\") {\r\n          window.location.href = \"./\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(fetchPlaylistsSuccess(res.items));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchPlaylistsError(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsPending = () => {\r\n  return {\r\n    type: FETCH_PLAYLIST_SONGS_PENDING\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsSuccess = (songs, playlistId) => {\r\n  return {\r\n    type: FETCH_PLAYLIST_SONGS_SUCCESS,\r\n    songs,\r\n    playlistId\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsError = () => {\r\n  return {\r\n    type: FETCH_PLAYLIST_SONGS_ERROR\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongs = (userId, playlistId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(\r\n      `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: \"Bearer \" + accessToken\r\n        })\r\n      }\r\n    );\r\n\r\n    dispatch(fetchPlaylistSongsPending());\r\n\r\n    fetch(request)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(fetchPlaylistSongsSuccess(res.items, playlistId));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchPlaylistSongsError(err));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nconst styles = theme => ({\r\n  iconHover: {\r\n    color: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.light\r\n    }\r\n  }\r\n});\r\n\r\nconst IconButton = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <Icon className={classes.iconHover} style={{ fontSize: props.iconSize }}>\r\n      {props.iconName}\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(IconButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, IconButton } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconBCustom from \"./IconButton\";\r\nimport {\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex\r\n} from \"../actions/songActions\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  buttonSO: {\r\n    padding: \"0px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  }\r\n};\r\n\r\nclass PlaybackButtons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playPauseIcon: !props.songPaused ? \"pause\" : \"play_arrow\"\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.songPaused !== prevProps.songPaused) {\r\n      this.setState({\r\n        playPauseIcon: !this.props.songPaused ? \"pause\" : \"play_arrow\"\r\n      });\r\n    }\r\n  }\r\n  handleClickNext = () => {\r\n    const { songList, songId, songIndex, token } = this.props;\r\n\r\n    if (songId && songIndex !== null) {\r\n      if (songIndex + 1 >= songList.length) {\r\n        //back to zero because we ran out of songs\r\n        this.props.playAudio(songList[0]);\r\n        this.props.playSong(songList[0].track);\r\n        this.props.getSongFeatures(songList[0].track.id, token);\r\n        this.props.getSongIndex(0);\r\n      } else {\r\n        this.props.playAudio(songList[songIndex + 1]);\r\n        this.props.playSong(songList[songIndex + 1].track);\r\n        this.props.getSongFeatures(songList[songIndex + 1].track.id, token);\r\n        this.props.getSongIndex(songIndex + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClickPrevious = () => {\r\n    const { songList, songId, songIndex, token } = this.props;\r\n    if (songId && songIndex !== null) {\r\n      if (songIndex === 0) {\r\n        //Play the last song of the playlist since there is no previous song\r\n        this.props.getSongIndex(songList.length - 1);\r\n        this.props.playSong(songList[songList.length - 1].track);\r\n        this.props.getSongFeatures(\r\n          songList[songList.length - 1].track.id,\r\n          token\r\n        );\r\n        this.props.playAudio(songList[songList.length - 1]);\r\n      } else {\r\n        this.props.getSongIndex(songIndex - 1);\r\n        this.props.playSong(songList[songIndex - 1].track);\r\n        this.props.getSongFeatures(songList[songIndex - 1].track.id, token);\r\n        this.props.playAudio(songList[songIndex - 1]);\r\n      }\r\n    }\r\n  };\r\n  handleClickPlayPause = () => {\r\n    const { songPlaying, songPaused, songId } = this.props;\r\n    if (songPlaying && songPaused) {\r\n      this.props.resumeAudio();\r\n    }\r\n    if (songPlaying && !songPaused) {\r\n      this.props.pauseAudio();\r\n    }\r\n    if (!songPlaying && songId) {\r\n      console.log(this.props);\r\n      //Song selected but it's not being played, let's play it again then\r\n      this.props.resumeAudio();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Grid className={classes.root} container direction=\"row\" spacing={0}>\r\n        <Grid item>\r\n          <IconButton\r\n            disableRipple={true}\r\n            className={classes.buttonSO}\r\n            onClick={this.handleClickPrevious}\r\n          >\r\n            <IconBCustom iconName=\"skip_previous\" iconSize={40} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            disableRipple={true}\r\n            className={classes.buttonSO}\r\n            onClick={this.handleClickPlayPause}\r\n          >\r\n            <IconBCustom iconName={this.state.playPauseIcon} iconSize={40} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            disableRipple={true}\r\n            className={classes.buttonSO}\r\n            onClick={this.handleClickNext}\r\n          >\r\n            <IconBCustom iconName=\"skip_next\" iconSize={40} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songPaused: state.songsReducer.songPaused,\r\n    songPlaying: state.songsReducer.songPlaying,\r\n    songDetails: state.songsReducer.songDetails,\r\n    songList: state.songsReducer.songs ? state.songsReducer.songs : null,\r\n    songId: state.songsReducer.songId ? state.songsReducer.songId : null,\r\n    songIndex: state.songsReducer.songIndex,\r\n    token: state.tokenReducer.token ? state.tokenReducer.token : \"\"\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(PlaybackButtons));\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst styles = {\r\n  image: {\r\n    maxWidth: \"640px\",\r\n    maxHeight: \"640px\" //640px\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n    boxShadow: \"2px 2px 10px #000000\"\r\n  }\r\n};\r\nconst Cover = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid item xs className={classes.image}>\r\n      <img className={classes.img} alt=\"AnalBumCover\" src={props.albumcover} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default withStyles(styles)(Cover);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 0,\r\n    position: \"relative\"\r\n  },\r\n  elapsedTimeMargin: {\r\n    verticalAlign: \"bottom\",\r\n    float: \"left\",\r\n    marginTop: \"-10px\"\r\n  },\r\n  totalTimeMargin: {\r\n    verticalAlign: \"bottom\",\r\n    float: \"right\",\r\n    marginTop: \"-10px\"\r\n  },\r\n  slider: {\r\n    \"&:hover\": {\r\n      cursor: \"default\"\r\n    },\r\n    padding: \"22px 0px\"\r\n  },\r\n  trackThickness: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: 5\r\n  },\r\n  thumbIcon: {\r\n    opacity: 1,\r\n    \"&:hover\": {\r\n      boxShadow: `0px 0px 0px 5px var(--custom-color)`\r\n    },\r\n    \"&$activated\": {\r\n      boxShadow: `0px 0px 0px 9px var(--custom-color)!important`\r\n    },\r\n    \"&$jumped\": {\r\n      boxShadow: `0px 0px 0px 9px var(--custom-color)!important`\r\n    }\r\n  },\r\n  activated: {},\r\n  jumped: {},\r\n  focused: {}\r\n});\r\n\r\nclass SongProgress extends React.Component {\r\n  secondFormatter = number => {\r\n    const roundedSeconds = Math.ceil(number);\r\n    if (roundedSeconds < 10) {\r\n      return `0:0${roundedSeconds}`;\r\n    } else {\r\n      return `0:${roundedSeconds}`;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Slider\r\n          min={0}\r\n          max={30} //previews are no longer than 30 seconds\r\n          step={1}\r\n          className={classes.root}\r\n          classes={{\r\n            container: classes.slider,\r\n            track: classes.trackThickness,\r\n            thumb: classes.thumbIcon,\r\n            activated: classes.activated,\r\n            jumped: classes.jumped,\r\n            focused: classes.focused\r\n          }}\r\n          value={Math.ceil(this.props.songsInfo.timeElapsed)}\r\n        />\r\n\r\n        <div className={classes.elapsedTimeMargin}>\r\n          <Typography variant=\"caption\" noWrap>\r\n            {this.secondFormatter(this.props.songsInfo.timeElapsed)}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.totalTimeMargin}>\r\n          <Typography variant=\"caption\" noWrap>\r\n            0:30\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songsInfo: state.songsReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(SongProgress));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { updateVolume } from \"../actions/\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  slider: {\r\n    padding: \"22px 0px\",\r\n    \"&:hover $thumbIcon\": {\r\n      opacity: 1\r\n    }\r\n  },\r\n  trackThickness: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: 5\r\n  },\r\n  thumbIcon: {\r\n    opacity: 0\r\n  }\r\n});\r\n\r\nclass SliderComp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: props.volume\r\n    };\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n    this.props.updateVolume(Math.ceil(value));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        className={classes.root}\r\n        classes={{\r\n          container: classes.slider,\r\n          track: classes.trackThickness,\r\n          thumb: classes.thumbIcon\r\n        }}\r\n        value={value}\r\n        onChange={this.handleChange}\r\n        onDragEnd={this.props.jumpAtTime}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    volume: state.soundReducer.volume\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateVolume\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(SliderComp));\r\n","import * as actionTypes from \"./types\";\r\n\r\nexport const setToken = token => {\r\n  return {\r\n    type: actionTypes.SET_TOKEN,\r\n    token\r\n  };\r\n};\r\n\r\nexport const updateVolume = volume => {\r\n  return {\r\n    type: actionTypes.UPDATE_VOLUME,\r\n    volume\r\n  };\r\n};\r\n\r\nexport const toggleHiddenPlaylist = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_HIDE_PLAYLIST\r\n  };\r\n};\r\n\r\nexport const toggleDynamicColor = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_DYNAMIC_COLOR\r\n  };\r\n};\r\n\r\nexport const toggleDarkMode = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_DARK_MODE\r\n  };\r\n};\r\n\r\nexport const fetchUserSuccess = user => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_SUCCESS,\r\n    user\r\n  };\r\n};\r\n\r\nexport const fetchUserError = () => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_ERROR\r\n  };\r\n};\r\n\r\nexport const fetchUser = accessToken => {\r\n  return dispatch => {\r\n    const request = new Request(\"https://api.spotify.com/v1/me\", {\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + accessToken\r\n      })\r\n    });\r\n\r\n    fetch(request)\r\n      .then(res => {\r\n        if (res.statusText === \"Unauthorized\") {\r\n          window.location.href = \"./\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(fetchUserSuccess(res));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchUserError(err));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"./Slider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 0\r\n  },\r\n  volIcon: {\r\n    float: \"right\",\r\n    marginRight: \"-10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  ico: {\r\n    float: \"right\",\r\n    marginTop: \"12px\",\r\n    marginRight: \"5px\",\r\n    color: theme.palette.primary.main\r\n  }\r\n});\r\n\r\nclass Volume extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid className={classes.root} container direction=\"row\">\r\n        <Grid item xs={2}>\r\n          <Icon className={classes.ico} style={{ fontSize: 20 }}>\r\n            volume_up\r\n          </Icon>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Volume);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <Typography variant=\"h4\" color=\"primary\" noWrap>\r\n      {props.songDetails\r\n        ? props.songDetails.artists[0].name + \" - \" + props.songDetails.name\r\n        : null}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songDetails: state.songsReducer.songDetails\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  outer: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.6)\"\r\n  }\r\n};\r\n\r\nconst ContainerOuter = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.outer} style={{ backgroundColor: props.bcolor }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default withStyles(styles)(ContainerOuter);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  inner: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    transform: \"scale(0.89)\"\r\n  }\r\n};\r\n\r\nconst ContainerInner = props => {\r\n  const { classes } = props;\r\n  return <div className={classes.inner}>{props.children}</div>;\r\n};\r\nexport default withStyles(styles)(ContainerInner);\r\n","import React from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst spotifyauthurl = \"https://accounts.spotify.com/authorize?\";\r\nconst client_id = \"11ca528f5f3447c3913e6f903faa8999\"; // Your client id\r\nconst redirect_uri = \"https://shaggun.github.io/spotify-moody-player\"; // Or Your redirect uri\r\nconst scope =\r\n  \"playlist-read-private%20playlist-read-collaborative%20user-library-read%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state\";\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    backgroundColor: \"#1DB954\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#14813a\"\r\n    }\r\n  },\r\n  container: {\r\n    maxWidth: \"640px\"\r\n  },\r\n  text: {\r\n    paddingBottom: \"30px\"\r\n  }\r\n});\r\n\r\nconst LoginButton = props => {\r\n  const { classes } = props;\r\n\r\n  const reqURL = () => {\r\n    return (window.location.href =\r\n      spotifyauthurl +\r\n      \"client_id=\" +\r\n      client_id +\r\n      \"&scope=\" +\r\n      scope +\r\n      \"&response_type=token\" +\r\n      \"&redirect_uri=\" +\r\n      redirect_uri);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Typography className={classes.text} variant=\"h4\" color=\"primary\">\r\n        The colors will match the mood of the song.\r\n      </Typography>\r\n      <Fab variant=\"extended\" className={classes.fab} onClick={reqURL}>\r\n        <Typography color=\"primary\">LOG IN WITH SPOTIFY</Typography>\r\n      </Fab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(LoginButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport {\r\n  toggleDarkMode,\r\n  toggleDynamicColor,\r\n  toggleHiddenPlaylist\r\n} from \"../actions\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 60,\r\n    right: 0,\r\n    left: -100\r\n  },\r\n  wholeSet: {\r\n    position: \"relative\"\r\n  },\r\n  fieldSet: {\r\n    marginLeft: \"10px\"\r\n  }\r\n});\r\n\r\nclass SettingsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hiddenPlaylist: props.switchState.uiHiddenPlaylist,\r\n      dynamicColor: props.switchState.uiDynamicColor,\r\n      darkMode: props.switchState.uiDarkMode\r\n    };\r\n  }\r\n\r\n  handleChangeSettings = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n    switch (name) {\r\n      case \"hiddenPlaylist\":\r\n        return this.props.toggleHiddenPlaylist();\r\n      case \"dynamicColor\":\r\n        return this.props.toggleDynamicColor();\r\n      case \"darkMode\":\r\n        return this.props.toggleDarkMode();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <FormControl component=\"fieldset\" className={classes.fieldSet}>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={this.state.hiddenPlaylist}\r\n                  onChange={this.handleChangeSettings(\"hiddenPlaylist\")}\r\n                  value=\"hiddenPlay\"\r\n                />\r\n              }\r\n              label=\"Hide Playlist\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={this.state.dynamicColor}\r\n                  onChange={this.handleChangeSettings(\"dynamicColor\")}\r\n                  value=\"dynamicColor\"\r\n                />\r\n              }\r\n              label=\"Dynamic Color\"\r\n            />\r\n            {!this.state.dynamicColor ? (\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={this.state.darkMode}\r\n                    onChange={this.handleChangeSettings(\"darkMode\")}\r\n                    value=\"darkMode\"\r\n                  />\r\n                }\r\n                label=\"Dark Mode\"\r\n              />\r\n            ) : null}\r\n          </FormGroup>\r\n        </FormControl>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    switchState: state.uiSwitches\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleDarkMode,\r\n  toggleDynamicColor,\r\n  toggleHiddenPlaylist\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(SettingsPanel));\r\n","import red from \"@material-ui/core/colors/red\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport lime from \"@material-ui/core/colors/lime\";\r\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport teal from \"@material-ui/core/colors/teal\";\r\nimport cyan from \"@material-ui/core/colors/cyan\";\r\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n//Shade text is the last shade where the text is dark\r\n//a higher shade means that the color is dark enough for the text to change to a light color\r\nconst colorRed = {\r\n  color: red,\r\n  shadeText: 300\r\n};\r\nconst colorDeepOrange = {\r\n  color: deepOrange,\r\n  shadeText: 400\r\n};\r\nconst colorOrange = {\r\n  color: orange,\r\n  shadeText: 700\r\n};\r\nconst colorAmber = {\r\n  color: amber,\r\n  shadeText: 900\r\n};\r\nconst colorYellow = {\r\n  color: yellow,\r\n  shadeText: 900\r\n};\r\nconst colorLime = {\r\n  color: lime,\r\n  shadeText: 800\r\n};\r\nconst colorLightGreen = {\r\n  color: lightGreen,\r\n  shadeText: 600\r\n};\r\nconst colorGreen = {\r\n  color: green,\r\n  shadeText: 500\r\n};\r\nconst colorTeal = {\r\n  color: teal,\r\n  shadeText: 300\r\n};\r\nconst colorCyan = {\r\n  color: cyan,\r\n  shadeText: 600\r\n};\r\nconst colorLightBlue = {\r\n  color: lightBlue,\r\n  shadeText: 500\r\n};\r\nconst colorBlue = {\r\n  color: blue,\r\n  shadeText: 400\r\n};\r\nconst colorIndigo = {\r\n  color: indigo,\r\n  shadeText: 200\r\n};\r\nconst colorDeepPurple = {\r\n  color: deepPurple,\r\n  shadeText: 200\r\n};\r\n\r\nconst colors = [\r\n  colorRed,\r\n  colorDeepOrange,\r\n  colorOrange,\r\n  colorAmber,\r\n  colorYellow,\r\n  colorLime,\r\n  colorLightGreen,\r\n  colorGreen,\r\n  colorTeal,\r\n  colorCyan,\r\n  colorLightBlue,\r\n  colorBlue,\r\n  colorIndigo,\r\n  colorDeepPurple\r\n];\r\n\r\n//It returns an integer [0,13] representing a color according to song's energy\r\n//y=13x\r\nconst energyToColor = energy => Math.round(13 * energy);\r\n\r\n//It returns a shade [100,200,300...,900] representing the color intensity according to how positive a song is\r\n//y=800*x+100\r\nconst valenceToShade = valence => Math.round((800 * valence + 100) / 100) * 100;\r\n\r\n//I don't use this function anymore but it could be useful for another project\r\nexport const createDynamicTheme = (energy, valence) => {\r\n  const colorIndex = energyToColor(energy);\r\n  const colorShade = valenceToShade(valence);\r\n  const dynamicColor = colors[colorIndex].color[colorShade];\r\n  const dynamicTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: dynamicColor\r\n      },\r\n      secondary: {\r\n        main: dynamicColor\r\n      },\r\n      background: {\r\n        paper:\r\n          colors[colorIndex].shadeText <= colorShade ? \"#ffffff\" : \"#424242\"\r\n      },\r\n      text: {\r\n        primary:\r\n          colors[colorIndex].shadeText <= colorShade ? \"#424242\" : \"#ffffff\"\r\n      }\r\n    },\r\n    typography: { useNextVariants: true }\r\n  });\r\n  return dynamicTheme;\r\n};\r\n\r\nexport const colorShade = (energy, valence) => {\r\n  const colorIndex = energyToColor(energy);\r\n  const colorShade = valenceToShade(valence);\r\n  return colors[colorIndex].color[colorShade];\r\n};\r\n\r\nexport const isTextDark = (energy, valence) => {\r\n  const colorIndex = energyToColor(energy);\r\n  const colorShade = valenceToShade(valence);\r\n  return colors[colorIndex].shadeText >= colorShade ? true : false;\r\n};\r\n\r\nexport const hexToRGBA = (hex, alpha) => {\r\n  const hexs = hex.replace(\"#\", \"\");\r\n  const r = parseInt(hexs.substring(0, 2), 16);\r\n  const g = parseInt(hexs.substring(2, 4), 16);\r\n  const b = parseInt(hexs.substring(4, 6), 16);\r\n  return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\r\n};\r\n\r\nexport const rgb2rgba = (color, alpha) => {\r\n  let rgbstringtrimmed = color.slice(0, -1);\r\n  rgbstringtrimmed = rgbstringtrimmed.replace(\"rgb\", \"rgba\");\r\n  return rgbstringtrimmed + `, ${alpha})`;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Playlists from \"./Playlists\";\r\nimport PlaybackButtons from \"./PlaybackButtons\";\r\nimport Cover from \"./Cover\";\r\nimport SongProgress from \"./SongProgress\";\r\nimport Volume from \"./Volume\";\r\nimport IconBCustom from \"./IconButton\";\r\nimport SongHeader from \"./Header\";\r\nimport ContainerOuter from \"./containers/ContainerOuter\";\r\nimport ContainerInner from \"./containers/ContainerInner\";\r\nimport LogInButton from \"./LoginButton\";\r\nimport defaultCover from \"../assets/cover.jpg\";\r\nimport SettingsSwitches from \"./SettingsSwitches\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport {\r\n  colorShade,\r\n  isTextDark,\r\n  hexToRGBA\r\n} from \"../scripts/createDynamicTheme\";\r\nimport {\r\n  stopSong,\r\n  pauseSong,\r\n  resumeSong,\r\n  updateSongTime\r\n} from \"../actions/songActions\";\r\n\r\nconst themeDark = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\", // Switching the dark mode on is a single property value change.\r\n    primary: {\r\n      main: \"#ffffff\",\r\n      light: \"#1DB954\"\r\n    },\r\n    secondary: {\r\n      main: \"#1DB954\"\r\n    }\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nconst themeLight = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n\r\n    primary: {\r\n      main: \"#242424\",\r\n      light: \"#1DB954\"\r\n    },\r\n    secondary: {\r\n      main: \"#1DB954\"\r\n    }\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    height: \"100vh\"\r\n  },\r\n  gridContainer: {},\r\n  topRow: {\r\n    height: \"85vh\",\r\n    overflow: \"hidden\"\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 60,\r\n    right: 0,\r\n    left: -100\r\n  },\r\n  iconSelection: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  iconPlaceholder: {\r\n    color: \"rgba(0,0,0,0)\"\r\n  },\r\n  wholeSet: {\r\n    position: \"relative\"\r\n  },\r\n  fieldSet: {\r\n    marginLeft: \"10px\"\r\n  },\r\n  ContainerOuter: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\"\r\n  },\r\n  ContainerInner: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    transform: \"scale(0.89)\"\r\n  }\r\n});\r\n\r\nclass Layout extends React.Component {\r\n  static audio;\r\n\r\n  state = {\r\n    open: false,\r\n    dynamicCover: defaultCover,\r\n    dynamicBGColor: \"rgba(2,136,209,0.6)\", //default song\r\n    dynamicDarkText: false, //dark text for a light theme according to color shade\r\n    //Switch states\r\n    hiddenPlaylist: false,\r\n    dynamicColor: true,\r\n    darkMode: true\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.songFeatures.energy &&\r\n      this.props.songFeatures !== prevProps.songFeatures\r\n    ) {\r\n      this.setState(state => ({\r\n        dynamicCover: this.props.songDetails.album.images[0].url,\r\n        dynamicBGColor: hexToRGBA(\r\n          colorShade(\r\n            this.props.songFeatures.energy,\r\n            this.props.songFeatures.valence\r\n          ),\r\n          0.6\r\n        ),\r\n        dynamicDarkText: isTextDark(\r\n          this.props.songFeatures.energy,\r\n          this.props.songFeatures.valence\r\n        )\r\n      }));\r\n    }\r\n    if (this.audio !== undefined) {\r\n      this.audio.volume = this.props.volume / 100;\r\n    }\r\n  }\r\n\r\n  calculateTime() {\r\n    const routine = setInterval(() => {\r\n      if (this.audio.ended) {\r\n        this.pauseSong();\r\n        this.props.updateSongTime(0);\r\n      } else if (!this.props.songsInfo.songPaused) {\r\n        this.props.updateSongTime(this.audio.currentTime);\r\n      }\r\n    }, 1000);\r\n    this.setState({\r\n      routine: routine\r\n    });\r\n  }\r\n\r\n  stopSong = () => {\r\n    if (this.audio) {\r\n      this.props.stopSong();\r\n      this.audio.pause();\r\n      this.props.updateSongTime(0);\r\n      clearInterval(this.state.routine);\r\n    } else {\r\n      this.props.stopSong();\r\n      this.props.updateSongTime(0);\r\n      clearInterval(this.state.routine);\r\n    }\r\n  };\r\n\r\n  resumeSong = () => {\r\n    if (this.audio) {\r\n      this.props.resumeSong();\r\n      this.audio.play();\r\n      this.calculateTime();\r\n    }\r\n  };\r\n\r\n  pauseSong = () => {\r\n    if (this.audio) {\r\n      this.props.pauseSong();\r\n      this.audio.pause();\r\n      clearInterval(this.state.routine);\r\n    }\r\n  };\r\n\r\n  playAudio = song => {\r\n    const { updateSongTime } = this.props;\r\n    clearInterval(this.state.routine);\r\n    if (song.track.preview_url !== null) {\r\n      if (this.audio === undefined) {\r\n        this.audio = new Audio(song.track.preview_url);\r\n        this.audio.play();\r\n        this.calculateTime();\r\n      } else {\r\n        updateSongTime(0);\r\n        this.audio.pause();\r\n        this.audio = new Audio(song.track.preview_url);\r\n        this.audio.play();\r\n        this.calculateTime();\r\n      }\r\n    } else {\r\n      this.stopSong();\r\n    }\r\n  };\r\n\r\n  handleClickSettings = event => {\r\n    this.setState(state => ({\r\n      open: !state.open\r\n    }));\r\n  };\r\n\r\n  handleClickAway = () => {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  };\r\n\r\n  handleChangeSettings = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open, dynamicCover } = this.state;\r\n    document.body.style.backgroundImage = `url(${dynamicCover})`;\r\n\r\n    return (\r\n      <MuiThemeProvider\r\n        theme={\r\n          this.props.switchState.uiDynamicColor\r\n            ? this.state.dynamicDarkText\r\n              ? themeLight\r\n              : themeDark\r\n            : this.props.switchState.uiDarkMode\r\n            ? themeDark\r\n            : themeLight\r\n        }\r\n      >\r\n        <ContainerOuter\r\n          bcolor={\r\n            this.props.switchState.uiDynamicColor\r\n              ? this.state.dynamicBGColor\r\n              : this.props.switchState.uiDarkMode\r\n              ? \"rgba(0, 0, 0, 0.6)\"\r\n              : \"rgba(255, 255, 255, 0.4)\"\r\n          }\r\n        >\r\n          <ContainerInner>\r\n            <div className={classes.root}>\r\n              <Grid\r\n                container\r\n                justify=\"space-between\"\r\n                alignItems=\"stretch\"\r\n                spacing={16}\r\n                className={classes.gridContainer}\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  spacing={16}\r\n                  wrap=\"nowrap\"\r\n                >\r\n                  <Grid item xs={1}>\r\n                    <Icon\r\n                      className={classes.iconPlaceholder}\r\n                      style={{ fontSize: 40 }}\r\n                    >\r\n                      fiber_manual_record\r\n                    </Icon>\r\n                  </Grid>\r\n                  <Grid item zeroMinWidth>\r\n                    <SongHeader />\r\n                  </Grid>\r\n                  <Grid item xs={1} container justify=\"flex-end\">\r\n                    {this.props.auth.token ? (\r\n                      <div className={classes.wholeSet}>\r\n                        <ClickAwayListener onClickAway={this.handleClickAway}>\r\n                          <div>\r\n                            <IconButton\r\n                              disableRipple={true}\r\n                              className={classes.iconSelection}\r\n                              onClick={this.handleClickSettings}\r\n                            >\r\n                              <IconBCustom\r\n                                iconName=\"more_horiz\"\r\n                                iconSize={40}\r\n                              />\r\n                            </IconButton>\r\n                            {open ? <SettingsSwitches /> : null}\r\n                          </div>\r\n                        </ClickAwayListener>\r\n                      </div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                {this.props.switchState.uiHiddenPlaylist ? (\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    xs={12}\r\n                    direction=\"row\"\r\n                    spacing={16}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={classes.topRow}\r\n                  >\r\n                    <Cover albumcover={dynamicCover} />\r\n                  </Grid>\r\n                ) : (\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    xs={12}\r\n                    direction=\"row\"\r\n                    spacing={16}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" //flex-start\r\n                    className={classes.topRow}\r\n                  >\r\n                    <Grid item container xs justify=\"flex-end\">\r\n                      <Cover albumcover={dynamicCover} />\r\n                    </Grid>\r\n                    <Grid item container xs={6}>\r\n                      {this.props.auth.token ? (\r\n                        <Playlists playAudio={this.playAudio} />\r\n                      ) : (\r\n                        <LogInButton />\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  spacing={16}\r\n                >\r\n                  {this.props.auth.token ? (\r\n                    <React.Fragment>\r\n                      <Grid item>\r\n                        <PlaybackButtons\r\n                          pauseAudio={this.pauseSong}\r\n                          resumeAudio={this.resumeSong}\r\n                          playAudio={this.playAudio}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs>\r\n                        <SongProgress />\r\n                      </Grid>\r\n                      <Grid item sm={1}>\r\n                        <Volume />\r\n                      </Grid>\r\n                    </React.Fragment>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </ContainerInner>\r\n        </ContainerOuter>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    switchState: state.uiSwitches,\r\n    auth: state.tokenReducer,\r\n    songDetails: state.songsReducer.songDetails,\r\n    songFeatures: state.songsReducer.features\r\n      ? state.songsReducer.features\r\n      : \"\",\r\n    songsInfo: state.songsReducer,\r\n    volume: state.soundReducer.volume\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  stopSong,\r\n  pauseSong,\r\n  resumeSong,\r\n  updateSongTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Layout));\r\n","import React from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { connect } from \"react-redux\";\r\nimport { setToken, fetchUser } from \"../actions\";\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    let hashParams = {};\r\n    let e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    if (hashParams.access_token) {\r\n      this.props.setToken(hashParams.access_token);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.token !== this.props.token) {\r\n      this.props.fetchUser(this.props.token.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CssBaseline />\r\n        <Layout />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.tokenReducer\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setToken, fetchUser }\r\n)(App);\r\n","import {\r\n  TOGGLE_HIDE_PLAYLIST,\r\n  TOGGLE_DYNAMIC_COLOR,\r\n  TOGGLE_DARK_MODE\r\n} from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  uiHiddenPlaylist: false,\r\n  uiDynamicColor: true,\r\n  uiDarkMode: true\r\n};\r\n\r\nexport const uiReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_HIDE_PLAYLIST:\r\n      return {\r\n        ...state,\r\n        uiHiddenPlaylist: !state.uiHiddenPlaylist\r\n      };\r\n    case TOGGLE_DYNAMIC_COLOR:\r\n      return {\r\n        ...state,\r\n        uiDynamicColor: !state.uiDynamicColor\r\n      };\r\n    case TOGGLE_DARK_MODE:\r\n      return {\r\n        ...state,\r\n        uiDarkMode: !state.uiDarkMode\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import { FETCH_USER_SUCCESS, FETCH_USER_ERROR } from \"../actions/types\";\r\nexport const userReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        fetchUserError: false\r\n      };\r\n\r\n    case FETCH_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        fetchUserError: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import {\r\n  FETCH_PLAYLISTS_SUCCESS,\r\n  FETCH_PLAYLISTS_ERROR,\r\n  FETCH_PLAYLISTS_PENDING,\r\n  GET_PLAYLIST_INDEX\r\n} from \"../actions/types\";\r\n\r\nexport const playlistsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PLAYLISTS_PENDING:\r\n      return {\r\n        fetchPlaylistsPending: true,\r\n        ...state\r\n      };\r\n\r\n    case FETCH_PLAYLISTS_SUCCESS:\r\n      return {\r\n        playlists: action.playlists,\r\n        fetchPlaylistError: false,\r\n        fetchPlaylistsPending: false,\r\n        ...state\r\n      };\r\n\r\n    case FETCH_PLAYLISTS_ERROR:\r\n      return {\r\n        fetchPlaylistError: true,\r\n        fetchPlaylistsPending: false,\r\n        ...state\r\n      };\r\n    case GET_PLAYLIST_INDEX:\r\n      return {\r\n        ...state,\r\n        playlistIndex: action.playlistIndex\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playlistsReducer;\r\n","import {\r\n  FETCH_PLAYLIST_SONGS_ERROR,\r\n  FETCH_PLAYLIST_SONGS_PENDING,\r\n  FETCH_PLAYLIST_SONGS_SUCCESS,\r\n  PLAY_SONG,\r\n  STOP_SONG,\r\n  PAUSE_SONG,\r\n  RESUME_SONG,\r\n  UPDATE_SONG_TIME,\r\n  GET_SONG_FEATURES_ERROR,\r\n  GET_SONG_FEATURES_PENDING,\r\n  GET_SONG_FEATURES_SUCCESS,\r\n  GET_SONG_INDEX\r\n} from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  fetchSongsPending: true,\r\n  songPlaying: false,\r\n  timeElapsed: 0,\r\n  songId: 0,\r\n  viewType: \"songs\",\r\n  songPaused: true\r\n};\r\n\r\nexport const songsReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PLAYLIST_SONGS_PENDING:\r\n      return {\r\n        ...state,\r\n        fetchSongsPending: true\r\n      };\r\n    case FETCH_PLAYLIST_SONGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        songs: action.songs,\r\n        fetchArtistSongsError: false,\r\n        fetchArtistSongsPending: false,\r\n        playlistId: action.playlistId,\r\n        fetchSongsPending: false\r\n      };\r\n    case FETCH_PLAYLIST_SONGS_ERROR:\r\n      return {\r\n        ...state,\r\n        fetchArtistSongsError: true,\r\n        fetchArtistSongsPending: false,\r\n        fetchSongsPending: true\r\n      };\r\n    case PLAY_SONG:\r\n      return {\r\n        ...state,\r\n        songPlaying: true,\r\n        songDetails: action.song,\r\n        songId: action.song.id,\r\n        timeElapsed: 0,\r\n        songPaused: false\r\n      };\r\n    case STOP_SONG:\r\n      return {\r\n        ...state,\r\n        songPlaying: false,\r\n        timeElapsed: 0,\r\n        songPaused: true\r\n      };\r\n    case PAUSE_SONG:\r\n      return {\r\n        ...state,\r\n        songPaused: true\r\n      };\r\n    case RESUME_SONG:\r\n      return {\r\n        ...state,\r\n        songPaused: false\r\n      };\r\n    case UPDATE_SONG_TIME:\r\n      return {\r\n        ...state,\r\n        timeElapsed: action.time\r\n      };\r\n    case GET_SONG_INDEX:\r\n      return {\r\n        ...state,\r\n        songIndex: action.songIndex\r\n      };\r\n    case GET_SONG_FEATURES_ERROR:\r\n      return {\r\n        ...state,\r\n        getSongFeaturesError: true,\r\n        getSongFeaturesPending: false\r\n      };\r\n    case GET_SONG_FEATURES_PENDING:\r\n      return {\r\n        ...state,\r\n        getSongFeaturesPending: true,\r\n        getSongFeaturesError: false\r\n      };\r\n    case GET_SONG_FEATURES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        features: action.features,\r\n        getSongFeaturesError: false,\r\n        getSongFeaturesPending: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default songsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { SET_TOKEN, UPDATE_VOLUME } from \"../actions/types\";\r\nimport { uiReducer as uiSwitches } from \"./uiReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport playlistsReducer from \"./playlistsReducer\";\r\nimport songsReducer from \"./songsReducer\";\r\n\r\nconst tokenReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.token\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst soundReducer = (state = { volume: 100 }, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_VOLUME:\r\n      return {\r\n        volume: action.volume\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  userReducer: userReducer,\r\n  uiSwitches: uiSwitches,\r\n  playlistsReducer: playlistsReducer,\r\n  songsReducer: songsReducer,\r\n  soundReducer: soundReducer,\r\n  tokenReducer: tokenReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport \"./Style.css\"; //needed for background image in body\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}