{"version":3,"sources":["assets/cover.jpg","actions/songActions.js","actions/types.js","components/TrackList.js","components/Playlists.js","actions/playlistsActions.js","components/IconButton.js","components/PlaybackButtons.js","components/Cover.js","components/SongProgress.js","components/Slider.js","actions/index.js","components/Volume.js","components/Header.js","components/containers/ContainerOuter.js","components/containers/ContainerInner.js","components/LoginButton.js","components/SettingsSwitches.js","scripts/createDynamicTheme.js","components/Layout.js","components/App.js","reducers/uiReducer.js","reducers/userReducer.js","reducers/playlistsReducer.js","reducers/songsReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","playSong","song","type","updateSongTime","time","getSongIndex","songIndex","getSongFeatures","songId","accessToken","dispatch","request","Request","concat","headers","Headers","Authorization","fetch","then","res","statusText","window","location","href","json","features","catch","err","mapDispatchToProps","connect","state","songs","songsReducer","token","tokenReducer","playlists","playlistsReducer","withStyles","theme","content","flexGrow","padding","spacing","unit","overflow","scrollbarWidth","&::-webkit-scrollbar","width","height","table","maxWidth","tableC","borderBottomColor","palette","divider","tableRow","&:hover","cursor","props","_useState","useState","_useState2","Object","slicedToArray","selectedIndexSong","setSelectedIndexSong","tableScroll","useEffect","playlistId","scrollTop","classes","react_default","a","createElement","Fragment","className","ref","div","Table_default","TableHead_default","TableRow_default","key","TableCell_default","align","TableBody_default","map","row","index","selected","hover","track","id","onClick","playAudio","SelectSongToPlay","component","scope","name","artists","ms","minutes","Math","floor","seconds","toFixed","msToMinutesAndSeconds","duration_ms","fetchPlaylists","userId","items","fetchPlaylistSongs","fetchPlaylistSongsSuccess","getPlaylistIndex","playlistIndex","userReducer","user","selectedSongId","fetchSongsPending","root","display","maxHeight","drawer","flexShrink","drawerPaper","position","background","playTitle","marginLeft","marginTop","tracklistTotal","selectedIndexPL","setSelectedIndexPL","FetchSongs","Typography_default","variant","noWrap","length","Drawer_default","paper","anchor","List_default","playlist","ListItem_default","button","ListItemText_default","primary","components_TrackList","iconHover","color","main","light","Icon_default","style","fontSize","iconSize","iconName","songPaused","songPlaying","songDetails","songList","buttonSO","backgroundColor","playPauseIcon","setplayPauseIcon","Grid_default","container","direction","item","index_es","disableRipple","components_IconButton","resumeAudio","pauseAudio","image","img","margin","boxShadow","xs","alt","src","albumcover","songsInfo","elapsedTimeMargin","verticalAlign","float","totalTimeMargin","slider","trackThickness","thumbIcon","opacity","&$activated","&$jumped","activated","jumped","focused","Slider_default","min","max","step","thumb","value","ceil","timeElapsed","number","roundedSeconds","secondFormatter","updateVolume","volume","soundReducer","&:hover $thumbIcon","setValue","onChange","event","volIcon","marginRight","ico","components_Slider","outer","bcolor","children","inner","transform","fab","text","paddingBottom","Fab_default","spotifyauthurl","toggleDarkMode","toggleDynamicColor","toggleHiddenPlaylist","switchState","uiSwitches","top","right","left","wholeSet","fieldSet","uiHiddenPlaylist","hiddenPlaylist","setHiddenPlaylist","_useState3","uiDynamicColor","_useState4","dynamicColor","setDynamicColor","_useState5","uiDarkMode","_useState6","darkMode","setDarkMode","handleChangeSettings","target","checked","Paper_default","FormControl_default","FormGroup_default","FormControlLabel_default","control","Switch_default","label","colors","red","shadeText","deepOrange","orange","amber","yellow","lime","lightGreen","green","teal","cyan","lightBlue","blue","indigo","deepPurple","energyToColor","energy","round","valenceToShade","valence","themeDark","createMuiTheme","secondary","typography","useNextVariants","themeLight","stopSong","pauseSong","resumeSong","auth","songFeatures","gridContainer","topRow","iconSelection","iconPlaceholder","ContainerOuter","ContainerInner","open","setOpen","defaultCover","dynamicCover","setDynamicCover","dynamicBGColor","setDynamicBGColor","_useState7","_useState8","dynamicDarkText","setDynamicDarkText","routine","useRef","audio","album","images","url","hex","alpha","hexs","replace","parseInt","substring","hexToRGBA","colorIndex","colorShade","isTextDark","undefined","current","clearInterval","pause","play","calculateTime","routinec","setInterval","ended","currentTime","preview_url","Audio","document","body","backgroundImage","styles","containers_ContainerOuter","containers_ContainerInner","justify","alignItems","wrap","zeroMinWidth","components_Header","ClickAwayListener_default","onClickAway","IconButton_default","SettingsSwitches","components_Cover","components_Playlists","components_LoginButton","components_PlaybackButtons","components_SongProgress","sm","components_Volume","setToken","fetchUser","e","hashParams","r","q","hash","exec","decodeURIComponent","access_token","CssBaseline_default","components_Layout","defaultState","uiReducer","arguments","objectSpread","action","fetchUserError","fetchPlaylistsPending","fetchPlaylistError","viewType","fetchArtistSongsError","fetchArtistSongsPending","getSongFeaturesError","getSongFeaturesPending","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.626c2554.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.1602b481.jpg\";","import {\r\n  PLAY_SONG,\r\n  STOP_SONG,\r\n  PAUSE_SONG,\r\n  RESUME_SONG,\r\n  UPDATE_SONG_TIME,\r\n  GET_SONG_FEATURES_ERROR,\r\n  GET_SONG_FEATURES_PENDING,\r\n  GET_SONG_FEATURES_SUCCESS,\r\n  GET_SONG_INDEX\r\n} from \"./types\";\r\n\r\nexport const playSong = song => {\r\n  return {\r\n    type: PLAY_SONG,\r\n    song\r\n  };\r\n};\r\n\r\nexport const stopSong = () => {\r\n  return {\r\n    type: STOP_SONG\r\n  };\r\n};\r\n\r\nexport const pauseSong = () => {\r\n  return {\r\n    type: PAUSE_SONG\r\n  };\r\n};\r\n\r\nexport const resumeSong = () => {\r\n  return {\r\n    type: RESUME_SONG\r\n  };\r\n};\r\n\r\nexport const updateSongTime = time => {\r\n  return {\r\n    type: UPDATE_SONG_TIME,\r\n    time\r\n  };\r\n};\r\nexport const getSongIndex = songIndex => {\r\n  return {\r\n    type: GET_SONG_INDEX,\r\n    songIndex\r\n  };\r\n};\r\n\r\nexport const getSongFeaturesError = () => {\r\n  return {\r\n    type: GET_SONG_FEATURES_ERROR\r\n  };\r\n};\r\n\r\nexport const getSongFeaturesPending = () => {\r\n  return {\r\n    type: GET_SONG_FEATURES_PENDING\r\n  };\r\n};\r\n\r\nexport const getSongFeaturesSuccess = features => {\r\n  return {\r\n    type: GET_SONG_FEATURES_SUCCESS,\r\n    features\r\n  };\r\n};\r\n\r\nexport const getSongFeatures = (songId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(\r\n      `https://api.spotify.com/v1/audio-features/${songId}`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: \"Bearer \" + accessToken\r\n        })\r\n      }\r\n    );\r\n    dispatch(getSongFeaturesPending());\r\n    fetch(request)\r\n      .then(res => {\r\n        if (res.statusText === \"Unauthorized\") {\r\n          window.location.href = \"./\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(getSongFeaturesSuccess(res));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getSongFeaturesError(err));\r\n      });\r\n  };\r\n};\r\n","export const FETCH_PLAYLISTS = \"FETCH_PLAYLISTS\";\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_HIDE_PLAYLIST = \"TOGGLE_HIDE_PLAYLIST\";\r\nexport const TOGGLE_DYNAMIC_COLOR = \"TOGGLE_DYNAMIC_COLOR\";\r\nexport const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\";\r\nexport const FETCH_PLAYLISTS_SUCCESS = \"FETCH_PLAYLISTS_SUCCESS\";\r\nexport const FETCH_PLAYLISTS_ERROR = \"FETCH_PLAYLISTS_ERROR\";\r\nexport const FETCH_PLAYLISTS_PENDING = \"FETCH_PLAYLISTS_PENDING\";\r\nexport const FETCH_PLAYLIST_SONGS_PENDING = \"FETCH_PLAYLIST_SONGS_PENDING\";\r\nexport const FETCH_PLAYLIST_SONGS_SUCCESS = \"FETCH_PLAYLIST_SONGS_SUCCESS\";\r\nexport const FETCH_PLAYLIST_SONGS_ERROR = \"FETCH_PLAYLIST_SONGS_ERROR\";\r\nexport const PLAY_SONG = \"PLAY_SONG\";\r\nexport const STOP_SONG = \"STOP_SONG\";\r\nexport const PAUSE_SONG = \"PAUSE_SONG\";\r\nexport const RESUME_SONG = \"RESUME_SONG\";\r\nexport const GET_PLAYLIST_INDEX = \"GET_PLAYLIST_INDEX\";\r\nexport const UPDATE_SONG_TIME = \"UPDATE_SONG_TIME\";\r\nexport const GET_SONG_FEATURES_SUCCESS = \"GET_SONG_FEATURES_SUCCESS\";\r\nexport const GET_SONG_FEATURES_ERROR = \"GET_SONG_FEATURES_ERROR\";\r\nexport const GET_SONG_FEATURES_PENDING = \"GET_SONG_FEATURES_PENDING\";\r\nexport const GET_SONG_INDEX = \"GET_SONG_INDEX\";\r\nexport const UPDATE_VOLUME = \"UPDATE_VOLUME\";\r\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\r\nexport const FETCH_USER_ERROR = \"FETCH_USER_ERROR\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {\r\n  getSongFeatures,\r\n  getSongIndex,\r\n  playSong\r\n} from \"../actions/songActions\";\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 0,\r\n    overflow: \"auto\",\r\n    scrollbarWidth: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0\",\r\n      height: \"0\"\r\n    }\r\n  },\r\n  table: {\r\n    maxWidth: 500\r\n  },\r\n  tableC: {\r\n    borderBottomColor: theme.palette.divider\r\n  },\r\n  tableRow: {\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  }\r\n});\r\n\r\nconst TrackList = props => {\r\n  const [selectedIndexSong, setSelectedIndexSong] = useState(props.songIndex);\r\n  let tableScroll = null;\r\n\r\n  useEffect(() => {\r\n    if (props.songs.playlistId) {\r\n      if (tableScroll) {\r\n        tableScroll.scrollTop = 0;\r\n      }\r\n    }\r\n  }, [props.songs.playlistId]);\r\n\r\n  useEffect(() => {\r\n    setSelectedIndexSong(props.songIndex);\r\n  }, [props.songIndex]);\r\n\r\n  const msToMinutesAndSeconds = ms => {\r\n    const minutes = Math.floor(ms / 60000);\r\n    const seconds = ((ms % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  };\r\n\r\n  const SelectSongToPlay = (song, index) => {\r\n    props.getSongIndex(index);\r\n    props.playSong(song.track);\r\n    props.getSongFeatures(song.track.id, props.token);\r\n    props.playAudio(song);\r\n  };\r\n\r\n  const { classes } = props;\r\n  if (props.songs.songs) {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className={classes.content}\r\n          ref={div => {\r\n            tableScroll = div;\r\n          }}\r\n        >\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow key=\"headertable\">\r\n                <TableCell className={classes.tableC}>TITLE</TableCell>\r\n                <TableCell className={classes.tableC} align=\"left\">\r\n                  ARTIST\r\n                </TableCell>\r\n                <TableCell className={classes.tableC} align=\"left\">\r\n                  DURATION\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.songs.songs.map((row, index) => (\r\n                <TableRow\r\n                  selected={selectedIndexSong === index ? true : false}\r\n                  className={classes.tableRow}\r\n                  hover={true}\r\n                  key={index + \"\" + row.track.id}\r\n                  onClick={() => SelectSongToPlay(row, index)}\r\n                >\r\n                  <TableCell\r\n                    className={classes.tableC}\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                  >\r\n                    {row.track.name}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableC} align=\"left\">\r\n                    {row.track.artists[0].name}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableC} align=\"left\">\r\n                    {msToMinutesAndSeconds(row.track.duration_ms)}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songs: state.songsReducer.songs ? state.songsReducer : \"\",\r\n    token: state.tokenReducer.token ? state.tokenReducer.token : \"\",\r\n    playlists: state.playlistsReducer,\r\n    songIndex: state.songsReducer.songIndex\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getSongFeatures,\r\n  getSongIndex,\r\n  playSong\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(TrackList));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchPlaylists,\r\n  fetchPlaylistSongs,\r\n  getPlaylistIndex\r\n} from \"../actions/playlistsActions\";\r\nimport {\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex\r\n} from \"../actions/songActions\";\r\n\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TrackList from \"./TrackList\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    maxHeight: \"640px\" //height of spotify album cover\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    position: \"relative\",\r\n    background: \"transparent\",\r\n    overflow: \"auto\",\r\n    scrollbarWidth: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0\",\r\n      height: \"0\"\r\n    }\r\n  },\r\n  playTitle: {\r\n    position: \"absolute\",\r\n    marginLeft: \"15px\",\r\n    marginTop: \"-25px\"\r\n  },\r\n  tracklistTotal: {\r\n    position: \"absolute\",\r\n    marginLeft: \"265px\",\r\n    marginTop: \"640px\"\r\n  }\r\n});\r\n\r\nconst Playlists = props => {\r\n  const [selectedIndexPL, setSelectedIndexPL] = useState(\r\n    props.playlists.playlistIndex\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (props.userId !== \"\" && props.token !== \"\") {\r\n      props.fetchPlaylists(props.userId, props.token);\r\n    }\r\n  }, [props.userId]);\r\n\r\n  const renderList = () => {\r\n    if (props.playlists.playlists) {\r\n      return props.playlists.playlists.map((playlist, index) => {\r\n        return (\r\n          <ListItem\r\n            variant=\"body2\"\r\n            button\r\n            selected={selectedIndexPL === index}\r\n            key={playlist.id}\r\n            onClick={() =>\r\n              FetchSongs(props.userId, playlist.id, props.token, index)\r\n            }\r\n          >\r\n            <ListItemText primary={playlist.name} />\r\n          </ListItem>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <ListItem variant=\"body2\" key=\"generic\">\r\n            <ListItemText primary=\"Loading Playlists...\" />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const FetchSongs = (userId, playlistId, token, index) => {\r\n    //We avoid fetching the same tracklist\r\n    if (props.songs.playlistId !== playlistId) {\r\n      props.fetchPlaylistSongs(userId, playlistId, token);\r\n      props.getPlaylistIndex(index);\r\n      props.getSongIndex(null);\r\n      setSelectedIndexPL(index);\r\n    }\r\n  };\r\n\r\n  const { classes } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Typography className={classes.playTitle} variant=\"overline\" noWrap>\r\n        PLAYLISTS\r\n      </Typography>\r\n      <Typography className={classes.tracklistTotal} variant=\"overline\" noWrap>\r\n        {props.songs.songs ? props.songs.songs.length + \" SONGS\" : null}\r\n      </Typography>\r\n      <div className={classes.root}>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          anchor=\"left\"\r\n        >\r\n          <List component=\"nav\">{renderList()}</List>\r\n        </Drawer>\r\n        {!props.fetchSongsPending ? (\r\n          <TrackList playAudio={props.playAudio} />\r\n        ) : null}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userId: state.userReducer.user ? state.userReducer.user.id : \"\",\r\n    token: state.tokenReducer.token ? state.tokenReducer.token : \"\",\r\n    playlists: state.playlistsReducer,\r\n    songs: state.songsReducer.songs ? state.songsReducer : \"\",\r\n    selectedSongId: state.songsReducer.songId,\r\n    fetchSongsPending: state.songsReducer.fetchSongsPending\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchPlaylists,\r\n  fetchPlaylistSongs,\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex,\r\n  getPlaylistIndex\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Playlists));\r\n","import {\r\n  FETCH_PLAYLISTS_ERROR,\r\n  FETCH_PLAYLISTS_SUCCESS,\r\n  FETCH_PLAYLISTS_PENDING,\r\n  FETCH_PLAYLIST_SONGS_ERROR,\r\n  FETCH_PLAYLIST_SONGS_PENDING,\r\n  FETCH_PLAYLIST_SONGS_SUCCESS,\r\n  GET_PLAYLIST_INDEX\r\n} from \"./types\";\r\n\r\nexport const getPlaylistIndex = playlistIndex => {\r\n  return {\r\n    type: GET_PLAYLIST_INDEX,\r\n    playlistIndex\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsPending = () => {\r\n  return {\r\n    type: FETCH_PLAYLISTS_PENDING\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsSuccess = playlists => {\r\n  return {\r\n    type: FETCH_PLAYLISTS_SUCCESS,\r\n    playlists\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsError = () => {\r\n  return {\r\n    type: FETCH_PLAYLISTS_ERROR\r\n  };\r\n};\r\n\r\nexport const fetchPlaylists = (userId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(\r\n      `https://api.spotify.com/v1/users/${userId}/playlists?limit=50`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: \"Bearer \" + accessToken\r\n        })\r\n      }\r\n    );\r\n\r\n    dispatch(fetchPlaylistsPending());\r\n\r\n    fetch(request)\r\n      .then(res => {\r\n        if (res.statusText === \"Unauthorized\") {\r\n          window.location.href = \"./\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(fetchPlaylistsSuccess(res.items));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchPlaylistsError(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsPending = () => {\r\n  return {\r\n    type: FETCH_PLAYLIST_SONGS_PENDING\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsSuccess = (songs, playlistId) => {\r\n  return {\r\n    type: FETCH_PLAYLIST_SONGS_SUCCESS,\r\n    songs,\r\n    playlistId\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsError = () => {\r\n  return {\r\n    type: FETCH_PLAYLIST_SONGS_ERROR\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongs = (userId, playlistId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(\r\n      `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: \"Bearer \" + accessToken\r\n        })\r\n      }\r\n    );\r\n\r\n    dispatch(fetchPlaylistSongsPending());\r\n\r\n    fetch(request)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(fetchPlaylistSongsSuccess(res.items, playlistId));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchPlaylistSongsError(err));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nconst styles = theme => ({\r\n  iconHover: {\r\n    color: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.light\r\n    }\r\n  }\r\n});\r\n\r\nconst IconButton = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <Icon className={classes.iconHover} style={{ fontSize: props.iconSize }}>\r\n      {props.iconName}\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(IconButton);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, IconButton } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconBCustom from \"./IconButton\";\r\nimport {\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex\r\n} from \"../actions/songActions\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  buttonSO: {\r\n    padding: \"0px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  }\r\n};\r\n\r\nconst PlaybackButtons = props => {\r\n  const [playPauseIcon, setplayPauseIcon] = useState(\r\n    !props.songPaused ? \"pause\" : \"play_arrow\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    setplayPauseIcon(!props.songPaused ? \"pause\" : \"play_arrow\");\r\n  }, [props.songPaused]);\r\n\r\n  const handleClickNext = () => {\r\n    const { songList, songId, songIndex, token } = props;\r\n\r\n    if (songId && songIndex !== null) {\r\n      if (songIndex + 1 >= songList.length) {\r\n        //back to zero because we ran out of songs\r\n        props.playSong(songList[0].track);\r\n        props.getSongFeatures(songList[0].track.id, token);\r\n        props.getSongIndex(0);\r\n        props.playAudio(songList[0]);\r\n      } else {\r\n        props.playSong(songList[songIndex + 1].track);\r\n        props.getSongFeatures(songList[songIndex + 1].track.id, token);\r\n        props.getSongIndex(songIndex + 1);\r\n        props.playAudio(songList[songIndex + 1]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClickPrevious = () => {\r\n    const { songList, songId, songIndex, token } = props;\r\n    if (songId && songIndex !== null) {\r\n      if (songIndex === 0) {\r\n        //Play the last song of the playlist since there is no previous song\r\n        props.playSong(songList[songList.length - 1].track);\r\n        props.getSongIndex(songList.length - 1);\r\n        props.getSongFeatures(songList[songList.length - 1].track.id, token);\r\n        props.playAudio(songList[songList.length - 1]);\r\n      } else {\r\n        props.playSong(songList[songIndex - 1].track);\r\n        props.getSongIndex(songIndex - 1);\r\n        props.getSongFeatures(songList[songIndex - 1].track.id, token);\r\n        props.playAudio(songList[songIndex - 1]);\r\n      }\r\n    }\r\n  };\r\n  const handleClickPlayPause = () => {\r\n    const { songPlaying, songPaused } = props;\r\n    if (songPlaying && songPaused) {\r\n      props.resumeAudio();\r\n    }\r\n    if (songPlaying && !songPaused) {\r\n      props.pauseAudio();\r\n    }\r\n  };\r\n\r\n  const { classes } = props;\r\n  return (\r\n    <Grid className={classes.root} container direction=\"row\" spacing={0}>\r\n      <Grid item>\r\n        <IconButton\r\n          disableRipple={true}\r\n          className={classes.buttonSO}\r\n          onClick={handleClickPrevious}\r\n        >\r\n          <IconBCustom iconName=\"skip_previous\" iconSize={40} />\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item>\r\n        <IconButton\r\n          disableRipple={true}\r\n          className={classes.buttonSO}\r\n          onClick={handleClickPlayPause}\r\n        >\r\n          <IconBCustom iconName={playPauseIcon} iconSize={40} />\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item>\r\n        <IconButton\r\n          disableRipple={true}\r\n          className={classes.buttonSO}\r\n          onClick={handleClickNext}\r\n        >\r\n          <IconBCustom iconName=\"skip_next\" iconSize={40} />\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songPaused: state.songsReducer.songPaused,\r\n    songPlaying: state.songsReducer.songPlaying,\r\n    songDetails: state.songsReducer.songDetails,\r\n    songList: state.songsReducer.songs ? state.songsReducer.songs : null,\r\n    songId: state.songsReducer.songId ? state.songsReducer.songId : null,\r\n    songIndex: state.songsReducer.songIndex,\r\n    token: state.tokenReducer.token ? state.tokenReducer.token : \"\"\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  playSong,\r\n  getSongFeatures,\r\n  getSongIndex\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(PlaybackButtons));\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst styles = {\r\n  image: {\r\n    maxWidth: \"640px\",\r\n    maxHeight: \"640px\" //640px\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n    boxShadow: \"2px 2px 10px #000000\"\r\n  }\r\n};\r\nconst Cover = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid item xs className={classes.image}>\r\n      <img className={classes.img} alt=\"AnalBumCover\" src={props.albumcover} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default withStyles(styles)(Cover);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 0,\r\n    position: \"relative\"\r\n  },\r\n  elapsedTimeMargin: {\r\n    verticalAlign: \"bottom\",\r\n    float: \"left\",\r\n    marginTop: \"-10px\"\r\n  },\r\n  totalTimeMargin: {\r\n    verticalAlign: \"bottom\",\r\n    float: \"right\",\r\n    marginTop: \"-10px\"\r\n  },\r\n  slider: {\r\n    \"&:hover\": {\r\n      cursor: \"default\"\r\n    },\r\n    padding: \"22px 0px\"\r\n  },\r\n  trackThickness: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: 5\r\n  },\r\n  thumbIcon: {\r\n    opacity: 1,\r\n    \"&:hover\": {\r\n      boxShadow: `0px 0px 0px 5px var(--custom-color)`\r\n    },\r\n    \"&$activated\": {\r\n      boxShadow: `0px 0px 0px 9px var(--custom-color)!important`\r\n    },\r\n    \"&$jumped\": {\r\n      boxShadow: `0px 0px 0px 9px var(--custom-color)!important`\r\n    }\r\n  },\r\n  activated: {},\r\n  jumped: {},\r\n  focused: {}\r\n});\r\n\r\nconst secondFormatter = number => {\r\n  const roundedSeconds = Math.ceil(number);\r\n  if (roundedSeconds < 10) {\r\n    return `0:0${roundedSeconds}`;\r\n  } else {\r\n    return `0:${roundedSeconds}`;\r\n  }\r\n};\r\n\r\nconst SongProgress = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        min={0}\r\n        max={30} //previews are no longer than 30 seconds\r\n        step={1}\r\n        className={classes.root}\r\n        classes={{\r\n          container: classes.slider,\r\n          track: classes.trackThickness,\r\n          thumb: classes.thumbIcon,\r\n          activated: classes.activated,\r\n          jumped: classes.jumped,\r\n          focused: classes.focused\r\n        }}\r\n        value={Math.ceil(props.songsInfo.timeElapsed)}\r\n      />\r\n\r\n      <div className={classes.elapsedTimeMargin}>\r\n        <Typography variant=\"caption\" noWrap>\r\n          {secondFormatter(props.songsInfo.timeElapsed)}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.totalTimeMargin}>\r\n        <Typography variant=\"caption\" noWrap>\r\n          0:30\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songsInfo: state.songsReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(SongProgress));\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { updateVolume } from \"../actions/\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  slider: {\r\n    padding: \"22px 0px\",\r\n    \"&:hover $thumbIcon\": {\r\n      opacity: 1\r\n    }\r\n  },\r\n  trackThickness: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: 5\r\n  },\r\n  thumbIcon: {\r\n    opacity: 0\r\n  }\r\n});\r\n\r\nconst SliderComp = props => {\r\n  const [value, setValue] = useState(props.volume);\r\n\r\n  const handleChange = (event, value) => {\r\n    setValue(value);\r\n    props.updateVolume(Math.ceil(value));\r\n  };\r\n  const { classes } = props;\r\n  return (\r\n    <Slider\r\n      min={0}\r\n      max={100}\r\n      className={classes.root}\r\n      classes={{\r\n        container: classes.slider,\r\n        track: classes.trackThickness,\r\n        thumb: classes.thumbIcon\r\n      }}\r\n      value={value}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    volume: state.soundReducer.volume\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateVolume\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(SliderComp));\r\n","import * as actionTypes from \"./types\";\r\n\r\nexport const setToken = token => {\r\n  return {\r\n    type: actionTypes.SET_TOKEN,\r\n    token\r\n  };\r\n};\r\n\r\nexport const updateVolume = volume => {\r\n  return {\r\n    type: actionTypes.UPDATE_VOLUME,\r\n    volume\r\n  };\r\n};\r\n\r\nexport const toggleHiddenPlaylist = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_HIDE_PLAYLIST\r\n  };\r\n};\r\n\r\nexport const toggleDynamicColor = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_DYNAMIC_COLOR\r\n  };\r\n};\r\n\r\nexport const toggleDarkMode = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_DARK_MODE\r\n  };\r\n};\r\n\r\nexport const fetchUserSuccess = user => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_SUCCESS,\r\n    user\r\n  };\r\n};\r\n\r\nexport const fetchUserError = () => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_ERROR\r\n  };\r\n};\r\n\r\nexport const fetchUser = accessToken => {\r\n  return dispatch => {\r\n    const request = new Request(\"https://api.spotify.com/v1/me\", {\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + accessToken\r\n      })\r\n    });\r\n\r\n    fetch(request)\r\n      .then(res => {\r\n        if (res.statusText === \"Unauthorized\") {\r\n          window.location.href = \"./\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        dispatch(fetchUserSuccess(res));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchUserError(err));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"./Slider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 0\r\n  },\r\n  volIcon: {\r\n    float: \"right\",\r\n    marginRight: \"-10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  ico: {\r\n    float: \"right\",\r\n    marginTop: \"12px\",\r\n    marginRight: \"5px\",\r\n    color: theme.palette.primary.main\r\n  }\r\n});\r\n\r\nconst Volume = props => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Grid className={classes.root} container direction=\"row\">\r\n      <Grid item xs={2}>\r\n        <Icon className={classes.ico} style={{ fontSize: 20 }}>\r\n          volume_up\r\n        </Icon>\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Slider />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Volume);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <Typography variant=\"h4\" color=\"primary\" noWrap>\r\n      {props.songDetails\r\n        ? props.songDetails.artists[0].name + \" - \" + props.songDetails.name\r\n        : null}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songDetails: state.songsReducer.songDetails\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  outer: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.6)\"\r\n  }\r\n};\r\n\r\nconst ContainerOuter = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.outer} style={{ backgroundColor: props.bcolor }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default withStyles(styles)(ContainerOuter);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  inner: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    transform: \"scale(0.89)\"\r\n  }\r\n};\r\n\r\nconst ContainerInner = props => {\r\n  const { classes } = props;\r\n  return <div className={classes.inner}>{props.children}</div>;\r\n};\r\nexport default withStyles(styles)(ContainerInner);\r\n","import React from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst spotifyauthurl = \"https://accounts.spotify.com/authorize?\";\r\nconst client_id = \"11ca528f5f3447c3913e6f903faa8999\"; // Your client id\r\nconst redirect_uri = \"https://shaggun.github.io/spotify-moody-player\"; // Or Your redirect uri\r\nconst scope =\r\n  \"playlist-read-private%20playlist-read-collaborative%20user-library-read%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state\";\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    backgroundColor: \"#1DB954\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#14813a\"\r\n    }\r\n  },\r\n  container: {\r\n    maxWidth: \"640px\"\r\n  },\r\n  text: {\r\n    paddingBottom: \"30px\"\r\n  }\r\n});\r\n\r\nconst LoginButton = props => {\r\n  const { classes } = props;\r\n\r\n  const reqURL = () => {\r\n    return (window.location.href =\r\n      spotifyauthurl +\r\n      \"client_id=\" +\r\n      client_id +\r\n      \"&scope=\" +\r\n      scope +\r\n      \"&response_type=token\" +\r\n      \"&redirect_uri=\" +\r\n      redirect_uri);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Typography className={classes.text} variant=\"h4\" color=\"primary\">\r\n        The colors will match the mood of the song.\r\n      </Typography>\r\n      <Fab variant=\"extended\" className={classes.fab} onClick={reqURL}>\r\n        <Typography color=\"primary\">LOG IN WITH SPOTIFY</Typography>\r\n      </Fab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(LoginButton);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport {\r\n  toggleDarkMode,\r\n  toggleDynamicColor,\r\n  toggleHiddenPlaylist\r\n} from \"../actions\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 60,\r\n    right: 0,\r\n    left: -100\r\n  },\r\n  wholeSet: {\r\n    position: \"relative\"\r\n  },\r\n  fieldSet: {\r\n    marginLeft: \"10px\"\r\n  }\r\n});\r\n\r\nconst SettingsPanel = props => {\r\n  const [hiddenPlaylist, setHiddenPlaylist] = useState(\r\n    props.switchState.uiHiddenPlaylist\r\n  );\r\n  const [dynamicColor, setDynamicColor] = useState(\r\n    props.switchState.uiDynamicColor\r\n  );\r\n  const [darkMode, setDarkMode] = useState(props.switchState.uiDarkMode);\r\n\r\n  const handleChangeSettings = name => event => {\r\n    switch (name) {\r\n      case \"hiddenPlaylist\":\r\n        props.toggleHiddenPlaylist();\r\n        return setHiddenPlaylist(event.target.checked);\r\n      case \"dynamicColor\":\r\n        props.toggleDynamicColor();\r\n        return setDynamicColor(event.target.checked);\r\n      case \"darkMode\":\r\n        props.toggleDarkMode();\r\n        return setDarkMode(event.target.checked);\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const { classes } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <FormControl component=\"fieldset\" className={classes.fieldSet}>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={hiddenPlaylist}\r\n                onChange={handleChangeSettings(\"hiddenPlaylist\")}\r\n                value=\"hiddenPlay\"\r\n              />\r\n            }\r\n            label=\"Hide Playlist\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={dynamicColor}\r\n                onChange={handleChangeSettings(\"dynamicColor\")}\r\n                value=\"dynamicColor\"\r\n              />\r\n            }\r\n            label=\"Dynamic Color\"\r\n          />\r\n          {!dynamicColor ? (\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={darkMode}\r\n                  onChange={handleChangeSettings(\"darkMode\")}\r\n                  value=\"darkMode\"\r\n                />\r\n              }\r\n              label=\"Dark Mode\"\r\n            />\r\n          ) : null}\r\n        </FormGroup>\r\n      </FormControl>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    switchState: state.uiSwitches\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleDarkMode,\r\n  toggleDynamicColor,\r\n  toggleHiddenPlaylist\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(SettingsPanel));\r\n","import red from \"@material-ui/core/colors/red\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport lime from \"@material-ui/core/colors/lime\";\r\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport teal from \"@material-ui/core/colors/teal\";\r\nimport cyan from \"@material-ui/core/colors/cyan\";\r\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n//Shade text is the last shade where the text is dark\r\n//a higher shade means that the background color is dark enough for the text to change to a light color\r\nconst colorRed = {\r\n  color: red,\r\n  shadeText: 300\r\n};\r\nconst colorDeepOrange = {\r\n  color: deepOrange,\r\n  shadeText: 400\r\n};\r\nconst colorOrange = {\r\n  color: orange,\r\n  shadeText: 700\r\n};\r\nconst colorAmber = {\r\n  color: amber,\r\n  shadeText: 900\r\n};\r\nconst colorYellow = {\r\n  color: yellow,\r\n  shadeText: 900\r\n};\r\nconst colorLime = {\r\n  color: lime,\r\n  shadeText: 800\r\n};\r\nconst colorLightGreen = {\r\n  color: lightGreen,\r\n  shadeText: 600\r\n};\r\nconst colorGreen = {\r\n  color: green,\r\n  shadeText: 500\r\n};\r\nconst colorTeal = {\r\n  color: teal,\r\n  shadeText: 300\r\n};\r\nconst colorCyan = {\r\n  color: cyan,\r\n  shadeText: 600\r\n};\r\nconst colorLightBlue = {\r\n  color: lightBlue,\r\n  shadeText: 500\r\n};\r\nconst colorBlue = {\r\n  color: blue,\r\n  shadeText: 400\r\n};\r\nconst colorIndigo = {\r\n  color: indigo,\r\n  shadeText: 200\r\n};\r\nconst colorDeepPurple = {\r\n  color: deepPurple,\r\n  shadeText: 200\r\n};\r\n\r\nconst colors = [\r\n  colorRed,\r\n  colorDeepOrange,\r\n  colorOrange,\r\n  colorAmber,\r\n  colorYellow,\r\n  colorLime,\r\n  colorLightGreen,\r\n  colorGreen,\r\n  colorTeal,\r\n  colorCyan,\r\n  colorLightBlue,\r\n  colorBlue,\r\n  colorIndigo,\r\n  colorDeepPurple\r\n];\r\n\r\n//It returns an integer [0,13] representing a color according to song's energy\r\n//y=13x\r\nconst energyToColor = energy => Math.round(13 * energy);\r\n\r\n//It returns a shade [100,200,300...,900] representing the color intensity according to how positive a song is\r\n//y=800*x+100\r\nconst valenceToShade = valence => Math.round((800 * valence + 100) / 100) * 100;\r\n\r\n//This function is not used anymore\r\n//Left here because it makes sense in the context of the project and it's easy\r\n//to understand what it does in case it's needed for another project.\r\nexport const createDynamicTheme = (energy, valence) => {\r\n  const colorIndex = energyToColor(energy);\r\n  const colorShade = valenceToShade(valence);\r\n  const dynamicColor = colors[colorIndex].color[colorShade];\r\n  const dynamicTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: dynamicColor\r\n      },\r\n      secondary: {\r\n        main: dynamicColor\r\n      },\r\n      background: {\r\n        paper:\r\n          colors[colorIndex].shadeText <= colorShade ? \"#ffffff\" : \"#424242\"\r\n      },\r\n      text: {\r\n        primary:\r\n          colors[colorIndex].shadeText <= colorShade ? \"#424242\" : \"#ffffff\"\r\n      }\r\n    },\r\n    typography: { useNextVariants: true }\r\n  });\r\n  return dynamicTheme;\r\n};\r\n\r\nexport const colorShade = (energy, valence) => {\r\n  const colorIndex = energyToColor(energy);\r\n  const colorShade = valenceToShade(valence);\r\n  return colors[colorIndex].color[colorShade];\r\n};\r\n\r\n//This function is used to determine if the background is dark enough to switch to a light color font\r\nexport const isTextDark = (energy, valence) => {\r\n  const colorIndex = energyToColor(energy);\r\n  const colorShade = valenceToShade(valence);\r\n  return colors[colorIndex].shadeText >= colorShade ? true : false;\r\n};\r\n\r\nexport const hexToRGBA = (hex, alpha) => {\r\n  const hexs = hex.replace(\"#\", \"\");\r\n  const r = parseInt(hexs.substring(0, 2), 16);\r\n  const g = parseInt(hexs.substring(2, 4), 16);\r\n  const b = parseInt(hexs.substring(4, 6), 16);\r\n  return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\r\n};\r\n\r\nexport const rgb2rgba = (color, alpha) => {\r\n  let rgbstringtrimmed = color.slice(0, -1);\r\n  rgbstringtrimmed = rgbstringtrimmed.replace(\"rgb\", \"rgba\");\r\n  return rgbstringtrimmed + `, ${alpha})`;\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Playlists from \"./Playlists\";\r\nimport PlaybackButtons from \"./PlaybackButtons\";\r\nimport Cover from \"./Cover\";\r\nimport SongProgress from \"./SongProgress\";\r\nimport Volume from \"./Volume\";\r\nimport IconBCustom from \"./IconButton\";\r\nimport SongHeader from \"./Header\";\r\nimport ContainerOuter from \"./containers/ContainerOuter\";\r\nimport ContainerInner from \"./containers/ContainerInner\";\r\nimport LogInButton from \"./LoginButton\";\r\nimport defaultCover from \"../assets/cover.jpg\";\r\nimport SettingsSwitches from \"./SettingsSwitches\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport {\r\n  colorShade,\r\n  isTextDark,\r\n  hexToRGBA\r\n} from \"../scripts/createDynamicTheme\";\r\nimport {\r\n  stopSong,\r\n  pauseSong,\r\n  resumeSong,\r\n  updateSongTime\r\n} from \"../actions/songActions\";\r\n\r\nconst themeDark = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\", // Switching the dark mode on is a single property value change.\r\n    primary: {\r\n      main: \"#ffffff\",\r\n      light: \"#1DB954\"\r\n    },\r\n    secondary: {\r\n      main: \"#1DB954\"\r\n    }\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nconst themeLight = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n\r\n    primary: {\r\n      main: \"#242424\",\r\n      light: \"#1DB954\"\r\n    },\r\n    secondary: {\r\n      main: \"#1DB954\"\r\n    }\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    height: \"100vh\"\r\n  },\r\n  gridContainer: {},\r\n  topRow: {\r\n    height: \"85vh\",\r\n    overflow: \"hidden\"\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 60,\r\n    right: 0,\r\n    left: -100\r\n  },\r\n  iconSelection: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  iconPlaceholder: {\r\n    color: \"rgba(0,0,0,0)\"\r\n  },\r\n  wholeSet: {\r\n    position: \"relative\"\r\n  },\r\n  fieldSet: {\r\n    marginLeft: \"10px\"\r\n  },\r\n  ContainerOuter: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\"\r\n  },\r\n  ContainerInner: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    transform: \"scale(0.89)\"\r\n  }\r\n});\r\n\r\nconst Layout = props => {\r\n  const [open, setOpen] = useState(false);\r\n  const [dynamicCover, setDynamicCover] = useState(defaultCover);\r\n  const [dynamicBGColor, setDynamicBGColor] = useState(\"rgba(2,136,209,0.6)\"); //default song\r\n  const [dynamicDarkText, setDynamicDarkText] = useState(false); //dark text for a light theme according to color shade\r\n  const routine = useRef();\r\n  const audio = useRef();\r\n  useEffect(() => {\r\n    if (props.songFeatures.energy) {\r\n      setDynamicCover(props.songDetails.album.images[0].url);\r\n      setDynamicBGColor(\r\n        hexToRGBA(\r\n          colorShade(props.songFeatures.energy, props.songFeatures.valence),\r\n          0.6\r\n        )\r\n      );\r\n      setDynamicDarkText(\r\n        isTextDark(props.songFeatures.energy, props.songFeatures.valence)\r\n      );\r\n    }\r\n  }, [props.songFeatures]);\r\n\r\n  useEffect(() => {\r\n    if (audio.current !== undefined) {\r\n      audio.current.volume = props.volume / 100;\r\n    }\r\n  }, [props.volume]);\r\n\r\n  useEffect(() => {\r\n    if (audio.current) {\r\n      if (props.songPaused) {\r\n        clearInterval(routine.current);\r\n        audio.current.pause();\r\n      } else {\r\n        audio.current.play();\r\n        calculateTime();\r\n      }\r\n    }\r\n  }, [props.songPaused]);\r\n\r\n  useEffect(() => {\r\n    if (!props.songPlaying) {\r\n      clearInterval(routine.current);\r\n      updateSongTime(0);\r\n    }\r\n  }, [props.songPlaying]);\r\n\r\n  const calculateTime = () => {\r\n    clearInterval(routine.current);\r\n    const routinec = setInterval(() => {\r\n      if (audio.current) {\r\n        if (audio.current.ended) {\r\n          clearInterval(routine.current);\r\n          pauseSong();\r\n          props.updateSongTime(0);\r\n        } else if (!props.songsInfo.songPaused) {\r\n          props.updateSongTime(audio.current.currentTime);\r\n        }\r\n      }\r\n    }, 1000);\r\n    routine.current = routinec;\r\n  };\r\n\r\n  const stopSong = () => {\r\n    if (audio.current) {\r\n      audio.current.pause();\r\n      props.stopSong();\r\n      clearInterval(routine.current);\r\n      props.updateSongTime(0);\r\n    } else {\r\n      props.stopSong();\r\n      clearInterval(routine.current);\r\n      props.updateSongTime(0);\r\n    }\r\n  };\r\n\r\n  const resumeSong = () => {\r\n    if (audio.current) {\r\n      props.resumeSong();\r\n    }\r\n  };\r\n\r\n  const pauseSong = () => {\r\n    if (audio.current) {\r\n      props.pauseSong();\r\n      audio.current.pause();\r\n      clearInterval(routine.current);\r\n    }\r\n  };\r\n\r\n  const playAudio = song => {\r\n    const { updateSongTime } = props;\r\n    clearInterval(routine.current);\r\n    if (song.track.preview_url !== null) {\r\n      if (audio.current === undefined) {\r\n        audio.current = new Audio(song.track.preview_url);\r\n      } else {\r\n        updateSongTime(0);\r\n        audio.current.pause();\r\n        audio.current = new Audio(song.track.preview_url);\r\n        audio.current.play();\r\n        calculateTime();\r\n      }\r\n    } else {\r\n      stopSong();\r\n    }\r\n  };\r\n\r\n  const handleClickSettings = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const { classes } = props;\r\n  document.body.style.backgroundImage = `url(${dynamicCover})`;\r\n\r\n  return (\r\n    <MuiThemeProvider\r\n      theme={\r\n        props.switchState.uiDynamicColor\r\n          ? dynamicDarkText\r\n            ? themeLight\r\n            : themeDark\r\n          : props.switchState.uiDarkMode\r\n          ? themeDark\r\n          : themeLight\r\n      }\r\n    >\r\n      <ContainerOuter\r\n        bcolor={\r\n          props.switchState.uiDynamicColor\r\n            ? dynamicBGColor\r\n            : props.switchState.uiDarkMode\r\n            ? \"rgba(0, 0, 0, 0.6)\"\r\n            : \"rgba(255, 255, 255, 0.4)\"\r\n        }\r\n      >\r\n        <ContainerInner>\r\n          <div className={classes.root}>\r\n            <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              alignItems=\"stretch\"\r\n              spacing={16}\r\n              className={classes.gridContainer}\r\n            >\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n                spacing={16}\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item xs={1}>\r\n                  <Icon\r\n                    className={classes.iconPlaceholder}\r\n                    style={{ fontSize: 40 }}\r\n                  >\r\n                    fiber_manual_record\r\n                  </Icon>\r\n                </Grid>\r\n                <Grid item zeroMinWidth>\r\n                  <SongHeader />\r\n                </Grid>\r\n                <Grid item xs={1} container justify=\"flex-end\">\r\n                  {props.auth.token ? (\r\n                    <div className={classes.wholeSet}>\r\n                      <ClickAwayListener onClickAway={handleClickAway}>\r\n                        <div>\r\n                          <IconButton\r\n                            disableRipple={true}\r\n                            className={classes.iconSelection}\r\n                            onClick={handleClickSettings}\r\n                          >\r\n                            <IconBCustom iconName=\"more_horiz\" iconSize={40} />\r\n                          </IconButton>\r\n                          {open ? <SettingsSwitches /> : null}\r\n                        </div>\r\n                      </ClickAwayListener>\r\n                    </div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              {props.switchState.uiHiddenPlaylist ? (\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  direction=\"row\"\r\n                  spacing={16}\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  className={classes.topRow}\r\n                >\r\n                  <Cover albumcover={dynamicCover} />\r\n                </Grid>\r\n              ) : (\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  direction=\"row\"\r\n                  spacing={16}\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  className={classes.topRow}\r\n                >\r\n                  <Grid item container xs justify=\"flex-end\">\r\n                    <Cover albumcover={dynamicCover} />\r\n                  </Grid>\r\n                  <Grid item container xs={6}>\r\n                    {props.auth.token ? (\r\n                      <Playlists playAudio={playAudio} />\r\n                    ) : (\r\n                      <LogInButton />\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                spacing={16}\r\n              >\r\n                {props.auth.token ? (\r\n                  <React.Fragment>\r\n                    <Grid item>\r\n                      <PlaybackButtons\r\n                        pauseAudio={pauseSong}\r\n                        resumeAudio={resumeSong}\r\n                        playAudio={playAudio}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <SongProgress />\r\n                    </Grid>\r\n                    <Grid item sm={1}>\r\n                      <Volume />\r\n                    </Grid>\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </ContainerInner>\r\n      </ContainerOuter>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    switchState: state.uiSwitches,\r\n    auth: state.tokenReducer,\r\n    songDetails: state.songsReducer.songDetails,\r\n    songFeatures: state.songsReducer.features\r\n      ? state.songsReducer.features\r\n      : \"\",\r\n    songsInfo: state.songsReducer,\r\n    volume: state.soundReducer.volume,\r\n    songPaused: state.songsReducer.songPaused,\r\n    songPlaying: state.songsReducer.songPlaying\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  stopSong,\r\n  pauseSong,\r\n  resumeSong,\r\n  updateSongTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Layout));\r\n","import React, { useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { connect } from \"react-redux\";\r\nimport { setToken, fetchUser } from \"../actions\";\r\nconst App = props => {\r\n  useEffect(() => {\r\n    let hashParams = {};\r\n    let e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    if (hashParams.access_token) {\r\n      props.setToken(hashParams.access_token);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.token.token) {\r\n      props.fetchUser(props.token.token);\r\n    }\r\n  }, [props.token]);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <Layout />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.tokenReducer\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setToken, fetchUser }\r\n)(App);\r\n","import {\r\n  TOGGLE_HIDE_PLAYLIST,\r\n  TOGGLE_DYNAMIC_COLOR,\r\n  TOGGLE_DARK_MODE\r\n} from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  uiHiddenPlaylist: false,\r\n  uiDynamicColor: true,\r\n  uiDarkMode: true\r\n};\r\n\r\nexport const uiReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_HIDE_PLAYLIST:\r\n      return {\r\n        ...state,\r\n        uiHiddenPlaylist: !state.uiHiddenPlaylist\r\n      };\r\n    case TOGGLE_DYNAMIC_COLOR:\r\n      return {\r\n        ...state,\r\n        uiDynamicColor: !state.uiDynamicColor\r\n      };\r\n    case TOGGLE_DARK_MODE:\r\n      return {\r\n        ...state,\r\n        uiDarkMode: !state.uiDarkMode\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import { FETCH_USER_SUCCESS, FETCH_USER_ERROR } from \"../actions/types\";\r\nexport const userReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        fetchUserError: false\r\n      };\r\n\r\n    case FETCH_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        fetchUserError: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import {\r\n  FETCH_PLAYLISTS_SUCCESS,\r\n  FETCH_PLAYLISTS_ERROR,\r\n  FETCH_PLAYLISTS_PENDING,\r\n  GET_PLAYLIST_INDEX\r\n} from \"../actions/types\";\r\n\r\nexport const playlistsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PLAYLISTS_PENDING:\r\n      return {\r\n        fetchPlaylistsPending: true,\r\n        ...state\r\n      };\r\n\r\n    case FETCH_PLAYLISTS_SUCCESS:\r\n      return {\r\n        playlists: action.playlists,\r\n        fetchPlaylistError: false,\r\n        fetchPlaylistsPending: false,\r\n        ...state\r\n      };\r\n\r\n    case FETCH_PLAYLISTS_ERROR:\r\n      return {\r\n        fetchPlaylistError: true,\r\n        fetchPlaylistsPending: false,\r\n        ...state\r\n      };\r\n    case GET_PLAYLIST_INDEX:\r\n      return {\r\n        ...state,\r\n        playlistIndex: action.playlistIndex\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playlistsReducer;\r\n","import {\r\n  FETCH_PLAYLIST_SONGS_ERROR,\r\n  FETCH_PLAYLIST_SONGS_PENDING,\r\n  FETCH_PLAYLIST_SONGS_SUCCESS,\r\n  PLAY_SONG,\r\n  STOP_SONG,\r\n  PAUSE_SONG,\r\n  RESUME_SONG,\r\n  UPDATE_SONG_TIME,\r\n  GET_SONG_FEATURES_ERROR,\r\n  GET_SONG_FEATURES_PENDING,\r\n  GET_SONG_FEATURES_SUCCESS,\r\n  GET_SONG_INDEX\r\n} from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  fetchSongsPending: true,\r\n  songPlaying: false,\r\n  timeElapsed: 0,\r\n  songId: 0,\r\n  viewType: \"songs\",\r\n  songPaused: true\r\n};\r\n\r\nexport const songsReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PLAYLIST_SONGS_PENDING:\r\n      return {\r\n        ...state,\r\n        fetchSongsPending: true\r\n      };\r\n    case FETCH_PLAYLIST_SONGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        songs: action.songs,\r\n        fetchArtistSongsError: false,\r\n        fetchArtistSongsPending: false,\r\n        playlistId: action.playlistId,\r\n        fetchSongsPending: false\r\n      };\r\n    case FETCH_PLAYLIST_SONGS_ERROR:\r\n      return {\r\n        ...state,\r\n        fetchArtistSongsError: true,\r\n        fetchArtistSongsPending: false,\r\n        fetchSongsPending: true\r\n      };\r\n    case PLAY_SONG:\r\n      return {\r\n        ...state,\r\n        songPlaying: true,\r\n        songDetails: action.song,\r\n        songId: action.song.id,\r\n        timeElapsed: 0,\r\n        songPaused: false\r\n      };\r\n    case STOP_SONG:\r\n      return {\r\n        ...state,\r\n        songPlaying: false,\r\n        timeElapsed: 0,\r\n        songPaused: true\r\n      };\r\n    case PAUSE_SONG:\r\n      return {\r\n        ...state,\r\n        songPaused: true\r\n      };\r\n    case RESUME_SONG:\r\n      return {\r\n        ...state,\r\n        songPaused: false\r\n      };\r\n    case UPDATE_SONG_TIME:\r\n      return {\r\n        ...state,\r\n        timeElapsed: action.time\r\n      };\r\n    case GET_SONG_INDEX:\r\n      return {\r\n        ...state,\r\n        songIndex: action.songIndex\r\n      };\r\n    case GET_SONG_FEATURES_ERROR:\r\n      return {\r\n        ...state,\r\n        getSongFeaturesError: true,\r\n        getSongFeaturesPending: false\r\n      };\r\n    case GET_SONG_FEATURES_PENDING:\r\n      return {\r\n        ...state,\r\n        getSongFeaturesPending: true,\r\n        getSongFeaturesError: false\r\n      };\r\n    case GET_SONG_FEATURES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        features: action.features,\r\n        getSongFeaturesError: false,\r\n        getSongFeaturesPending: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default songsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { SET_TOKEN, UPDATE_VOLUME } from \"../actions/types\";\r\nimport { uiReducer as uiSwitches } from \"./uiReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport playlistsReducer from \"./playlistsReducer\";\r\nimport songsReducer from \"./songsReducer\";\r\n\r\nconst tokenReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.token\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst soundReducer = (state = { volume: 100 }, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_VOLUME:\r\n      return {\r\n        volume: action.volume\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  userReducer,\r\n  uiSwitches,\r\n  playlistsReducer,\r\n  songsReducer,\r\n  soundReducer,\r\n  tokenReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport \"./Style.css\"; //needed for background image in body\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}